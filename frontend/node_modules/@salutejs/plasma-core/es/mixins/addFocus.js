import { css } from 'styled-components';
import { buttonFocused } from '../tokens';
import 'focus-visible';
export var syntheticFocus = function syntheticFocus(ruleset, focused) {
  return css(["&.focus-visible:focus,&[data-focus-visible-added]{outline:none;", "}", ";"], ruleset, focused && ruleset);
};

/**
 * Миксин для добавления фокусной рамки к элементу через псевдоэлемент before
 * @param {FocusProps} props
 * @example
 * // Выведет фокусную рамку размером 2em, скруглением 5em, отступом 2em и цветом 'rebeccapurple'.
 * addFocus({
 *  outlineSize: '2em',
 *  outlineOffset: '2em',
 *  outlineRadius: '5em',
 *  outlineColor: 'rebeccapurple',
 * });
 * @example
 * // Выведет outline размером 4em, скруглением 10px 1px, без отступа и цветом 'greenyellow'.
 * addFocus({
 *  outlineSize: '4em',
 *  outlineOffset: '0',
 *  outlineRadius: '10em 1em',
 *  outlineColor: 'greenyellow',
 * });
 */
export var addFocus = function addFocus(_ref) {
  var lowPerformance = _ref.lowPerformance,
    focused = _ref.focused,
    _ref$outlined = _ref.outlined,
    outlined = _ref$outlined === void 0 ? true : _ref$outlined,
    _ref$outlineSize = _ref.outlineSize,
    outlineSize = _ref$outlineSize === void 0 ? '0.125rem' : _ref$outlineSize,
    _ref$outlineOffset = _ref.outlineOffset,
    outlineOffset = _ref$outlineOffset === void 0 ? outlineSize : _ref$outlineOffset,
    _ref$outlineColor = _ref.outlineColor,
    outlineColor = _ref$outlineColor === void 0 ? buttonFocused : _ref$outlineColor,
    _ref$outlineRadius = _ref.outlineRadius,
    outlineRadius = _ref$outlineRadius === void 0 ? 0 : _ref$outlineRadius,
    _ref$synthesizeFocus = _ref.synthesizeFocus,
    synthesizeFocus = _ref$synthesizeFocus === void 0 ? syntheticFocus : _ref$synthesizeFocus;
  return outlined && css(["position:relative;&::before{content:'';position:absolute;top:-", ";left:-", ";right:-", ";bottom:-", ";display:block;box-sizing:content-box;border:", " solid transparent;border-radius:", ";transition:", ";pointer-events:none;}", ""], outlineOffset, outlineOffset, outlineOffset, outlineOffset, outlineSize, outlineRadius, lowPerformance ? 'unset' : 'box-shadow 0.2s ease-in-out', synthesizeFocus(css(["&::before{box-shadow:0 0 0 ", " ", ";}"], outlineSize, outlineColor), focused));
};