var _excluded = ["children", "currency", "minimumFractionDigits", "stroke", "periodicity"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css } from 'styled-components';
import { formatCurrency } from '../../utils';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Price/Price');
var StyledPrice = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma__sc-1owlanf-0"
})(["", ";"], function (_ref) {
  var $stroke = _ref.$stroke;
  return $stroke && css(["text-decoration:line-through;"]);
});
var StyledPeriodicity = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma__sc-1owlanf-1"
})(["padding-left:0.25rem;"]);

/**
 * Компонент для отображения цены / стоимости / суммы.
 */
export var Price = function Price(_ref2) {
  var children = _ref2.children,
    _ref2$currency = _ref2.currency,
    currency = _ref2$currency === void 0 ? 'rub' : _ref2$currency,
    _ref2$minimumFraction = _ref2.minimumFractionDigits,
    minimumFractionDigits = _ref2$minimumFraction === void 0 ? 0 : _ref2$minimumFraction,
    _ref2$stroke = _ref2.stroke,
    stroke = _ref2$stroke === void 0 ? false : _ref2$stroke,
    periodicity = _ref2.periodicity,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/React.createElement(StyledPrice, _extends({
    $stroke: stroke
  }, rest), formatCurrency(children, currency, minimumFractionDigits), periodicity && /*#__PURE__*/React.createElement(StyledPeriodicity, null, periodicity));
};