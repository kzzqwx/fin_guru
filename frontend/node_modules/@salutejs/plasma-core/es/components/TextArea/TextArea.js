import styled, { css } from 'styled-components';
import { applyInputStyles } from '../Input/Input.mixins';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('TextArea/TextArea');
export var applyTextAreaCssProperties = function applyTextAreaCssProperties(_ref) {
  var height = _ref.height,
    width = _ref.width;
  var computedHeight = !Number.isNaN(Number(height)) ? "".concat(height, "rem") : height;
  var computedWidth = !Number.isNaN(Number(width)) ? "".concat(width, "rem") : width;
  return css(["--plasma-textarea-height:", ";--plasma-textarea-width:", ";"], computedHeight, computedWidth);
};
/**
 * Base textarea.
 */
export var TextArea = /*#__PURE__*/styled.textarea.withConfig({
  componentId: "plasma__sc-19ztps1-0"
})(["", " ", " display:block;min-height:3.5rem;height:", ";width:", ";", ""], applyInputStyles, applyTextAreaCssProperties, function (_ref2) {
  var rows = _ref2.rows;
  return rows ? 'unset' : 'var(--plasma-textarea-height, 9.375rem)';
}, function (_ref3) {
  var cols = _ref3.cols;
  return cols ? 'unset' : 'var(--plasma-textarea-width, 100%)';
}, function (_ref4) {
  var resize = _ref4.resize,
    cols = _ref4.cols;
  return css(["", " ", ""], resize && "resize: ".concat(resize, ";"), resize !== 'both' && resize !== 'horizontal' && !cols && 'min-width: var(--plasma-textarea-width, 100%); max-width: var(--plasma-textarea-width, 100%)');
});