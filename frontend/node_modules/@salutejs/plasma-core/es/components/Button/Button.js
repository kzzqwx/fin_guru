function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import styled from 'styled-components';
import { applyDisabled, applyBlur, applyEllipsis } from '../../mixins';
import { Spinner } from '../Spinner';
/**
 * Корневой элемент для стилизации кнопки.
 * Должен быть передан в функцию `createButton`.
 */
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Button/Button');
export var ButtonRoot = /*#__PURE__*/styled.button.withConfig({
  componentId: "plasma__sc-14cj1yw-0"
})(["position:relative;display:inline-flex;align-items:center;box-sizing:border-box;justify-content:center;appearance:none;border:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);a&{text-decoration:none;}&:focus{outline:none;}", " ", ""], function (_ref) {
  var isLoading = _ref.$isLoading;
  return !isLoading && applyDisabled;
}, applyBlur);

/**
 * Элемент лоадера для кнопки.
 */
export var ButtonLoader = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-14cj1yw-1"
})(["position:absolute;"]);

/**
 * Спиннер по умолчанию с фиксированной шириной.
 */
export var StyledSpinner = /*#__PURE__*/styled(Spinner).withConfig({
  componentId: "plasma__sc-14cj1yw-2"
})(["width:1.375rem;"]);

/**
 * Обёртка для содержимого кнопки.
 */
export var ButtonContentWrapper = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma__sc-14cj1yw-3"
})(["display:flex;align-items:inherit;justify-content:inherit;width:100%;", ""], function (_ref2) {
  var isLoading = _ref2.$isLoading;
  return isLoading && 'opacity: 0;';
});

/**
 * A text wrapping element, that used when `text` prop is passed.
 * @private
 */
export var ButtonText = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma__sc-14cj1yw-4"
})(["box-sizing:border-box;", " ", " ", ""], applyEllipsis, function (_ref3) {
  var isContentLeft = _ref3.$isContentLeft;
  return isContentLeft && 'margin-left: 0.375rem;';
}, function (_ref4) {
  var isContentRight = _ref4.$isContentRight;
  return isContentRight && 'margin-right: 0.375rem;';
});

/**
 * Базовая кнопка.
 * @deprecated
 */
export var Button = /*#__PURE__*/React.forwardRef(
// eslint-disable-next-line prefer-arrow-callback
function Button(props, ref) {
  return /*#__PURE__*/React.createElement(ButtonRoot, _extends({
    ref: ref
  }, props));
});
Button.defaultProps = {
  pin: 'square-square',
  outlined: false
};