function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import React, { useRef, useState, useEffect, useCallback } from 'react';
import styled, { css, keyframes } from 'styled-components';
import { Fade } from '../Fade';
import { safeFlushSync } from '../../utils';
import { Toast, StyledRoot as ToastStyledRoot } from './Toast';
import { useToast } from './useToast';
var showAnimation = function showAnimation(position) {
  return keyframes(["0%{transform:translate(-50%,", "5rem);opacity:0;}80%{transform:translate(-50%,0);opacity:0.7;}100%{opacity:1;}"], position === 'top' && '-');
};
var hideAnimation = function hideAnimation(position) {
  return keyframes(["0%{opacity:1;}20%{transform:translate(-50%,0);opacity:0.7;}100%{transform:translate(-50%,", "5rem);opacity:0;}"], position === 'top' && '-');
};
var fadeIn = /*#__PURE__*/keyframes(["from{opacity:0;}to{opacity:1;}"]);
var fadeOut = /*#__PURE__*/keyframes(["from{opacity:1;}to{opacity:0;}"]);
var StyledFade = /*#__PURE__*/styled(Fade).withConfig({
  componentId: "plasma__sc-5qbx6t-0"
})(["", ";"], function (_ref) {
  var isVisible = _ref.isVisible;
  return css(["animation:300ms ", ";"], isVisible ? fadeIn : fadeOut);
});
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-5qbx6t-1"
})(["position:fixed;left:50%;z-index:1000;transform:translateX(-50%);", ";display:flex;width:0;", "{transform:translateX(-50%);max-width:calc(100vw - 5rem);flex-shrink:0;}"], function (_ref2) {
  var $position = _ref2.$position,
    isVisible = _ref2.isVisible,
    _ref2$$offset = _ref2.$offset,
    $offset = _ref2$$offset === void 0 ? 0 : _ref2$$offset;
  return css(["", ":", "rem;animation:300ms ", ";"], $position, $offset + 5, isVisible ? showAnimation($position) : hideAnimation($position));
}, ToastStyledRoot);

/**
 * Создаёт <div />, который внутри себя содержит тост.
 * Цикл: show => timeout => hide.
 */
export var ToastController = function ToastController(_ref3) {
  var role = _ref3.role,
    text = _ref3.text,
    contentLeft = _ref3.contentLeft,
    position = _ref3.position,
    timeout = _ref3.timeout,
    fade = _ref3.fade,
    offset = _ref3.offset;
  var _useToast = useToast(),
    hideToast = _useToast.hideToast;
  var _useState = useState(true),
    _useState2 = _slicedToArray(_useState, 2),
    isVisible = _useState2[0],
    setIsVisible = _useState2[1];
  var hideTimeout = useRef(null);
  var toastKey = "".concat(text).concat(position);
  var animationEndHandler = useCallback(function () {
    if (!isVisible) {
      hideToast();
      safeFlushSync(function () {
        setIsVisible(true); // Необходимо вернуть булево к следующему вызову тоста
      });
    }
    if (isVisible) {
      hideTimeout.current = setTimeout(function () {
        setIsVisible(false);
      }, timeout);
    }
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [timeout, isVisible]);
  useEffect(function () {
    if (timeout === null && hideTimeout.current !== null) {
      clearTimeout(hideTimeout.current);
    }
  }, [timeout]);
  useEffect(function () {
    return function () {
      if (hideTimeout.current !== null) {
        clearTimeout(hideTimeout.current);
      }
    };
  }, []);
  if (!text || !position) {
    return null;
  }
  return /*#__PURE__*/React.createElement(React.Fragment, null, fade && /*#__PURE__*/React.createElement(StyledFade, {
    isVisible: isVisible,
    placement: position
  }), /*#__PURE__*/React.createElement(StyledRoot, {
    key: toastKey,
    $position: position,
    $offset: offset,
    isVisible: isVisible,
    onAnimationEnd: animationEndHandler
  }, /*#__PURE__*/React.createElement(Toast, {
    role: role,
    text: text,
    contentLeft: contentLeft
  })));
};