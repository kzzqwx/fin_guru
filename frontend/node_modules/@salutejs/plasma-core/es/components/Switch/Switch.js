var _excluded = ["name", "value", "label", "checked", "defaultChecked", "disabled", "readOnly", "pressed", "focused", "outlined", "tabIndex", "onChange", "onFocus", "onBlur"];
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import React from 'react';
import styled, { css } from 'styled-components';
import { body1 } from '../../tokens';
import { applyDisabled, addFocus, shadows, applyEllipsis } from '../../mixins';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Switch/Switch');
var triggerWidth = 'var(--plasma-switch-trigger-width, 2.75rem)';
var triggerHeight = 'var(--plasma-switch-trigger-height, 1.75rem)';
var StyledRoot = /*#__PURE__*/styled.label.withConfig({
  componentId: "plasma__sc-b4nbiv-0"
})(["position:relative;display:flex;align-items:center;justify-content:space-between;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);&:focus{outline:0 none;}", ""], applyDisabled);
var StyledInput = /*#__PURE__*/styled.input.withConfig({
  componentId: "plasma__sc-b4nbiv-1"
})(["position:absolute;right:0;margin:0;opacity:0;width:", ";height:", ";&:focus{outline:0 none;}"], triggerWidth, triggerHeight);
var synthesizeFocus = function synthesizeFocus(ruleset, focused) {
  return css([".focus-visible:focus > &,", ".focus-visible:focus ~ &{", ";}", ";"], StyledInput, ruleset, focused && ruleset);
};
var StyledTrigger = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-b4nbiv-2"
})(["position:relative;display:flex;flex:0 0 ", ";width:", ";height:", ";margin-left:auto;border-radius:0.875rem;background-color:var(--plasma-switch-trigger-background);transition:", ";&::after{content:'';display:block;position:absolute;top:0;left:0;bottom:0;margin:auto 0.125rem;width:1.5rem;height:1.5rem;border-radius:1.5rem;background-color:var(--plasma-switch-ellipse-background);box-shadow:", ";transition:", ";}", " ", ":checked ~ &{background-color:var(--plasma-switch-trigger-background-checked);&::after{left:auto;right:0;}}", ""], triggerWidth, triggerWidth, triggerHeight, function (_ref) {
  var theme = _ref.theme;
  return theme.lowPerformance ? 'unset' : 'background-color 0.15s ease-in-out 0.1s';
}, shadows.tiny, function (_ref2) {
  var theme = _ref2.theme;
  return theme.lowPerformance ? 'unset' : 'width 0.15s ease-in-out, left 0.3s ease-in-out, right 0.3s ease-in-out';
}, function (_ref3) {
  var $disabled = _ref3.$disabled,
    pressed = _ref3.pressed;
  return !$disabled && css(["", ":active &::after{width:1.875rem;}", ""], StyledRoot, pressed && css(["&::after{width:1.875rem;}"]));
}, StyledInput, function (_ref4) {
  var focused = _ref4.focused,
    outlined = _ref4.outlined,
    theme = _ref4.theme;
  return addFocus(_objectSpread(_objectSpread({}, theme), {}, {
    focused: focused,
    outlined: outlined,
    outlineRadius: '1rem',
    synthesizeFocus: synthesizeFocus
  }));
});
var StyledLabel = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma__sc-b4nbiv-3"
})(["", ";margin-right:0.75rem;user-select:none;", ""], body1, applyEllipsis);

/**
 * Визуальный переключатель между двумя взаимоисключающими состояниями — вкл. и выкл.
 */
// eslint-disable-next-line prefer-arrow-callback
export var Switch = /*#__PURE__*/React.forwardRef(function Switch(_ref5, ref) {
  var name = _ref5.name,
    value = _ref5.value,
    label = _ref5.label,
    checked = _ref5.checked,
    defaultChecked = _ref5.defaultChecked,
    disabled = _ref5.disabled,
    readOnly = _ref5.readOnly,
    pressed = _ref5.pressed,
    focused = _ref5.focused,
    outlined = _ref5.outlined,
    tabIndex = _ref5.tabIndex,
    onChange = _ref5.onChange,
    onFocus = _ref5.onFocus,
    onBlur = _ref5.onBlur,
    rest = _objectWithoutProperties(_ref5, _excluded);
  var exactChecked = Boolean(checked !== undefined ? checked : defaultChecked);
  return /*#__PURE__*/React.createElement(StyledRoot, _extends({
    $disabled: disabled
  }, rest), /*#__PURE__*/React.createElement(StyledInput, {
    ref: ref,
    role: "switch",
    "aria-checked": exactChecked,
    type: "checkbox",
    name: name,
    value: value,
    checked: checked,
    defaultChecked: defaultChecked,
    readOnly: readOnly,
    disabled: disabled,
    tabIndex: tabIndex,
    onChange: onChange,
    onFocus: onFocus,
    onBlur: onBlur
  }), label && /*#__PURE__*/React.createElement(StyledLabel, {
    tabIndex: -1
  }, label), /*#__PURE__*/React.createElement(StyledTrigger, {
    "aria-hidden": true,
    $disabled: disabled,
    pressed: pressed,
    focused: focused,
    outlined: outlined
  }));
});