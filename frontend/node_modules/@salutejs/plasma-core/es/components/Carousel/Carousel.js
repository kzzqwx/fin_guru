import styled, { css } from 'styled-components';
/**
 * Компонент применяется, если требуется компенсировать отступы контейнера в сетке.
 * При обертывании вокруг ``Carousel``, добавляет карусели и ее прокрутке дополнительные отступы.
 * Стилизованный компонент, обладающий всеми свойствами ``div``.
 */
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Carousel/Carousel');
export var CarouselGridWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-g6im04-0"
})(["overflow:hidden;margin-left:calc(var(--plasma-grid-margin) * -1);margin-right:calc(var(--plasma-grid-margin) * -1);"]);

/**
 * Корневой элемент - ограничивающая обертка карусели.
 */
export var Carousel = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-g6im04-1"
})(["position:relative;margin:0;padding:0;list-style:none;::-webkit-scrollbar{display:none;}", " ", " ", " &{scroll-padding:0 var(--plasma-grid-margin);padding-left:var(--plasma-grid-margin);}"], function (_ref) {
  var axis = _ref.axis;
  return axis === 'x' ? css(["overflow-x:auto;overflow-y:hidden;"]) : css(["height:100%;overflow-x:hidden;overflow-y:auto;"]);
}, function (_ref2) {
  var scrollSnapType = _ref2.scrollSnapType,
    axis = _ref2.axis;
  return scrollSnapType && scrollSnapType !== 'none' && css(["scroll-behavior:", ";scroll-snap-type:", " ", ";"], function (_ref3) {
    var theme = _ref3.theme;
    return theme.lowPerformance ? 'unset' : 'smooth';
  }, axis, scrollSnapType);
}, CarouselGridWrapper);

/**
 * Списковый (трековый) элемент карусели для непосредственного вложения айтемов в него.
 */
export var CarouselTrack = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma__sc-g6im04-2"
})(["", " ", " ", ""], function (_ref4) {
  var virtualSize = _ref4.virtualSize,
    axis = _ref4.axis;
  return (
    // для виртуализированной карусели (useVirtual)
    virtualSize && css(["position:absolute;", ":", "px;"], axis === 'x' ? 'width' : 'height', virtualSize)
  );
}, function (_ref5) {
  var liteMode = _ref5.liteMode;
  return (
    // для поддержки CarouselLite
    liteMode && css(["transition-property:transform;transition-duration:0.5s;transform:translate(0px,0px);"])
  );
}, function (_ref6) {
  var axis = _ref6.axis,
    paddingStart = _ref6.paddingStart,
    paddingEnd = _ref6.paddingEnd;
  return axis === 'x' ? css(["display:inline-flex;flex-direction:row;", " ", ""], paddingStart && css(["padding-left:", ";"], paddingStart), paddingEnd ? css(["padding-right:", ";"], paddingEnd) : css(["", " &{padding-right:var(--plasma-grid-margin);}"], CarouselGridWrapper)) : css(["display:flex;flex-direction:column;width:100%;", " ", ""], paddingStart && css(["padding-top:", ";"], paddingStart), paddingEnd && css(["padding-bottom:", ";"], paddingEnd));
});