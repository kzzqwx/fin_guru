"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LineSkeleton = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));
var _mixins = /*#__PURE__*/require("../../mixins");
var typography = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("../../tokens/typography"));
var _Skeleton = /*#__PURE__*/require("./Skeleton");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _StyledVisibleLine;
var _excluded = ["size", "roundness"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Skeleton/LineSkeleton');
var StyledVisibleLine = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-7e0z6x-0"
})(["position:relative;overflow:hidden;width:100%;"]);
var StyledLine = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-7e0z6x-1"
})(["display:flex;align-items:center;width:100%;", " & ", "{", " ", "}"], function (_ref) {
  var $size = _ref.$size;
  return (0, _styledComponents.css)(["height:", ";& ", "{height:", ";}"], typography[$size].lineHeight, StyledVisibleLine, typography[$size].fontSize);
}, StyledVisibleLine, _mixins.applyRoundness, _mixins.applySkeletonGradient);
/**
 * Размеры компонента задаются с помощью констант и соответствуют размерам [типографических элементов](/?path=/docs/).
 */
var LineSkeleton = exports.LineSkeleton = function LineSkeleton(_ref2) {
  var _ref2$size = _ref2.size,
    size = _ref2$size === void 0 ? _Skeleton.DEFAULT_TEXT_SIZE : _ref2$size,
    _ref2$roundness = _ref2.roundness,
    roundness = _ref2$roundness === void 0 ? _Skeleton.DEFAULT_ROUNDNESS : _ref2$roundness,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/_react["default"].createElement(StyledLine, _extends({
    $size: size,
    roundness: roundness
  }, rest), _StyledVisibleLine || (_StyledVisibleLine = /*#__PURE__*/_react["default"].createElement(StyledVisibleLine, null)));
};