"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createTabsController = createTabsController;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _hooks = /*#__PURE__*/require("../../hooks");
var _TabsContext = /*#__PURE__*/require("./TabsContext");
var _Tabs = /*#__PURE__*/require("./Tabs");
var _TabItem = /*#__PURE__*/require("./TabItem");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["items", "index", "autoscroll", "onIndexChange"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Tabs/createTabsController');
var Keys = /*#__PURE__*/function (Keys) {
  Keys[Keys["end"] = 35] = "end";
  Keys[Keys["home"] = 36] = "home";
  Keys[Keys["left"] = 37] = "left";
  Keys[Keys["right"] = 39] = "right";
  return Keys;
}(Keys || {});
/**
 * Функция для создания `TabController`, которая дает возможность
 * кастомизировать стили, при этом сохраняя единый интерфейс и функционал.
 */
function createTabsController() {
  var ListComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Tabs.Tabs;
  var ItemComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _TabItem.TabItem;
  // eslint-disable-next-line prefer-arrow-callback
  return /*#__PURE__*/(0, _react.forwardRef)(function TabsController(_ref, outerRef) {
    var items = _ref.items,
      index = _ref.index,
      autoscroll = _ref.autoscroll,
      onIndexChange = _ref.onIndexChange,
      rest = _objectWithoutProperties(_ref, _excluded);
    var disabled = rest.disabled;
    var refs = (0, _react.useMemo)(function () {
      return new _TabsContext.TabItemRefs();
    }, []);
    var innerRef = (0, _react.useRef)(null);
    var ref = (0, _hooks.useForkRef)(outerRef, innerRef);
    var onItemFocus = (0, _react.useCallback)(function (event) {
      var _innerRef$current;
      if (disabled) {
        return;
      }
      var focusIndex = refs.items.findIndex(function (itemRef) {
        return itemRef.current === event.target;
      });
      var focusItem = refs.items[focusIndex];
      if (focusIndex === index) {
        return;
      }
      onIndexChange === null || onIndexChange === void 0 || onIndexChange(focusIndex);
      var parent = (_innerRef$current = innerRef.current) === null || _innerRef$current === void 0 ? void 0 : _innerRef$current.parentNode;
      if (autoscroll && parent && focusItem !== null && focusItem !== void 0 && focusItem.current) {
        var _focusItem$current;
        var _focusItem$current$ge = (_focusItem$current = focusItem.current) === null || _focusItem$current === void 0 ? void 0 : _focusItem$current.getBoundingClientRect(),
          x = _focusItem$current$ge.x,
          width = _focusItem$current$ge.width;
        var _parent$getBoundingCl = parent.getBoundingClientRect(),
          parentX = _parent$getBoundingCl.x,
          parentWidth = _parent$getBoundingCl.width;
        var relativeX = x - parentX;
        var style = window.getComputedStyle(parent);
        var marginLeft = Number.parseInt(style.marginLeft, 10);
        var marginRight = Number.parseInt(style.marginRight, 10);
        if (relativeX < -marginLeft) {
          parent.scrollLeft += relativeX + marginLeft;
          return;
        }
        if (parentWidth <= relativeX + width - marginRight) {
          parent.scrollLeft += relativeX + width - parentWidth - marginRight;
        }
      }
    }, [refs, innerRef, index, onIndexChange, disabled]);
    var onKeyDown = (0, _react.useCallback)(function (event) {
      if (disabled) {
        return;
      }
      var minIndex = 0;
      var maxIndex = refs.items.length - 1;
      var nextIndex;
      switch (event.keyCode) {
        case Keys.end:
          nextIndex = maxIndex;
          break;
        case Keys.left:
          nextIndex = index > minIndex ? index - 1 : index;
          break;
        case Keys.right:
          nextIndex = index < maxIndex ? index + 1 : index;
          break;
        case Keys.home:
          nextIndex = minIndex;
          break;
        default:
          return;
      }
      if (nextIndex !== index) {
        var _refs$items$nextIndex;
        event.preventDefault();
        (_refs$items$nextIndex = refs.items[nextIndex].current) === null || _refs$items$nextIndex === void 0 || _refs$items$nextIndex.focus();
      }
    }, [index, onIndexChange, disabled]);
    return /*#__PURE__*/_react["default"].createElement(_TabsContext.TabsContext.Provider, {
      value: refs
    }, /*#__PURE__*/_react["default"].createElement(ListComponent, _extends({
      ref: ref,
      onKeyDown: onKeyDown
    }, rest), items.map(function (_ref2, i) {
      var label = _ref2.label,
        contentLeft = _ref2.contentLeft;
      return /*#__PURE__*/_react["default"].createElement(ItemComponent, {
        key: i,
        isActive: i === index,
        tabIndex: !disabled && i === index ? 0 : -1,
        contentLeft: contentLeft,
        onFocus: onItemFocus,
        disabled: disabled
      }, label);
    })));
  });
}