import React from 'react';
import type { InputHTMLAttributes } from '../../types';
export declare type ControlProps = {
    /**
     * Уникальный идентификатор контрола
     */
    id?: string;
    /**
     * Метка-подпись к элементу
     */
    label?: React.ReactNode;
    /**
     * Описание элемента
     */
    description?: React.ReactNode;
};
export interface BaseboxProps extends ControlProps, InputHTMLAttributes<HTMLInputElement> {
    children?: never;
    /**
     * Title и description в одну строку или с переносом строк
     */
    singleLine?: boolean;
}
export declare const StyledRoot: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledContentWrapper: import("styled-components").StyledComponent<"label", any, {}, never>;
export declare const StyledInput: import("styled-components").StyledComponent<"input", any, {}, never>;
export declare const StyledTrigger: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledContent: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const StyledLabel: import("styled-components").StyledComponent<"div", any, import("@salutejs/plasma-typo/lib/cjs/mixins/applySpacing").SpacingProps & import("@salutejs/plasma-typo/lib/cjs/mixins/applyHyphens").BreakWordProps & {
    singleLine?: boolean | undefined;
}, never>;
export declare const StyledDescription: import("styled-components").StyledComponent<"div", any, import("@salutejs/plasma-typo/lib/cjs/mixins/applySpacing").SpacingProps & import("@salutejs/plasma-typo/lib/cjs/mixins/applyHyphens").BreakWordProps & {
    singleLine?: boolean | undefined;
}, never>;
