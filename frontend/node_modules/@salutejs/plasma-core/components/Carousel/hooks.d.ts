/// <reference types="react" />
import type { UseCarouselLiteOptions, UseCarouselOptions } from './types';
declare type UseCarouselHookResult = {
    scrollRef: React.MutableRefObject<HTMLElement | null>;
    trackRef: React.MutableRefObject<HTMLElement | null>;
};
export declare const useCarousel: ({ index, axis, detectActive, detectThreshold, scrollAlign, scaleCallback, scaleResetCallback, onIndexChange, onDetectActiveItem, animatedScrollByIndex, throttleMs, debounceMs, }: UseCarouselOptions) => UseCarouselHookResult;
export declare function useCarouselLite({ index, axis, scrollAlign, scrollMode, }: UseCarouselLiteOptions): {
    scrollRef: import("react").MutableRefObject<HTMLElement | null>;
    trackRef: import("react").MutableRefObject<HTMLElement | null>;
};
export {};
