"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.modalBaseOverlayClass = exports.Overlay = exports.ModalOverlay = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));
var _PopupBaseRoot = /*#__PURE__*/require("../PopupBase/PopupBaseRoot");
var _PopupBase = /*#__PURE__*/require("../PopupBase");
var _ModalBaseContext = /*#__PURE__*/require("./ModalBaseContext");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["id", "withBlur", "onOverlayClick", "onClose", "zIndex", "closeOnOverlayClick"];
/*
 * Класс компонента ModalBaseOverlay: `modal-base-overlay`
 */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('ModalBase/ModalOverlay');
var modalBaseOverlayClass = exports.modalBaseOverlayClass = 'modal-base-overlay';

// TODO: новый отдельный оверлей #778
var Overlay = exports.Overlay = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-1jo935d-0"
})(["position:fixed;width:100%;height:100%;top:0;left:0;", " ", ";background-color:", ";backdrop-filter:var(--backdrop-filter);cursor:", ";"], function (_ref) {
  var zIndex = _ref.zIndex;
  return (0, _styledComponents.css)(["z-index:", ";"], zIndex || _PopupBaseRoot.DEFAULT_Z_INDEX);
}, function (_ref2) {
  var $withBlur = _ref2.$withBlur;
  return (0, _styledComponents.css)(["--background-color:", ";--backdrop-filter:", ";"], $withBlur ? 'var(--plasma-modal-blur-overlay-color)' : 'var(--plasma-modal-overlay-color)', $withBlur ? 'blur(1rem)' : 'none');
}, function (_ref3) {
  var transparent = _ref3.transparent;
  return transparent ? 'transparent' : 'var(--background-color)';
}, function (_ref4) {
  var clickable = _ref4.clickable;
  return clickable ? 'pointer' : 'default';
});

/**
 * ModalOverlay - подложка для ModalBase.
 */
var ModalOverlay = exports.ModalOverlay = function ModalOverlay(_ref5) {
  var id = _ref5.id,
    withBlur = _ref5.withBlur,
    onOverlayClick = _ref5.onOverlayClick,
    onClose = _ref5.onClose,
    zIndex = _ref5.zIndex,
    _ref5$closeOnOverlayC = _ref5.closeOnOverlayClick,
    closeOnOverlayClick = _ref5$closeOnOverlayC === void 0 ? true : _ref5$closeOnOverlayC,
    rest = _objectWithoutProperties(_ref5, _excluded);
  var popupController = (0, _PopupBase.usePopupBaseContext)();
  var onModalOverlayKeyDown = (0, _react.useCallback)(function (event) {
    if (!closeOnOverlayClick) {
      return;
    }
    if (onOverlayClick) {
      onOverlayClick(event);
      return;
    }
    if (onClose) {
      onClose();
    }
  }, [closeOnOverlayClick, onOverlayClick, onClose]);
  var transparent = (0, _react.useMemo)(function () {
    return (0, _ModalBaseContext.getIdLastModal)(popupController.items) !== id;
  }, [id, popupController.items]);
  return /*#__PURE__*/_react["default"].createElement(Overlay, _extends({
    className: modalBaseOverlayClass,
    transparent: transparent,
    clickable: closeOnOverlayClick,
    onClick: onModalOverlayKeyDown,
    zIndex: zIndex,
    $withBlur: withBlur
  }, rest));
};