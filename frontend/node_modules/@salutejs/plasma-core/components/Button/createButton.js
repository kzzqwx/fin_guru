"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createButton = createButton;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _Button = /*#__PURE__*/require("./Button");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["children", "text", "contentLeft", "contentRight", "square", "deviceScale", "loader", "disabled", "isLoading", "type"];
/**
 * Функция для создания компонента Button,
 * что дает возможность кастомизировать вид, пропсы и т.п.,
 * при этом сохраняя в базе общий интерфейс.
 */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Button/createButton');
function createButton() {
  var Root = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _Button.ButtonRoot;
  // eslint-disable-next-line prefer-arrow-callback
  return /*#__PURE__*/(0, _react.forwardRef)(function Button(_ref, ref) {
    var children = _ref.children,
      text = _ref.text,
      contentLeft = _ref.contentLeft,
      contentRight = _ref.contentRight,
      square = _ref.square,
      deviceScale = _ref.deviceScale,
      _ref$loader = _ref.loader,
      loader = _ref$loader === void 0 ? /*#__PURE__*/_react["default"].createElement(_Button.StyledSpinner, {
        color: "currentColor",
        size: 56,
        deviceScale: deviceScale
      }) : _ref$loader,
      disabled = _ref.disabled,
      isLoading = _ref.isLoading,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? 'button' : _ref$type,
      rest = _objectWithoutProperties(_ref, _excluded);
    var isContentLeft = Boolean(contentLeft);
    var isContentRight = Boolean(contentRight);
    return /*#__PURE__*/_react["default"].createElement(Root, _extends({
      ref: ref,
      type: type,
      $isContentLeft: isContentLeft,
      $isContentRight: isContentRight,
      $isLoading: isLoading,
      disabled: isLoading || disabled,
      square: square !== undefined ? square : !text && !children
    }, rest), isLoading && /*#__PURE__*/_react["default"].createElement(_Button.ButtonLoader, null, loader), /*#__PURE__*/_react["default"].createElement(_Button.ButtonContentWrapper, {
      $isLoading: isLoading
    }, children, !children && contentLeft, !children && text && /*#__PURE__*/_react["default"].createElement(_Button.ButtonText, {
      $isContentLeft: isContentLeft,
      $isContentRight: isContentRight
    }, text), !children && contentRight));
  });
}