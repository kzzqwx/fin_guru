var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var baseSpacing = {
    0: '0',
    2: '0.125rem',
    4: '0.25rem',
    8: '0.5rem',
    10: '0.625rem',
    12: '0.75rem',
    16: '1rem',
    18: '1.125rem',
    20: '1.25rem',
    24: '1.5rem',
    32: '2rem',
};
export var spacing = __assign(__assign({}, baseSpacing), { '0x': baseSpacing[0], '1x': baseSpacing[2], '2x': baseSpacing[4], '4x': baseSpacing[8], '5x': baseSpacing[10], '6x': baseSpacing[12], '8x': baseSpacing[16], '9x': baseSpacing[18], '10x': baseSpacing[20], '12x': baseSpacing[24], '16x': baseSpacing[32] });
var createSpacingFn = function (params) { return function (value) {
    return params.reduce(function (acc, cur) {
        var _a;
        return (__assign(__assign({}, acc), (_a = {}, _a[cur] = spacing[value], _a)));
    }, {});
}; };
var m = createSpacingFn(['margin']);
var mt = createSpacingFn(['marginTop']);
var mr = createSpacingFn(['marginRight']);
var ml = createSpacingFn(['marginLeft']);
var mb = createSpacingFn(['marginBottom']);
var mx = createSpacingFn(['marginLeft', 'marginRight']);
var my = createSpacingFn(['marginTop', 'marginBottom']);
var p = createSpacingFn(['padding']);
var pt = createSpacingFn(['paddingTop']);
var pr = createSpacingFn(['paddingRight']);
var pl = createSpacingFn(['paddingLeft']);
var pb = createSpacingFn(['paddingBottom']);
var px = createSpacingFn(['paddingLeft', 'paddingRight']);
var py = createSpacingFn(['paddingTop', 'paddingBottom']);
var spacingFns = { m: m, mt: mt, mr: mr, ml: ml, mb: mb, mx: mx, my: my, p: p, pt: pt, pr: pr, pl: pl, pb: pb, px: px, py: py };
var spacingFnsList = Object.entries(spacingFns);
/**
 * Миксин для добавления пропсов стандартных отступов в компонент.
 */
export var applySpacing = function (props) {
    return spacingFnsList.reduce(function (styles, _a) {
        var fnName = _a[0], fn = _a[1];
        if (fnName in props) {
            return __assign(__assign({}, styles), fn(props[fnName]));
        }
        return styles;
    }, {});
};
//# sourceMappingURL=applySpacing.js.map