import React from 'react';
import { CarouselTemplateProps, CarouselProps, CarouselLiteProps } from '@salutejs/plasma-core';
/**
 * Компонент для создания списков с прокруткой.
 */
export declare const Carousel: React.ForwardRefExoticComponent<CarouselProps & React.RefAttributes<HTMLDivElement>>;
/**
 * Компонент для создания списков с прокруткой,
 * но по умолчанию использует для прокрутки `transform translate` вместо scrollTo.
 * В отличии от Carousel управляется исключительно сверху и самостоятельно не отслеживает активный элемент.
 * То есть не принимает пропсы `detectActive`, `detectThreshold`, `onIndexChange`,
 * `onDetectActiveItem`, `scaleCallback`, `scaleResetCallback`.
 *
 * Лучше всего подходит для использования на устройствах, управляемых с помощью пульта или клавиатуры.
 * На устройствах с сенсорным экраном рекомендуется установить пропс `scrollMode="scroll"`.
 */
export declare const CarouselLite: React.ForwardRefExoticComponent<CarouselLiteProps & React.RefAttributes<HTMLDivElement>>;
/**
 * Компонент для создания виртуализированных списков с прокруткой.
 * Адаптирован для использования с хуком useVirtual.
 * ```
 * import { useVirtual } from '@salutejs/use-virtual';
 * ```
 */
export declare const CarouselVirtual: React.ForwardRefExoticComponent<{
    virtualSize: number;
} & Omit<CarouselTemplateProps, "scrollSnapType" | "paddingStart" | "paddingEnd"> & {
    trackRef?: React.MutableRefObject<HTMLElement | null> | undefined;
} & React.RefAttributes<HTMLDivElement>>;
