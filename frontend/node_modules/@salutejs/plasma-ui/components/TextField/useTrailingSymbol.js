"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTrailingSymbol = void 0;
var _react = /*#__PURE__*/require("react");
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
var trimPx = function trimPx(str) {
  return str.replace('px', '');
};
var getInputOffset = function getInputOffset(inputRef) {
  if (!inputRef || !inputRef.current) {
    return [0, 0];
  }
  var _getComputedStyle = getComputedStyle(inputRef === null || inputRef === void 0 ? void 0 : inputRef.current),
    paddingLeft = _getComputedStyle.paddingLeft,
    paddingRight = _getComputedStyle.paddingRight;
  var left = parseInt(trimPx(paddingLeft), 10);
  var right = parseInt(trimPx(paddingRight), 10);
  return [left, right];
};
var useTrailingSymbol = exports.useTrailingSymbol = function useTrailingSymbol(_ref) {
  var size = _ref.size,
    contentLeft = _ref.contentLeft,
    contentRight = _ref.contentRight,
    _ref$rightTrailingSym = _ref.rightTrailingSymbols,
    rightTrailingSymbols = _ref$rightTrailingSym === void 0 ? '' : _ref$rightTrailingSym,
    value = _ref.value,
    _ref$rightTrailingSym2 = _ref.rightTrailingSymbolsWidth,
    rightTrailingSymbolsWidth = _ref$rightTrailingSym2 === void 0 ? 0 : _ref$rightTrailingSym2,
    deviceScale = _ref.deviceScale;
  var hiddenDivRef = (0, _react.useRef)(null);
  var inputRef = (0, _react.useRef)(null);
  var _useState = (0, _react.useState)([0, 0]),
    _useState2 = _slicedToArray(_useState, 2),
    inputOffset = _useState2[0],
    setInputOffset = _useState2[1];
  var _useState3 = (0, _react.useState)(0),
    _useState4 = _slicedToArray(_useState3, 2),
    rightTrailingSymbolsPosition = _useState4[0],
    setRightTrailingSymbolsPosition = _useState4[1];
  var _useState5 = (0, _react.useState)(0),
    _useState6 = _slicedToArray(_useState5, 2),
    inputWidth = _useState6[0],
    setInputWidth = _useState6[1];
  var currentTrailingSymbolsWidth = rightTrailingSymbols.length === 1 ? 0 : rightTrailingSymbolsWidth;
  var debouncedResize = (0, _plasmaCore.useDebouncedFunction)(function (width) {
    return setInputWidth(width);
  }, 100);
  (0, _plasmaCore.useResizeObserver)(inputRef, function (currentElement) {
    var _currentElement$getBo = currentElement.getBoundingClientRect(),
      width = _currentElement$getBo.width;
    debouncedResize(width);
  });
  (0, _react.useEffect)(function () {
    if (!rightTrailingSymbols) {
      return;
    }
    setInputOffset(getInputOffset(inputRef));
  }, [size, Boolean(contentLeft), Boolean(contentRight), rightTrailingSymbols, currentTrailingSymbolsWidth, deviceScale]);
  (0, _react.useEffect)(function () {
    var _hiddenDivRef$current;
    if (!rightTrailingSymbols) {
      return;
    }
    var _inputOffset = _slicedToArray(inputOffset, 2),
      inputOffsetLeft = _inputOffset[0],
      inputOffsetRight = _inputOffset[1];
    var inputWidthBase = inputWidth - inputOffsetLeft - inputOffsetRight;
    var hiddenDivWidth = (hiddenDivRef === null || hiddenDivRef === void 0 || (_hiddenDivRef$current = hiddenDivRef.current) === null || _hiddenDivRef$current === void 0 ? void 0 : _hiddenDivRef$current.clientWidth) || 0;
    var position = hiddenDivWidth > inputWidthBase ? inputWidth - inputOffsetRight : hiddenDivWidth + inputOffsetLeft;
    setRightTrailingSymbolsPosition(position);
  }, [value, inputOffset, rightTrailingSymbols, size, Boolean(contentLeft), Boolean(contentRight), deviceScale, inputWidth]);
  return {
    inputRef: inputRef,
    hiddenDivRef: hiddenDivRef,
    rightTrailingSymbolsPosition: rightTrailingSymbolsPosition
  };
};