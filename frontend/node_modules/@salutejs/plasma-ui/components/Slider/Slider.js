"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Slider = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _plasmaTokens = /*#__PURE__*/require("@salutejs/plasma-tokens");
var _hooks = /*#__PURE__*/require("../../hooks");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
(0, _collectPackageInfo.collectPackageInfo)('Slider/Slider');
var sliderSettings = {
  indent: 0.8125,
  backgroundColor: _plasmaTokens.surfaceLiquid03,
  fillColor: _plasmaTokens.buttonAccent
};
var StyledThumb = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.ThumbBase).withConfig({
  componentId: "plasma-ui__sc-847gqm-0"
})(["width:1.5rem;height:1.5rem;border:0.063rem solid ", ";background-color:", ";color:", ";"], _plasmaTokens.surfaceLiquid03, _plasmaTokens.white, _plasmaTokens.accent);
var Slider = exports.Slider = function Slider(props) {
  var _theme$deviceScale;
  var theme = (0, _hooks.useThemeContext)();
  var fontSizeMultiplier = ((_theme$deviceScale = theme === null || theme === void 0 ? void 0 : theme.deviceScale) !== null && _theme$deviceScale !== void 0 ? _theme$deviceScale : _plasmaTokens.sberPortalScale) * _plasmaTokens.scalingPixelBasis;
  return /*#__PURE__*/_react["default"].createElement(_plasmaCore.SliderCore, _extends({}, props, {
    settings: _objectSpread(_objectSpread({}, sliderSettings), {}, {
      fontSizeMultiplier: fontSizeMultiplier
    }),
    thumb: StyledThumb
  }));
};