import React from 'react';
import { CSSObject } from 'styled-components';
import type { SizeProps, PickerSize, PickerItem as PickerItemType } from './types';
declare const sizes: Record<PickerSize, CSSObject>;
interface StyledSizeProps {
    $size: keyof typeof sizes;
    $noScrollBehavior: boolean;
    isSnapAlwaysStop?: boolean;
    $disableScrollSnapAlign?: boolean;
}
export declare const StyledPickerItem: import("styled-components").StyledComponent<"div", any, StyledSizeProps, never>;
export declare const StyledWhiteText: import("styled-components").StyledComponent<"div", any, {}, never>;
export interface PickerItemProps extends React.HTMLAttributes<HTMLDivElement>, SizeProps {
    item: PickerItemType;
    index: number;
    activeIndex: number;
    noScrollBehavior: boolean;
    onItemClick?: (item: PickerItemType) => void;
    disabled?: boolean;
    /**
     * Автофокус на компоненте.
     */
    autofocus?: boolean;
    /**
     * Останавливает прокрутку скролла на выбранном элементе
     *
     * @example
     * Например, исходный массив: [0,1,2,3,0,1,2,3,0,1,2,3], и активный индекс <5> (т.е. число 1)
     * тогда, при сильном свайпе вниз скролл остановится на элементе с индексом <2> (и числом 2),
     * и перебросит на элемент с индексом <6> (т.е. числом 2)
     */
    isSnapAlwaysStop?: boolean;
    /**
     * Выключаем css свойства для указания стороны привязки в scroll-snap контейнере
     * @default false
     */
    disableScrollSnapAlign?: boolean;
}
export declare const PickerItem: ({ size, item, index, activeIndex, noScrollBehavior, onItemClick, autofocus, disabled, disableScrollSnapAlign, ...rest }: PickerItemProps) => JSX.Element;
export {};
