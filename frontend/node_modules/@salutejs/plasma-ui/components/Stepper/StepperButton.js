"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StepperButton = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _Button = /*#__PURE__*/require("../Button");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["pin", "view", "icon", "disabled"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Stepper/StepperButton');
/**
 * Стилизованная кнопка, применяемая для контроля над значением степпера.
 */
var StepperButton = exports.StepperButton = /*#__PURE__*/_react["default"].memo( /*#__PURE__*/_react["default"].forwardRef(
// eslint-disable-next-line prefer-arrow-callback
function StepperButton(_ref, ref) {
  var _ref$pin = _ref.pin,
    pin = _ref$pin === void 0 ? 'circle-circle' : _ref$pin,
    _ref$view = _ref.view,
    view = _ref$view === void 0 ? 'secondary' : _ref$view,
    icon = _ref.icon,
    disabled = _ref.disabled,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_Button.ActionButton, _extends({
    "aria-disabled": disabled,
    disabled: disabled,
    size: "m",
    ref: ref,
    pin: pin,
    view: view
  }, rest), icon);
}));