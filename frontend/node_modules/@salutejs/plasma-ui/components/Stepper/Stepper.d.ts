import React from 'react';
import type { PickOptional } from '@salutejs/plasma-core';
import { StepperButtonProps } from './StepperButton';
import type { UseStepperProps } from './Stepper.hooks';
interface RemoverProps {
    /**
     * При достижении минимального количества, кнопка минус превратится в удалить
     */
    showRemove: true;
    /**
     * Обработчик клика по кнопке удаления
     */
    onRemove: React.MouseEventHandler<HTMLButtonElement>;
}
interface NoRemoverProps {
    showRemove?: false;
}
export declare type StepperProps = UseStepperProps & (RemoverProps | NoRemoverProps) & PickOptional<StepperButtonProps, 'pin' | 'onFocus' | 'onBlur'> & Omit<React.HTMLAttributes<HTMLDivElement>, 'onChange' | 'onFocus' | 'onBlur'> & {
    /**
     * Неактивное состояние: состояние, при котором компонент отображается, но недоступен для действий пользователя
     */
    disabled?: boolean;
    /**
     * Функция для форматирования отображаемого значения
     */
    formatter?: (value: number) => string;
    /**
     * ARIA атрибут для кнопки увеличения значения
     */
    ariaLabelIncrement?: string;
    /**
     * ARIA атрибут для кнопки удаления
     */
    ariaLabelRemove?: string;
    /**
     * ARIA атрибут для кнопки уменьшения значения
     */
    ariaLabelDecrement?: string;
};
/**
 * Готовый компонент для создания счетчика, подобного ``input[type="range"]``.
 */
export declare const Stepper: ({ value, step, min, max, disabled, pin, onChange, onFocus, onBlur, formatter, ariaLabelDecrement, ariaLabelIncrement, ariaLabelRemove, ...props }: StepperProps) => JSX.Element;
export {};
