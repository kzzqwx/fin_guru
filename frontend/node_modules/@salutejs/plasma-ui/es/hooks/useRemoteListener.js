import { useEffect, useRef } from 'react';
var navKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', 'PageUp', 'PageDown', 'Home', 'End'];
var getRemoteKey = function getRemoteKey(key, isLong) {
  switch (key) {
    case 'ArrowUp':
      return isLong ? 'LONG_UP' : 'UP';
    case 'ArrowDown':
      return isLong ? 'LONG_DOWN' : 'DOWN';
    case 'ArrowLeft':
      return isLong ? 'LONG_LEFT' : 'LEFT';
    case 'ArrowRight':
      return isLong ? 'LONG_RIGHT' : 'RIGHT';
    case 'Enter':
      return isLong ? 'LONG_OK' : 'OK';
    case 'PageUp':
      return 'PAGE_UP';
    case 'PageDown':
      return 'PAGE_DOWN';
    case 'Home':
      return 'HOME';
    case 'End':
      return 'END';
    default:
      return undefined;
  }
};

/**
 * Создает слушателя событий клавиатуры,
 * который вызывает коллбек при нажатии кнопок навигации.
 * @param {Function} cb
 * @param {number} keypressTimeMs
 * @param {AddEventListenerOptions} eventListenerOptions
 * @return {void}
 */
export var useRemoteListener = function useRemoteListener(cb) {
  var keypressTimeMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 150;
  var eventListenerOptions = arguments.length > 2 ? arguments[2] : undefined;
  var keydown = useRef(null);
  useEffect(function () {
    var handleKeydown = function handleKeydown(event) {
      var isLong = Boolean(keydown.current && Date.now() - keydown.current < keypressTimeMs);
      var remoteKey = getRemoteKey(event.key, isLong);
      if (!remoteKey) {
        return;
      }
      cb(remoteKey, event);
      keydown.current = Date.now();
    };
    var handleKeyup = function handleKeyup(event) {
      if (navKeys.indexOf(event.key) === -1) {
        return;
      }
      keydown.current = null;
    };
    window.addEventListener('keydown', handleKeydown, eventListenerOptions);
    window.addEventListener('keyup', handleKeyup, eventListenerOptions);
    return function () {
      window.removeEventListener('keydown', handleKeydown, eventListenerOptions);
      window.removeEventListener('keyup', handleKeyup, eventListenerOptions);
    };
  }, [cb]);
};