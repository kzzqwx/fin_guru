var _excluded = ["children"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css } from 'styled-components';
import { canUseDOM, useIsomorphicLayoutEffect } from '@salutejs/plasma-core';
import { mediaQuery, gridSizes, gridColumns, gridMargins, gridGutters } from '../../utils';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Grid/Container');
var sidesCount = 2;
var htmlFontSizePx = 16;

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledContainer = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-h3tpgz-0"
})(["margin:0 auto;display:flex;box-sizing:border-box;flex-direction:column;width:100%;padding-left:var(--plasma-grid-margin);padding-right:var(--plasma-grid-margin);", ""], function (_ref) {
  var $width = _ref.$width,
    theme = _ref.theme;
  return gridSizes.map(function (breakpoint) {
    var containerWidth = $width;
    var margins = (gridMargins[breakpoint] * sidesCount - gridGutters[breakpoint]) * htmlFontSizePx * theme.deviceScale;
    return mediaQuery(breakpoint, theme.deviceScale)(css(["--plasma-grid-column-width:", "px;--plasma-grid-margin:", "rem;--plasma-grid-gutter:", "rem;"], (containerWidth - margins) / gridColumns[breakpoint], gridMargins[breakpoint], gridGutters[breakpoint] / sidesCount));
  });
});

/**
 * Блок с полями по бокам для размещения контента по вертикали.
 * Блок нельзя вкладывать сам в себя или дальше по дереву.
 */
export var Container = function Container(_ref2) {
  var children = _ref2.children,
    props = _objectWithoutProperties(_ref2, _excluded);
  var ref = React.useRef(null);
  var _React$useState = React.useState(0),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    width = _React$useState2[0],
    setWidth = _React$useState2[1];
  useIsomorphicLayoutEffect(function () {
    var resizeHandler = function resizeHandler() {
      if (ref.current) {
        var _ref$current;
        setWidth((_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.offsetWidth);
      }
    };
    if (ref.current) {
      var _ref$current2;
      setWidth((_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.offsetWidth);
    }
    if (canUseDOM) {
      window.addEventListener('resize', resizeHandler);
    }
    return function () {
      if (canUseDOM) {
        window.removeEventListener('resize', resizeHandler);
      }
    };
  }, []);
  return /*#__PURE__*/React.createElement(StyledContainer, _extends({
    ref: ref,
    $width: width
  }, props), children);
};