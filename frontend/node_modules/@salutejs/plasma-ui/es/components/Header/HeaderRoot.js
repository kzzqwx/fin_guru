var _excluded = ["children", "size", "gradientColor"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import Color from 'color';
import { mediaQuery } from '../../utils';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Header/HeaderRoot');
var sizes = {
  sberBox: /*#__PURE__*/css(["--plasma-header-height:2.25rem;--plasma-header-pt:1.875rem;--plasma-header-pb:0.875rem;"]),
  sberPortal: /*#__PURE__*/css(["--plasma-header-height:2.25rem;--plasma-header-pt:1.625rem;--plasma-header-pb:0.625rem;"]),
  mobile: /*#__PURE__*/css(["--plasma-header-height:2.25rem;--plasma-header-pt:0.375rem;--plasma-header-pb:0.375rem;"])
};
// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledHeaderRoot = /*#__PURE__*/styled.header.withConfig({
  componentId: "plasma-ui__sc-rhe7wm-0"
})(["box-sizing:content-box;width:100%;height:var(--plasma-header-height);padding-top:var(--plasma-header-pt);padding-bottom:var(--plasma-header-pb);", " ", ""], function (_ref) {
  var $size = _ref.$size,
    theme = _ref.theme;
  return $size ? sizes[$size] // Выберет указанный размер или разложит размеры по брейкпоинтам
  : css(["", " ", " ", " ", ""], mediaQuery('S', theme.deviceScale)(sizes.mobile), mediaQuery('M', theme.deviceScale)(sizes.sberPortal), mediaQuery('L', theme.deviceScale)(sizes.sberBox), mediaQuery('XL', theme.deviceScale)(sizes.sberBox));
}, function (_ref2) {
  var $gradientColor = _ref2.$gradientColor;
  return $gradientColor && css(["&::before{content:'';position:absolute;top:0;left:0;right:0;height:calc(var(--plasma-header-height) + var(--plasma-header-pt) + var(--plasma-header-pb));background-image:linear-gradient( 180deg,", ",", " );}"], $gradientColor, Color($gradientColor).alpha(0).string());
});
var StyledInner = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-rhe7wm-1"
})(["position:relative;display:flex;align-items:center;flex-direction:row;width:100%;height:100%;"]);
/**
 * Корневой узел для шапки.
 */
export var HeaderRoot = /*#__PURE__*/forwardRef(function (_ref3, ref) {
  var children = _ref3.children,
    size = _ref3.size,
    gradientColor = _ref3.gradientColor,
    rest = _objectWithoutProperties(_ref3, _excluded);
  return /*#__PURE__*/React.createElement(StyledHeaderRoot, _extends({
    ref: ref
  }, rest, {
    $size: size,
    $gradientColor: gradientColor
  }), /*#__PURE__*/React.createElement(StyledInner, null, children));
});