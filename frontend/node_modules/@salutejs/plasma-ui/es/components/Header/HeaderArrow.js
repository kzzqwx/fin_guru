var _excluded = ["arrow", "iconSize"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css } from 'styled-components';
import { IconChevronLeft } from '@salutejs/plasma-icons';
import { mediaQuery } from '../../utils';
import { Button } from '../Button';
// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledButton = /*#__PURE__*/styled(Button).withConfig({
  componentId: "plasma-ui__sc-1s7bntu-0"
})(["position:absolute;top:0;bottom:0;margin-top:auto;margin-bottom:auto;right:100%;margin-right:0.5rem;", ""], function (_ref) {
  var theme = _ref.theme;
  return mediaQuery('S', theme.deviceScale)(css(["position:static;width:auto;height:calc(var(--plasma-header-pt) + var(--plasma-header-height) + var(--plasma-header-pb));padding:0;margin-right:1rem;margin-top:calc(var(--plasma-header-pt) * -1);"]));
});
// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledIcon = /*#__PURE__*/styled(IconChevronLeft).withConfig({
  componentId: "plasma-ui__sc-1s7bntu-1"
})(["transition:", ";", ""], function (_ref2) {
  var theme = _ref2.theme;
  return theme.lowPerformance ? 'unset' : 'transform 0.15s ease-in-out';
}, function (_ref3) {
  var arrow = _ref3.arrow;
  return arrow === 'minimize' && css(["transform:rotate(-90deg);"]);
});

/**
 * Кнопка-стрелка с возможностью отображения в двух типах - "назад" или "свернуть".
 */
export var HeaderArrow = function HeaderArrow(_ref4) {
  var arrow = _ref4.arrow,
    _ref4$iconSize = _ref4.iconSize,
    iconSize = _ref4$iconSize === void 0 ? 's' : _ref4$iconSize,
    rest = _objectWithoutProperties(_ref4, _excluded);
  return /*#__PURE__*/React.createElement(StyledButton, _extends({
    size: "s",
    square: true,
    view: "clear",
    tabIndex: -1,
    outlined: false,
    forwardedAs: "div"
  }, rest), /*#__PURE__*/React.createElement(StyledIcon, {
    size: iconSize,
    arrow: arrow
  }));
};