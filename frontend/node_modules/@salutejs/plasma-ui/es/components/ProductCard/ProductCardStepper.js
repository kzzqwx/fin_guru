var _excluded = ["value", "step", "min", "max", "disabled", "readonly", "onChange"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css } from 'styled-components';
import { black, warning } from '@salutejs/plasma-core';
import { IconMinus, IconPlus } from '@salutejs/plasma-icons';
import { Button } from '../Button';
import { StepperRoot, StepperValue, useStepper } from '../Stepper';
var StyledStepperRoot = /*#__PURE__*/styled(StepperRoot).withConfig({
  componentId: "plasma-ui__sc-2nam6q-0"
})(["width:100%;"]);
var StyledStepperValue = /*#__PURE__*/styled(StepperValue).withConfig({
  componentId: "plasma-ui__sc-2nam6q-1"
})(["", " ", ""], function (_ref) {
  var showWarning = _ref.showWarning;
  return !showWarning && css(["color:", ";"], black);
}, function (_ref2) {
  var $isHidden = _ref2.$isHidden;
  return $isHidden && css(["display:none;"]);
});
var StyledInfoButton = /*#__PURE__*/styled(Button).attrs(function () {
  return {
    size: 's',
    square: true
  };
}).withConfig({
  componentId: "plasma-ui__sc-2nam6q-2"
})(["color:", ";background-color:rgba(8,8,8,0.12);margin-left:auto;pointer-events:none;", ""], black, function (_ref3) {
  var showWarning = _ref3.showWarning;
  return showWarning && css(["background-color:rgba(10,10,10,0.05);color:", ";"], warning);
});
var StyledStepperButton = /*#__PURE__*/React.memo( /*#__PURE__*/styled(Button).attrs(function () {
  return {
    size: 's',
    square: true
  };
}).withConfig({
  componentId: "plasma-ui__sc-2nam6q-3"
})(["color:", ";background-color:rgba(8,8,8,0.12);align-self:flex-end;transition:", ";", ""], black, function (_ref4) {
  var theme = _ref4.theme;
  return theme.lowPerformance ? 'unset' : 'opacity 0.15s ease-in-out';
}, function (_ref5) {
  var $isHidden = _ref5.$isHidden;
  return $isHidden && css(["pointer-events:none;opacity:0;visibility:hidden;"]);
}));
var iconMinus = /*#__PURE__*/React.createElement(IconMinus, {
  color: "inherit",
  size: "s"
});
var iconPlus = /*#__PURE__*/React.createElement(IconPlus, {
  color: "inherit",
  size: "s"
});

/**
 * Степпер карточки продукта.
 */
export var ProductCardStepper = function ProductCardStepper(_ref6) {
  var value = _ref6.value,
    step = _ref6.step,
    min = _ref6.min,
    max = _ref6.max,
    disabled = _ref6.disabled,
    readonly = _ref6.readonly,
    onChange = _ref6.onChange,
    rest = _objectWithoutProperties(_ref6, _excluded);
  var _useStepper = useStepper({
      value: value,
      step: step,
      min: min,
      max: max,
      onChange: onChange
    }),
    onLessClick = _useStepper.onLessClick,
    onMoreClick = _useStepper.onMoreClick,
    isMax = _useStepper.isMax,
    isMoreDisabled = _useStepper.isMoreDisabled;
  var isValuePositive = value > 0;
  return /*#__PURE__*/React.createElement(StyledStepperRoot, rest, readonly ? /*#__PURE__*/React.createElement(StyledInfoButton, {
    tabIndex: -1,
    showWarning: isMax
  }, "\xD7".concat(value)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledStepperButton, {
    disabled: disabled,
    $isHidden: !isValuePositive,
    onClick: onLessClick
  }, iconMinus), /*#__PURE__*/React.createElement(StyledStepperValue, {
    $isHidden: !isValuePositive,
    value: value,
    showWarning: isMax
  }), /*#__PURE__*/React.createElement(StyledStepperButton, {
    disabled: disabled || isMoreDisabled,
    onClick: onMoreClick
  }, iconPlus)));
};