var _excluded = ["badge", "media", "text", "additionalInfo", "price", "oldPrice", "quantity", "quantityStep", "quantityMin", "quantityMax", "onQuantityChange", "disabled", "disabledAction", "readonly", "backgroundColor", "periodicity"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef, memo } from 'react';
import styled, { css } from 'styled-components';
import { body1, blackSecondary } from '@salutejs/plasma-core';
import Color from 'color';
import { mediaQuery } from '../../utils';
import { Footnote1 } from '../Typography';
import { Card } from '../Card/Card';
import { CardBody } from '../Card/CardBody';
import { CardContent } from '../Card/CardContent';
import { useDeviceKind } from '../../hooks';
import { ProductCardStepper } from './ProductCardStepper';
import { ProductCardText } from './ProductCardText';
import { ProductCardPrice } from './ProductCardPrice';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('ProductCard/ProductCard');
var StyledRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-tygkir-0"
})(["position:relative;"]);
var StyledCard = /*#__PURE__*/styled(Card).withConfig({
  componentId: "plasma-ui__sc-tygkir-1"
})(["height:100%;background-color:", ";color:", ";"], function (_ref) {
  var $backgroundColor = _ref.$backgroundColor;
  return $backgroundColor;
}, blackSecondary);
var StyledMediaSlot = /*#__PURE__*/memo( /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-tygkir-2"
})(["height:100%;min-height:0;& img{display:block;height:100%;}"]));
var getGradient = function getGradient(backgroundColor) {
  var color = Color(backgroundColor);
  return "linear-gradient(\n        180deg,\n        ".concat(color.alpha(0).string(), " 0%,\n        ").concat(color.alpha(0.0156863).string(), " 8.62%,\n        ").concat(color.alpha(0.054902).string(), " 16.56%,\n        ").concat(color.alpha(0.117647).string(), " 23.93%,\n        ").concat(color.alpha(0.2).string(), " 30.85%,\n        ").concat(color.alpha(0.290196).string(), " 37.42%,\n        ").concat(color.alpha(0.392157).string(), " 43.77%,\n        ").concat(color.alpha(0.501961).string(), " 50%,\n        ").concat(color.alpha(0.607843).string(), " 56.23%,\n        ").concat(color.alpha(0.709804).string(), " 62.58%,\n        ").concat(color.alpha(0.8).string(), " 69.15%,\n        ").concat(color.alpha(0.882353).string(), " 76.07%,\n        ").concat(color.alpha(0.945098).string(), " 83.44%,\n        ").concat(color.alpha(0.984314).string(), " 91.38%,\n        ").concat(backgroundColor, " 100%\n    )");
};
var StyledCardBody = /*#__PURE__*/styled(CardBody).withConfig({
  componentId: "plasma-ui__sc-tygkir-3"
})(["justify-content:space-between;"]);

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledCardContent = /*#__PURE__*/styled(CardContent).withConfig({
  componentId: "plasma-ui__sc-tygkir-4"
})(["padding:0 0.75rem 0.75rem;border-radius:0;background-color:", ";transition:", ";&::after{content:'';position:absolute;top:-2.5rem;left:0;right:0;height:2.5rem;transition:", ";background:", ";}", ""], function (_ref2) {
  var $backgroundColor = _ref2.$backgroundColor;
  return $backgroundColor;
}, function (_ref3) {
  var theme = _ref3.theme;
  return theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out';
}, function (_ref4) {
  var theme = _ref4.theme;
  return theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out';
}, function (_ref5) {
  var $backgroundColor = _ref5.$backgroundColor;
  return $backgroundColor && getGradient($backgroundColor);
}, function (_ref6) {
  var $isValuePositive = _ref6.$isValuePositive;
  return $isValuePositive && css(["margin-top:-3rem;"]);
});

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledAdditionalInfo = /*#__PURE__*/memo( /*#__PURE__*/styled(Footnote1).withConfig({
  componentId: "plasma-ui__sc-tygkir-5"
})(["overflow:hidden;text-overflow:ellipsis;white-space:nowrap;", ""], function (props) {
  return mediaQuery('XL', props.theme.deviceScale)(css(["", ""], body1));
}));
var StyledBottom = /*#__PURE__*/memo( /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-tygkir-6"
})(["display:flex;align-items:center;flex-direction:column;margin-top:0.25rem;"]));

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledStepper = /*#__PURE__*/memo( /*#__PURE__*/styled(ProductCardStepper).withConfig({
  componentId: "plasma-ui__sc-tygkir-7"
})(["width:100%;transition:", ";", ""], function (_ref7) {
  var theme = _ref7.theme;
  return theme.lowPerformance ? 'unset' : 'all 0.15s ease-in-out';
}, function (_ref8) {
  var $onTop = _ref8.$onTop;
  return $onTop ? css(["margin-top:-2.5rem;"]) : css(["margin-top:0.5rem;"]);
}));
var StyledBadges = /*#__PURE__*/memo( /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-tygkir-8"
})(["position:absolute;top:0.5rem;left:0.5rem;z-index:1;display:flex;flex-wrap:wrap;gap:0.25rem;max-width:calc(100% - 0.75rem);"]));

/**
 * Карточка продукта с возможностью указания картинки, текста, цены и выбора количества.
 */
// eslint-disable-next-line prefer-arrow-callback
export var ProductCard = /*#__PURE__*/forwardRef(function ProductCard(_ref9, ref) {
  var badge = _ref9.badge,
    media = _ref9.media,
    text = _ref9.text,
    additionalInfo = _ref9.additionalInfo,
    price = _ref9.price,
    oldPrice = _ref9.oldPrice,
    quantity = _ref9.quantity,
    quantityStep = _ref9.quantityStep,
    quantityMin = _ref9.quantityMin,
    quantityMax = _ref9.quantityMax,
    onQuantityChange = _ref9.onQuantityChange,
    disabled = _ref9.disabled,
    disabledAction = _ref9.disabledAction,
    readonly = _ref9.readonly,
    _ref9$backgroundColor = _ref9.backgroundColor,
    backgroundColor = _ref9$backgroundColor === void 0 ? '#FFFFFF' : _ref9$backgroundColor,
    periodicity = _ref9.periodicity,
    rest = _objectWithoutProperties(_ref9, _excluded);
  var _useDeviceKind = useDeviceKind(),
    isSberBox = _useDeviceKind.isSberBox;
  var isReadonly = isSberBox || readonly;
  var tabIndex = isSberBox ? 0 : -1;
  return /*#__PURE__*/React.createElement(StyledRoot, null, badge && /*#__PURE__*/React.createElement(StyledBadges, null, badge), /*#__PURE__*/React.createElement(StyledCard, _extends({}, rest, {
    ref: ref,
    tabIndex: tabIndex,
    outlined: isSberBox,
    disabled: disabled,
    $backgroundColor: backgroundColor
  }), /*#__PURE__*/React.createElement(StyledCardBody, null, media && /*#__PURE__*/React.createElement(StyledMediaSlot, null, media), /*#__PURE__*/React.createElement(StyledCardContent, {
    $isValuePositive: !isReadonly && !!quantity && quantity > 0,
    $backgroundColor: backgroundColor
  }, /*#__PURE__*/React.createElement(ProductCardText, {
    text: text
  }), additionalInfo && /*#__PURE__*/React.createElement(StyledAdditionalInfo, null, additionalInfo), (price !== undefined || quantity !== undefined) && /*#__PURE__*/React.createElement(StyledBottom, null, /*#__PURE__*/React.createElement(ProductCardPrice, {
    price: price,
    oldPrice: oldPrice,
    periodicity: periodicity
  }), !disabled && quantity !== undefined && /*#__PURE__*/React.createElement(StyledStepper, {
    readonly: isReadonly,
    value: quantity,
    step: quantityStep,
    min: quantityMin,
    max: quantityMax,
    onChange: onQuantityChange,
    $onTop: isReadonly || price !== undefined && quantity === 0,
    disabled: disabledAction || disabled
  }))))));
});