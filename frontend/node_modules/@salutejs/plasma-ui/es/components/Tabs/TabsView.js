import styled, { css } from 'styled-components';
import { Tabs as BaseTabs, StyledTabs } from '@salutejs/plasma-core';
import { surfaceLiquid01, blackSecondary, transparent } from '@salutejs/plasma-tokens';
import { applyInteraction } from '../../mixins';
import { StyledTabItem } from './TabItem';

/**
 * Размеры для контейнера и айтемов (в css vars).
 * Паддинги айтемов дополнительно обыгрываются в TabItem.
 * Так нужно поступать, потому что у айтемов есть своя логика паддингов,
 * а размеры (свойство size) задаются через компонент Tabs.
 */
var sizes = {
  l: function l(stretch) {
    return css(["--tab-item-padding-x:", "rem;--tab-item-padding-y:0.875rem;--tab-item-padding-y-reduced:0.75rem;--tab-item-height:3rem;--tab-item-border-radius:1rem;height:3.25rem;border-radius:1.125rem;"], stretch ? 0.75 : 1.5);
  },
  m: function m(stretch) {
    return css(["--tab-item-padding-x:", "rem;--tab-item-padding-y:0.75rem;--tab-item-padding-y-reduced:0.5rem;--tab-item-height:2.5rem;--tab-item-border-radius:0.75rem;height:2.75rem;border-radius:0.875rem;"], stretch ? 0.75 : 1.25);
  },
  s: function s(stretch) {
    return css(["--tab-item-padding-x:", "rem;--tab-item-padding-y:0.625rem;--tab-item-padding-y-reduced:0.375rem;--tab-item-height:2.25rem;--tab-item-border-radius:0.75rem;height:2.5rem;border-radius:0.875rem;"], stretch ? 0.625 : 1);
  }
};
var shiftingSizes = {
  l: function l(stretch) {
    return "-".concat(stretch ? 0.875 : 1.625, "rem");
  },
  m: function m(stretch) {
    return "-".concat(stretch ? 0.875 : 1.375, "rem");
  },
  s: function s(stretch) {
    return "-".concat(stretch ? 0.75 : 1.125, "rem");
  }
};
var outlineSizes = {
  l: {
    radius: '1.125rem'
  },
  m: {
    radius: '0.875rem'
  },
  s: {
    radius: '0.875rem'
  }
};

/**
 * Цвета контейнера.
 */
var views = {
  secondary: surfaceLiquid01,
  black: blackSecondary,
  clear: transparent
};
/**
 * Визуальная составляющая контейнера (списка) вкладок.
 */
export var TabsView = /*#__PURE__*/styled(BaseTabs).withConfig({
  componentId: "plasma-ui__sc-1aott2z-0"
})(["--tab-focus-border-size:0.125rem;--tabs-margin:var(--plasma-grid-margin,0rem);", ";", "{padding:var(--tab-focus-border-size);background-color:", ";&:focus{outline:0 none;}", ";", " ", " & > ", "{", "}}"], function (_ref) {
  var _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'l' : _ref$size,
    _ref$stretch = _ref.stretch,
    stretch = _ref$stretch === void 0 ? false : _ref$stretch,
    shiftLeft = _ref.shiftLeft,
    shiftRight = _ref.shiftRight;
  return css(["", " ", ""], shiftLeft && css(["margin-left:calc(", " - var(--tab-focus-border-size) * 2);"], shiftingSizes[size](stretch)), shiftRight && css(["margin-right:", ";"], shiftingSizes[size](stretch)));
}, StyledTabs, function (_ref2) {
  var _ref2$view = _ref2.view,
    view = _ref2$view === void 0 ? 'secondary' : _ref2$view;
  return views[view];
}, function (_ref3) {
  var _ref3$size = _ref3.size,
    size = _ref3$size === void 0 ? 'l' : _ref3$size,
    _ref3$stretch = _ref3.stretch,
    stretch = _ref3$stretch === void 0 ? false : _ref3$stretch;
  return css(["", ";"], sizes[size](stretch));
}, function (_ref4) {
  var pilled = _ref4.pilled;
  return pilled && css(["--tab-item-border-radius:6.25rem;border-radius:6.25rem;"]);
}, function (_ref5) {
  var _ref5$size = _ref5.size,
    size = _ref5$size === void 0 ? 'l' : _ref5$size,
    pilled = _ref5.pilled;
  return css(["--tab-item-outline-radius:", ";"], pilled ? '6.375rem' : outlineSizes[size].radius);
}, StyledTabItem, function (props) {
  return !props.disabled && applyInteraction(props);
});