function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import styled from 'styled-components';
import { Spinner as SpinnerBase } from '@salutejs/plasma-core';
import { useThemeContext } from '../../hooks';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Spinner/Spinner');
/**
 * Компонент для отображения индикатора загрузки.
 */
var StyledSpinner = /*#__PURE__*/styled(SpinnerBase).withConfig({
  componentId: "plasma-ui__sc-p3vf8-0"
})([""]);
export var Spinner = function Spinner(props) {
  var _useThemeContext = useThemeContext(),
    deviceScale = _useThemeContext.deviceScale;
  return /*#__PURE__*/React.createElement(StyledSpinner, _extends({
    deviceScale: deviceScale
  }, props));
};