var _excluded = ["label", "title", "subTitle", "caption", "size", "children"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled from 'styled-components';
import { primary, secondary } from '@salutejs/plasma-tokens';
import { Body1, Footnote1, Headline1, Headline3 } from '../Typography';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('TextBox/TextBox');
export var Title = /*#__PURE__*/styled(Body1).withConfig({
  componentId: "plasma-ui__sc-19dk7hy-0"
})(["margin:0.125rem 0;color:", ";"], primary);
export var BigTitle = /*#__PURE__*/styled(Headline3).withConfig({
  componentId: "plasma-ui__sc-19dk7hy-1"
})(["margin:0.5rem 0;color:", ";"], primary);
export var BiggerTitle = /*#__PURE__*/styled(Headline1).withConfig({
  componentId: "plasma-ui__sc-19dk7hy-2"
})(["margin:0.5rem 0;color:", ";"], primary);
export var Label = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-19dk7hy-3"
})(["margin:0.375rem 0;color:", ";"], function (_ref) {
  var color = _ref.color;
  return color || secondary;
});
export var SubTitle = /*#__PURE__*/styled(Footnote1).withConfig({
  componentId: "plasma-ui__sc-19dk7hy-4"
})(["margin:0.125rem 0;color:", ";"], function (_ref2) {
  var color = _ref2.color;
  return color || secondary;
});
export var Caption = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-19dk7hy-5"
})(["margin:0.25rem 0;color:", ";"], function (_ref3) {
  var color = _ref3.color;
  return color || secondary;
});
export var TextBoxRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-19dk7hy-6"
})(["& >:first-child{margin-top:0;}& >:last-child{margin-bottom:0;}"]);
/**
 * Компонент для отображения текста в скомпанованном блоке.
 */
export var TextBox = function TextBox(_ref4) {
  var label = _ref4.label,
    title = _ref4.title,
    subTitle = _ref4.subTitle,
    caption = _ref4.caption,
    _ref4$size = _ref4.size,
    size = _ref4$size === void 0 ? 'm' : _ref4$size,
    children = _ref4.children,
    rest = _objectWithoutProperties(_ref4, _excluded);
  if (children) {
    return /*#__PURE__*/React.createElement(TextBoxRoot, rest, children);
  }
  var T = size === 'm' ? Title : BigTitle;
  return /*#__PURE__*/React.createElement(TextBoxRoot, rest, label && /*#__PURE__*/React.createElement(Label, null, label), title && /*#__PURE__*/React.createElement(T, null, title), subTitle && /*#__PURE__*/React.createElement(SubTitle, null, subTitle), caption && /*#__PURE__*/React.createElement(Caption, null, caption));
};