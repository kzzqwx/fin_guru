var _StyledMark;
var _excluded = ["id", "label", "description", "disabled", "focused", "scaleOnInteraction", "style", "className", "singleLine"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { BaseboxRoot, BaseboxInput, BaseboxTrigger, BaseboxContent, BaseboxContentWrapper, BaseboxLabel, BaseboxDescription, applyDisabled, useUniqId, addFocus } from '@salutejs/plasma-core';
import { accent, white, secondary, transparent } from '@salutejs/plasma-tokens';
import { spatnavClassNameAttrs } from '../../utils';
import { IconDone } from './IconDone';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Checkbox/Checkbox');
export var syntheticFocus = function syntheticFocus(ruleset, focused) {
  return css(["input[data-focus-visible-added] + label &{box-shadow:none;outline:none;", "}", ""], ruleset, focused && css(["box-shadow:none;", ""], ruleset));
};
export var StyledRoot = /*#__PURE__*/styled(BaseboxRoot).withConfig({
  componentId: "plasma-ui__sc-i8k5cq-0"
})(["", ";& + &{margin-top:1.25rem;}"], applyDisabled);
export var StyledInput = /*#__PURE__*/styled(BaseboxInput).attrs(spatnavClassNameAttrs).withConfig({
  componentId: "plasma-ui__sc-i8k5cq-1"
})(["appearance:none;width:100%;height:100%;opacity:0;"]);

// TODO: https://github.com/salute-developers/plasma/issues/232
export var StyledTrigger = /*#__PURE__*/styled(BaseboxTrigger).withConfig({
  componentId: "plasma-ui__sc-i8k5cq-2"
})(["--plasma-trigger-border-radius:0.25rem;--plasma-trigger-outline-radius:0.375rem;width:1.25rem;height:1.25rem;flex:0 0 1.25rem;background:", ";box-shadow:inset 0 0 0 0.125rem ", ";color:", ";input:checked + label &{background:", ";box-shadow:inset 0 0 0 0.125rem ", ";}", " border-radius:var(--plasma-trigger-border-radius);", ""], transparent, secondary, white, accent, accent, function (_ref) {
  var $scaleOnInteraction = _ref.$scaleOnInteraction;
  return $scaleOnInteraction && css(["&:hover{transform:scale(1.04);}&:active{transform:scale(0.96);}"]);
}, function (_ref2) {
  var $focused = _ref2.$focused,
    theme = _ref2.theme;
  return css(["", ""], addFocus({
    synthesizeFocus: syntheticFocus,
    focused: $focused,
    lowPerformance: theme.lowPerformance,
    outlineRadius: 'var(--plasma-trigger-outline-radius)'
  }));
});
var StyledMark = /*#__PURE__*/styled(IconDone).withConfig({
  componentId: "plasma-ui__sc-i8k5cq-3"
})(["position:absolute;top:0;left:0;right:0;bottom:0;margin:auto;width:1rem;height:1rem;transition:", ";transform:scale(0);input:checked + label ", " &{transform:scale(1);}"], function (_ref3) {
  var theme = _ref3.theme;
  return theme.lowPerformance ? 'unset' : 'transform 0.1s ease-in-out';
}, StyledTrigger);
export var StyledContent = /*#__PURE__*/styled(BaseboxContent).withConfig({
  componentId: "plasma-ui__sc-i8k5cq-4"
})(["width:calc(100% - 2rem);"]);

/**
 * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.
 */
// eslint-disable-next-line prefer-arrow-callback
export var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(_ref4, ref) {
  var id = _ref4.id,
    label = _ref4.label,
    description = _ref4.description,
    disabled = _ref4.disabled,
    focused = _ref4.focused,
    scaleOnInteraction = _ref4.scaleOnInteraction,
    style = _ref4.style,
    className = _ref4.className,
    _ref4$singleLine = _ref4.singleLine,
    singleLine = _ref4$singleLine === void 0 ? false : _ref4$singleLine,
    rest = _objectWithoutProperties(_ref4, _excluded);
  var uniqId = useUniqId();
  var uniqLabelId = useUniqId();
  var uniqDescriptionId = useUniqId();
  var checkboxId = id || uniqId;
  return /*#__PURE__*/React.createElement(StyledRoot, {
    $disabled: disabled,
    style: style,
    className: className,
    tabIndex: -1
  }, /*#__PURE__*/React.createElement(StyledInput, _extends({
    "aria-labelledby": uniqLabelId,
    "aria-describedby": uniqDescriptionId,
    id: checkboxId,
    ref: ref,
    type: "checkbox",
    disabled: disabled
  }, rest)), /*#__PURE__*/React.createElement(BaseboxContentWrapper, {
    htmlFor: checkboxId
  }, /*#__PURE__*/React.createElement(StyledTrigger, {
    $focused: focused,
    $scaleOnInteraction: scaleOnInteraction
  }, _StyledMark || (_StyledMark = /*#__PURE__*/React.createElement(StyledMark, {
    color: "inherit",
    size: "xs"
  }))), label && /*#__PURE__*/React.createElement(StyledContent, null, /*#__PURE__*/React.createElement(BaseboxLabel, {
    as: "span",
    singleLine: singleLine,
    id: uniqLabelId
  }, label), description && /*#__PURE__*/React.createElement(BaseboxDescription, {
    mt: 4,
    singleLine: singleLine,
    id: uniqDescriptionId
  }, description))));
});