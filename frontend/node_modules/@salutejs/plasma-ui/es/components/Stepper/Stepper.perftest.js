function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import React, { useState, useCallback } from 'react';
import { StepperRoot, StepperButton, StepperValue } from '.';
var customAssemblyProps = {
  step: 1,
  min: 1,
  max: 10,
  disabled: false,
  showWarning: false,
  showFormat: false
};
var icon = /*#__PURE__*/React.createElement("div", {
  style: {
    width: 10,
    height: 10
  }
});
export var Default = function Default() {
  var step = customAssemblyProps.step,
    min = customAssemblyProps.min,
    max = customAssemblyProps.max,
    disabled = customAssemblyProps.disabled,
    showWarning = customAssemblyProps.showWarning,
    showFormat = customAssemblyProps.showFormat;
  var _useState = useState(5),
    _useState2 = _slicedToArray(_useState, 2),
    value = _useState2[0],
    setValue = _useState2[1];
  var formatter = function formatter(val) {
    return "".concat(val, "$");
  };
  var onMinClick = useCallback(function () {
    return setValue(function (value) {
      return Math.max(value - step, min);
    });
  }, [min, step]);
  var onPlusClick = useCallback(function () {
    return setValue(function (value) {
      return Math.min(value + step, max);
    });
  }, [max, step]);
  return /*#__PURE__*/React.createElement(StepperRoot, {
    "aria-label": "\u0421\u0447\u0451\u0442\u0447\u0438\u043A"
  }, /*#__PURE__*/React.createElement(StepperButton, {
    "aria-label": "\u0423\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
    view: value > min ? 'secondary' : 'critical',
    icon: icon,
    onClick: onMinClick
  }), /*#__PURE__*/React.createElement(StepperValue, {
    value: value,
    disabled: disabled,
    showWarning: showWarning,
    formatter: showFormat ? formatter : undefined
  }), /*#__PURE__*/React.createElement(StepperButton, {
    "aria-label": "\u0423\u0432\u0435\u043B\u0438\u0447\u0438\u0442\u044C \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435",
    view: "secondary",
    icon: icon,
    disabled: value >= max,
    onClick: onPlusClick
  }));
};