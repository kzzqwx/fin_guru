var _IconClose, _IconMinus, _IconPlus;
var _excluded = ["value", "step", "min", "max", "disabled", "pin", "onChange", "onFocus", "onBlur", "formatter", "ariaLabelDecrement", "ariaLabelIncrement", "ariaLabelRemove"],
  _excluded2 = ["showRemove", "onRemove"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import { IconMinus, IconPlus, IconClose } from '@salutejs/plasma-icons';
import { StepperButton } from './StepperButton';
import { StepperRoot } from './StepperRoot';
import { StepperValue } from './StepperValue';
import { useStepper } from './Stepper.hooks';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Stepper/Stepper');
/**
 * Готовый компонент для создания счетчика, подобного ``input[type="range"]``.
 */
export var Stepper = function Stepper(_ref) {
  var value = _ref.value,
    step = _ref.step,
    min = _ref.min,
    max = _ref.max,
    disabled = _ref.disabled,
    pin = _ref.pin,
    onChange = _ref.onChange,
    onFocus = _ref.onFocus,
    onBlur = _ref.onBlur,
    formatter = _ref.formatter,
    ariaLabelDecrement = _ref.ariaLabelDecrement,
    ariaLabelIncrement = _ref.ariaLabelIncrement,
    ariaLabelRemove = _ref.ariaLabelRemove,
    props = _objectWithoutProperties(_ref, _excluded);
  var _useStepper = useStepper({
      value: value,
      step: step,
      min: min,
      max: max,
      onChange: onChange
    }),
    onLessClick = _useStepper.onLessClick,
    onMoreClick = _useStepper.onMoreClick,
    isMin = _useStepper.isMin,
    isMax = _useStepper.isMax,
    isLessDisabled = _useStepper.isLessDisabled,
    isMoreDisabled = _useStepper.isMoreDisabled;
  var _ref2 = props,
    remover = _ref2.showRemove,
    onRemove = _ref2.onRemove,
    rest = _objectWithoutProperties(_ref2, _excluded2);
  var onRemoveClick = React.useCallback(function (e) {
    return onRemove === null || onRemove === void 0 ? void 0 : onRemove(e);
  }, [onRemove]);
  return /*#__PURE__*/React.createElement(StepperRoot, rest, /*#__PURE__*/React.createElement(StepperButton, {
    "aria-label": isMin && remover ? ariaLabelRemove : ariaLabelDecrement,
    disabled: disabled || !remover && isLessDisabled,
    icon: isMin && remover ? _IconClose || (_IconClose = /*#__PURE__*/React.createElement(IconClose, {
      color: "inherit",
      size: "xs"
    })) : _IconMinus || (_IconMinus = /*#__PURE__*/React.createElement(IconMinus, {
      color: "inherit",
      size: "xs"
    })),
    view: isMin && remover ? 'critical' : 'secondary',
    pin: pin,
    onClick: isMin && remover ? onRemoveClick : onLessClick,
    onFocus: onFocus,
    onBlur: onBlur
  }), /*#__PURE__*/React.createElement(StepperValue, {
    value: value,
    disabled: disabled,
    showWarning: isMax,
    formatter: formatter
  }), /*#__PURE__*/React.createElement(StepperButton, {
    "aria-label": ariaLabelIncrement,
    disabled: disabled || isMoreDisabled,
    icon: _IconPlus || (_IconPlus = /*#__PURE__*/React.createElement(IconPlus, {
      color: "inherit",
      size: "xs"
    })),
    pin: pin,
    onClick: onMoreClick,
    onFocus: onFocus,
    onBlur: onBlur
  }));
};