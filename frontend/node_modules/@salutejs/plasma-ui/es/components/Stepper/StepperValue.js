var _excluded = ["value", "disabled", "showWarning", "formatter"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled, { css } from 'styled-components';
import { body2, text, warning, scalingPixelBasis } from '@salutejs/plasma-tokens';
import { applyNoSelect } from '@salutejs/plasma-core';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Stepper/StepperValue');
var StyledValue = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-ui__sc-cq1i1c-0"
})(["", " box-sizing:border-box;margin-left:", "rem;margin-right:", "rem;min-width:", "rem;color:", ";text-align:center;", ";", " ", ""], body2, 12 / scalingPixelBasis, 12 / scalingPixelBasis, 20 / scalingPixelBasis, text, applyNoSelect, function (_ref) {
  var showWarning = _ref.showWarning;
  return showWarning && css(["color:", ";"], warning);
}, function (_ref2) {
  var disabled = _ref2.disabled;
  return disabled && css(["opacity:0.4;"]);
});
/**
 * Компонент для отображения значения степпера.
 */
export var StepperValue = function StepperValue(_ref3) {
  var value = _ref3.value,
    disabled = _ref3.disabled,
    showWarning = _ref3.showWarning,
    formatter = _ref3.formatter,
    rest = _objectWithoutProperties(_ref3, _excluded);
  return /*#__PURE__*/React.createElement(StyledValue, _extends({
    role: "status",
    "aria-live": "polite",
    disabled: disabled,
    showWarning: showWarning
  }, rest), typeof formatter === 'function' ? formatter(value) : value);
};