var _StyledEllipse;
var _excluded = ["id", "label", "description", "disabled", "focused", "scaleOnInteraction", "style", "className", "singleLine"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { BaseboxLabel, BaseboxDescription, BaseboxContentWrapper, useUniqId } from '@salutejs/plasma-core';
import { white } from '@salutejs/plasma-tokens';
import { StyledRoot as CheckboxRoot, StyledInput as CheckboxInput, StyledTrigger as CheckboxTrigger, StyledContent as CheckboxContent } from '../Checkbox/Checkbox';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Radiobox/Radiobox');
var StyledTrigger = /*#__PURE__*/styled(CheckboxTrigger).withConfig({
  componentId: "plasma-ui__sc-1ol40bw-0"
})(["--plasma-trigger-border-radius:1.25rem;--plasma-trigger-outline-radius:1.375rem;"]);

// TODO: https://github.com/salute-developers/plasma/issues/232
var StyledEllipse = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-ui__sc-1ol40bw-1"
})(["position:absolute;top:0;left:0;right:0;bottom:0;margin:auto;width:0.625rem;height:0.625rem;border-radius:0.625rem;background-color:", ";transition:", ";transform:scale(0);input:checked + label ", " &{transform:scale(1);}"], white, function (_ref) {
  var theme = _ref.theme;
  return theme.lowPerformance ? 'unset' : 'transform 0.3s ease-in-out';
}, StyledTrigger);

/**
 * Переключатель, или *радиокнопка*.
 */
// eslint-disable-next-line prefer-arrow-callback
export var Radiobox = /*#__PURE__*/forwardRef(function Radiobox(_ref2, ref) {
  var id = _ref2.id,
    label = _ref2.label,
    description = _ref2.description,
    disabled = _ref2.disabled,
    focused = _ref2.focused,
    scaleOnInteraction = _ref2.scaleOnInteraction,
    style = _ref2.style,
    className = _ref2.className,
    _ref2$singleLine = _ref2.singleLine,
    singleLine = _ref2$singleLine === void 0 ? false : _ref2$singleLine,
    rest = _objectWithoutProperties(_ref2, _excluded);
  var uniqId = useUniqId();
  var uniqLabelId = useUniqId();
  var uniqDescriptionId = useUniqId();
  var radioboxId = id || uniqId;
  return /*#__PURE__*/React.createElement(CheckboxRoot, {
    $disabled: disabled,
    style: style,
    className: className,
    tabIndex: -1
  }, /*#__PURE__*/React.createElement(CheckboxInput, _extends({
    "aria-labelledby": uniqLabelId,
    "aria-describedby": uniqDescriptionId,
    id: radioboxId,
    ref: ref,
    type: "radio",
    disabled: disabled
  }, rest)), /*#__PURE__*/React.createElement(BaseboxContentWrapper, {
    htmlFor: radioboxId
  }, /*#__PURE__*/React.createElement(StyledTrigger, {
    $focused: focused,
    $scaleOnInteraction: scaleOnInteraction
  }, _StyledEllipse || (_StyledEllipse = /*#__PURE__*/React.createElement(StyledEllipse, null))), label && /*#__PURE__*/React.createElement(CheckboxContent, null, /*#__PURE__*/React.createElement(BaseboxLabel, {
    as: "span",
    singleLine: singleLine,
    id: uniqLabelId
  }, label), description && /*#__PURE__*/React.createElement(BaseboxDescription, {
    mt: 4,
    singleLine: singleLine,
    id: uniqDescriptionId
  }, description))));
});