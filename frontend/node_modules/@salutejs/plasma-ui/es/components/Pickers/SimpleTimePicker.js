var _excluded = ["id", "type", "range"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import { padZeroNumber as formatter } from '@salutejs/plasma-core';
import { Picker } from './Picker';
export var SimpleTimePicker = /*#__PURE__*/React.memo(function (_ref) {
  var id = _ref.id,
    type = _ref.type,
    range = _ref.range,
    rest = _objectWithoutProperties(_ref, _excluded);
  var items = range.map(function (value) {
    return {
      label: formatter(value),
      value: value
    };
  });
  return /*#__PURE__*/React.createElement(Picker, _extends({
    id: id ? "".concat(id, "-").concat(type) : undefined,
    items: items
  }, rest));
});