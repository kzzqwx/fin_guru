var _IconPlaceholder;
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import { IconPlaceholder } from '../../helpers';
import { TextArea } from '.';
var func = function func() {};
var defaultProps = {
  id: 'example-textarea',
  placeholder: 'Заполните многострочное поле',
  helperText: 'Подсказка к полю',
  enableRightIcon: true,
  resize: 'vertical',
  disabled: false,
  readOnly: false
};
var status = '';
export var Default = function Default() {
  return /*#__PURE__*/React.createElement(TextArea, _extends({
    value: "\u0417\u043D\u0430\u0447\u0435\u043D\u0438\u0435 \u043F\u043E\u043B\u044F",
    contentRight: _IconPlaceholder || (_IconPlaceholder = /*#__PURE__*/React.createElement(IconPlaceholder, null)),
    status: status,
    onChange: func,
    onFocus: func,
    onBlur: func
  }, defaultProps));
};