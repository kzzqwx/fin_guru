import React from 'react';
import { IconProps, IconSize } from './IconRoot';
export declare const iconSectionsSet: {
    navigation: {
        apps: React.FC<IconProps>;
        disclosureDown: React.FC<IconProps>;
        disclosureLeft: React.FC<IconProps>;
        disclosureRight: React.FC<IconProps>;
        disclosureUp: React.FC<IconProps>;
        maximize: React.FC<IconProps>;
    };
    universal: {
        avatar: React.FC<IconProps>;
        calendar: React.FC<IconProps>;
        clock: React.FC<IconProps>;
        clockFilled: React.FC<IconProps>;
        cross: React.FC<IconProps>;
        crossCircle: React.FC<IconProps>;
        crossSmall: React.FC<IconProps>;
        edit: React.FC<IconProps>;
        event: React.FC<IconProps>;
        house: React.FC<IconProps>;
        houseSbol: React.FC<IconProps>;
        moreHorizontal: React.FC<IconProps>;
        moreVertical: React.FC<IconProps>;
        percentStroke: React.FC<IconProps>;
        persone: React.FC<IconProps>;
        plusCircle: React.FC<IconProps>;
        settings: React.FC<IconProps>;
        trash: React.FC<IconProps>;
        trashFilled: React.FC<IconProps>;
        cart: React.FC<IconProps>;
        cartAlt: React.FC<IconProps>;
    };
    action: {
        alarm: React.FC<IconProps>;
        bankCard: React.FC<IconProps>;
        bankCardAlt1: React.FC<IconProps>;
        heart: React.FC<IconProps>;
        heartStroke: React.FC<IconProps>;
        language: React.FC<IconProps>;
        lock: React.FC<IconProps>;
        reset: React.FC<IconProps>;
        star: React.FC<IconProps>;
        timerStroke: React.FC<IconProps>;
        eye: React.FC<IconProps>;
        share: React.FC<IconProps>;
        cloudUpload: React.FC<IconProps>;
        record: React.FC<IconProps>;
        recording: React.FC<IconProps>;
        raisedHand: React.FC<IconProps>;
    };
    alert: {
        bell: React.FC<IconProps>;
        bellActive: React.FC<IconProps>;
        help: React.FC<IconProps>;
        info: React.FC<IconProps>;
        warning: React.FC<IconProps>;
    };
    av: {
        camReverse: React.FC<IconProps>;
        cameraVideo: React.FC<IconProps>;
        videoOff: React.FC<IconProps>;
        mic: React.FC<IconProps>;
        micNone: React.FC<IconProps>;
        micOff: React.FC<IconProps>;
        musicMic: React.FC<IconProps>;
        volumeAlt1: React.FC<IconProps>;
        volumeAlt2: React.FC<IconProps>;
        volumeDown: React.FC<IconProps>;
        mute: React.FC<IconProps>;
        volumeOff: React.FC<IconProps>;
        volumeUp: React.FC<IconProps>;
        videoClip: React.FC<IconProps>;
        musicAlbum: React.FC<IconProps>;
        music: React.FC<IconProps>;
    };
    connection: {
        ethernet: React.FC<IconProps>;
        inputs: React.FC<IconProps>;
        network: React.FC<IconProps>;
        powerWire: React.FC<IconProps>;
        wifi: React.FC<IconProps>;
        wifiOff: React.FC<IconProps>;
        wifiSignal0: React.FC<IconProps>;
        wifiSignal1: React.FC<IconProps>;
        wifiSignal2: React.FC<IconProps>;
        wifiSignal3: React.FC<IconProps>;
        wifiSignalLock: React.FC<IconProps>;
    };
    hardware: {
        devices: React.FC<IconProps>;
        devicesAlt1: React.FC<IconProps>;
        device: React.FC<IconProps>;
        deviceTv: React.FC<IconProps>;
        display: React.FC<IconProps>;
        gamepad: React.FC<IconProps>;
        gyro: React.FC<IconProps>;
        headphones: React.FC<IconProps>;
        keyboard: React.FC<IconProps>;
        mobile: React.FC<IconProps>;
        mobileAutorotate: React.FC<IconProps>;
        phone: React.FC<IconProps>;
        phoneStroke: React.FC<IconProps>;
        phoneWiFi: React.FC<IconProps>;
        remotesAndAccessories: React.FC<IconProps>;
        remotesAndAccessoriesStroke: React.FC<IconProps>;
        sberBoxTime: React.FC<IconProps>;
        sberBoxTimeStroke: React.FC<IconProps>;
        sberBoxTop: React.FC<IconProps>;
        sberBoxTopFront: React.FC<IconProps>;
        sberBoxTopStroke: React.FC<IconProps>;
        sberPortal: React.FC<IconProps>;
        sberPortalStroke: React.FC<IconProps>;
        tv: React.FC<IconProps>;
        tvAlt1: React.FC<IconProps>;
        tvChannel: React.FC<IconProps>;
        tvChannelAlt1: React.FC<IconProps>;
        tvMode: React.FC<IconProps>;
        tvModeWiFi: React.FC<IconProps>;
    };
    communication: {
        addToCall: React.FC<IconProps>;
        call: React.FC<IconProps>;
        callCircle: React.FC<IconProps>;
        callEnd: React.FC<IconProps>;
        callEndCircle: React.FC<IconProps>;
        callBlock: React.FC<IconProps>;
        callDash: React.FC<IconProps>;
        message: React.FC<IconProps>;
        feedback: React.FC<IconProps>;
    };
    files: {
        cardstack: React.FC<IconProps>;
        copy: React.FC<IconProps>;
        folder: React.FC<IconProps>;
    };
    map: {
        location: React.FC<IconProps>;
        locationFill: React.FC<IconProps>;
        navigationArrow: React.FC<IconProps>;
    };
    player: {
        next: React.FC<IconProps>;
        pause: React.FC<IconProps>;
        play: React.FC<IconProps>;
        previous: React.FC<IconProps>;
        repeat: React.FC<IconProps>;
        shuffle: React.FC<IconProps>;
    };
    other: {
        picture: React.FC<IconProps>;
        pictureFilled: React.FC<IconProps>;
        sleep: React.FC<IconProps>;
        pip1: React.FC<IconProps>;
        storeGamepad: React.FC<IconProps>;
        storeRemote: React.FC<IconProps>;
        ticket: React.FC<IconProps>;
        sberSpasibo: React.FC<IconProps>;
    };
    logo: {
        salute: React.FC<IconProps>;
        saluteCircle: React.FC<IconProps>;
        sberAlt: React.FC<IconProps>;
    };
};
declare type IconSections = typeof iconSectionsSet;
declare type DistributiveValues<T extends Record<string, any>> = T extends T ? keyof T : never;
declare type InnerValues<T extends Record<keyof T, object>, K extends keyof T> = DistributiveValues<T[K]>;
export declare type IconName = InnerValues<IconSections, keyof IconSections>;
export declare const iconSet: Record<IconName, React.FC<IconProps>>;
interface Props {
    icon: IconName;
    size?: IconSize;
    color?: string;
    className?: string;
}
/**
 * @depracted
 * Используйте иконки отдельно, иначе не работает tree shaking иконок
 */
export declare const Icon: React.FC<Props>;
export {};
