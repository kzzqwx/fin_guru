"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IconRoot = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("styled-components"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
var sizeMap = {
  xs: 1,
  // 16px
  s: 1.5 // 24px
  // m: 2.25, // 36px
  // l: 3, // 48px
  // xl: 3.5, // 56px
  // xxl: 4, // 64px
};
var StyledRoot = /*#__PURE__*/_styledComponents["default"].div.withConfig({
  componentId: "plasma__sc-14tgvbx-0"
})(["display:inline-flex;", ""], function (_ref) {
  var w = _ref.w;
  return (0, _styledComponents.css)(["width:", ";height:", ";flex:0 0 ", ";"], w, w, w);
});
var IconRoot = exports.IconRoot = function IconRoot(_ref2) {
  var IconComponent = _ref2.icon,
    size = _ref2.size,
    color = _ref2.color,
    className = _ref2.className;
  var c = color || 'var(--plasma-colors-primary)';
  var w = "".concat(sizeMap[size], "rem");
  return /*#__PURE__*/_react["default"].createElement(StyledRoot, {
    "aria-hidden": true,
    w: w,
    className: className
  }, /*#__PURE__*/_react["default"].createElement(IconComponent, {
    color: c,
    size: size
  }));
};