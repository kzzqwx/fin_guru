import React from 'react';
import type { ComponentType, ForwardRefExoticComponent } from 'react';
import { DropdownUncontrolledProps } from './DropdownUncontrolled';
export interface WithAssistiveDropdownProps extends Pick<DropdownUncontrolledProps, 'id' | 'items' | 'placement' | 'trigger' | 'disabled' | 'onToggle' | 'onItemSelect'> {
    /**
     * WAI-ARIA role меню в выпадающем списке.
     */
    menuRole?: string;
    /**
     * WAI-ARIA role элемента меню в выпадающем списке.
     */
    menuItemRole?: string;
    /**
     * Закрыть выпадающий список после выбора.
     */
    closeOnSelect?: boolean;
    /**
     * Обработчик изменения активного индекса элемента,
     * на который встали клавиатурной навигацией и который нужно подсветить.
     */
    onIndexChange?: (index: number) => void;
}
/**
 * Декорирует переданный компонент, выводя доступный dropdown.
 */
export declare const withAssistiveDropdown: <P extends object>(Component: React.ComponentType<P> | React.ForwardRefExoticComponent<P>, Dropdown?: ComponentType<DropdownUncontrolledProps>) => React.ForwardRefExoticComponent<React.PropsWithoutRef<P & WithAssistiveDropdownProps> & React.RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=withAssistiveDropdown.d.ts.map