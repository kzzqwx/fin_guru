"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownUncontrolled = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _DropdownMenu = /*#__PURE__*/require("./DropdownMenu");
var _DropdownPopup = /*#__PURE__*/require("./DropdownPopup");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["id", "isOpen", "items", "children", "offsetTop", "disabled", "style", "className", "hoverIndex", "placement", "trigger", "onBlur", "onKeyDown", "onToggle", "onItemSelect", "onHover"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Dropdown/DropdownUncontrolled');
/**
 * Выпадающий список с внешнего контроля видимости через props: `isOpen` и `onToggle`.
 */
var DropdownUncontrolled = exports.DropdownUncontrolled = function DropdownUncontrolled(_ref) {
  var id = _ref.id,
    isOpen = _ref.isOpen,
    items = _ref.items,
    children = _ref.children,
    offsetTop = _ref.offsetTop,
    disabled = _ref.disabled,
    style = _ref.style,
    className = _ref.className,
    hoverIndex = _ref.hoverIndex,
    _ref$placement = _ref.placement,
    placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
    _ref$trigger = _ref.trigger,
    trigger = _ref$trigger === void 0 ? 'click' : _ref$trigger,
    onBlur = _ref.onBlur,
    onKeyDown = _ref.onKeyDown,
    onToggleExternal = _ref.onToggle,
    onItemSelect = _ref.onItemSelect,
    onHover = _ref.onHover,
    rest = _objectWithoutProperties(_ref, _excluded);
  var hasItems = Array.isArray(items) && items.length > 0;
  var onToggle = (0, _react.useCallback)(function (newIsOpen, event) {
    if (newIsOpen && hasItems && !disabled) {
      onToggleExternal === null || onToggleExternal === void 0 || onToggleExternal(true, event);
    } else {
      onToggleExternal === null || onToggleExternal === void 0 || onToggleExternal(false, event);
    }
  }, [onToggleExternal, disabled, hasItems]);
  return /*#__PURE__*/_react["default"].createElement(_DropdownPopup.DropdownPopup, {
    isOpen: isOpen,
    trigger: trigger,
    placement: placement,
    disclosure: children,
    offsetTop: offsetTop,
    style: style,
    className: className,
    onToggle: onToggle,
    onKeyDown: onKeyDown,
    onBlur: onBlur
  }, /*#__PURE__*/_react["default"].createElement(_DropdownMenu.DropdownMenu, _extends({}, rest, {
    id: id,
    items: items,
    hoverIndex: hoverIndex,
    onHover: onHover,
    onItemSelect: onItemSelect
  })));
};