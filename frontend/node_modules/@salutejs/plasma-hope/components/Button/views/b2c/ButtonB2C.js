"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonB2C = void 0;
var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _plasmaTypo = /*#__PURE__*/require("@salutejs/plasma-typo");
var _Button = /*#__PURE__*/require("../../Button.props");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var buttonTypography = {
  l: _plasmaTypo.bodyLBold,
  m: _plasmaTypo.bodyMBold,
  s: _plasmaTypo.bodySBold,
  xs: _plasmaTypo.bodyXSBold,
  xxs: _plasmaTypo.bodyXS
};
var buttonSizesB2C = /*#__PURE__*/_objectSpread( /*#__PURE__*/_objectSpread({}, _plasmaCore.buttonSizes), {}, {
  xs: {
    height: '2rem',
    paddingY: '0.5625rem',
    paddingX: '0.75rem',
    paddingContentX: '0.75rem',
    paddingStretchX: '0.75rem',
    radius: '0.5rem',
    radiusCircle: '1rem'
  },
  xxs: {
    height: '1.5rem',
    paddingY: '0.3125rem',
    paddingX: '0.625rem',
    paddingContentX: '0.625rem',
    paddingStretchX: '0.625rem',
    radius: '0.375rem',
    radiusCircle: '0.75rem'
  }
});
var applySizes = /*#__PURE__*/(0, _plasmaCore.getButtonSizesMixin)(buttonSizesB2C, buttonTypography);
var ButtonB2C = exports.ButtonB2C = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.ButtonRoot).withConfig({
  componentId: "plasma-web-core__sc-dz1nyk-0"
})(["", " ", ""], applySizes, function (_ref) {
  var view = _ref.view;
  return _Button.buttonViews[view];
});