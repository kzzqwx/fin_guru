"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withMultiSelect = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _Select = /*#__PURE__*/require("./Select.utils");
var _excluded = ["value", "items", "separator", "onChange"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Выпадающий список с возможностью выбора нескольких значений.
 */
var withMultiSelect = exports.withMultiSelect = function withMultiSelect(View) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
    var value = _ref.value,
      _ref$items = _ref.items,
      items = _ref$items === void 0 ? [] : _ref$items,
      _ref$separator = _ref.separator,
      separator = _ref$separator === void 0 ? ', ' : _ref$separator,
      onChange = _ref.onChange,
      rest = _objectWithoutProperties(_ref, _excluded);
    var isActive = (0, _react.useCallback)(function (item) {
      return Boolean(value && value.includes(item.value));
    }, [value]);
    var viewValue = (0, _react.useMemo)(function () {
      return (0, _Select.flattenItemsRecursive)(items).filter(isActive).map(function (item) {
        return item.label;
      }).join(separator);
    }, [value, items, isActive]);
    var viewItems = (0, _react.useMemo)(function () {
      return (0, _Select.setActiveRecursive)(items, isActive);
    }, [value, items, isActive]);
    var onItemSelect = (0, _react.useCallback)(function (item) {
      var set = new Set(value);
      if (set.has(item.value)) {
        set["delete"](item.value);
      } else {
        set.add(item.value);
      }
      onChange === null || onChange === void 0 || onChange(Array.from(set));
    }, [value, onChange]);
    return /*#__PURE__*/_react["default"].createElement(View, _extends({}, rest, {
      ref: ref,
      value: viewValue,
      items: viewItems,
      onItemSelect: onItemSelect
    }));
  });
};