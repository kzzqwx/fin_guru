import React, { ButtonHTMLAttributes, HTMLAttributes } from 'react';
import type { FieldProps as BaseProps, DisabledProps } from '@salutejs/plasma-core';
import { Design } from './types';
export interface FieldProps extends BaseProps, DisabledProps, HTMLAttributes<HTMLLabelElement> {
}
export declare type SelectRefElement = HTMLButtonElement;
export interface SelectButtonProps extends Pick<FieldProps, 'status' | 'placeholder' | 'disabled'>, Omit<ButtonHTMLAttributes<SelectRefElement>, 'value' | 'onResize' | 'onResizeCapture' | 'nonce'> {
    /**
     * Выводимое значение.
     */
    value?: string | number | null;
    hasItems?: boolean;
    isOpen?: boolean;
    children?: never;
}
export interface StyledButtonProps extends Pick<SelectButtonProps, 'status' | 'hasItems' | 'isOpen'> {
    focused?: boolean;
}
export declare const SelectButton: React.ForwardRefExoticComponent<SelectButtonProps & Design & React.RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=SelectButton.d.ts.map