"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _plasmaCyUtils = /*#__PURE__*/require("@salutejs/plasma-cy-utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; } /* eslint-disable */
var Codes = /*#__PURE__*/function (Codes) {
  Codes[Codes["ArrowUp"] = 38] = "ArrowUp";
  Codes[Codes["ArrowDown"] = 40] = "ArrowDown";
  Codes[Codes["Enter"] = 13] = "Enter";
  Codes[Codes["Space"] = 32] = "Space";
  Codes[Codes["Esc"] = 27] = "Esc";
  Codes[Codes["PageUp"] = 33] = "PageUp";
  Codes[Codes["PageDown"] = 34] = "PageDown";
  return Codes;
}(Codes || {});
var id = 'test-select';
var items = [{
  value: 'each',
  label: 'Каждый'
}, {
  value: 'hunter',
  label: 'Охотник',
  isDisabled: true
}, {
  value: 'wants',
  label: 'Желает'
}, {
  value: 'toKnow',
  label: 'Знать',
  items: [{
    value: '_fullText',
    label: 'Каждый охотник желает знать, где сидит фазан'
  }, {
    value: '_thePheasant',
    label: 'Фазан'
  }, {
    value: '_is',
    label: 'Сидит'
  }]
}, {
  value: 'where',
  label: 'Где'
}, {
  value: 'is',
  label: 'Сидит'
}, {
  value: 'thePheasant',
  label: 'Фазан'
}, {
  value: 'fullText',
  label: 'Каждый охотник желает знать, где сидит фазан'
}];
describe('plasma-hope: Select', function () {
  var _CypressTestDecorator, _CypressTestDecorator2, _CypressTestDecorator3, _CypressTestDecorator4;
  var Select = (0, _plasmaCyUtils.getComponent)('Select');
  var ControlledSelect = function ControlledSelect() {
    var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      value = _useState2[0],
      setValue = _useState2[1];
    return /*#__PURE__*/_react["default"].createElement(Select, {
      id: id,
      value: value,
      onChange: function onChange(v) {
        return setValue(v);
      },
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    });
  };
  it('default', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator || (_CypressTestDecorator = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    }))));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('disabled', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator2 || (_CypressTestDecorator2 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      disabled: true,
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    }))));
    cy.get('button').click({
      force: true
    });
    cy.matchImageSnapshot();
  });
  it('empty', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      items: [],
      placeholder: "\u041F\u0443\u0441\u0442\u043E\u0439 \u0441\u043F\u0438\u0441\u043E\u043A",
      helperText: "Empty"
    })));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('multiselect', function () {
    (0, _plasmaCyUtils.mount)( /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      multiselect: true,
      value: ['each', 'wants'],
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    })));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('item click', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator3 || (_CypressTestDecorator3 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))));
    cy.get('button').click();
    cy.get('li').contains('Каждый').click({
      force: true
    });
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
  it('handling dropdown menu height', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator4 || (_CypressTestDecorator4 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(Select, {
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles",
      listOverflow: "scroll",
      listHeight: 9
    }))));
    cy.get('button').click();
    cy.matchImageSnapshot();
  });
});
describe('plasma-hope: Select a11y - keyboard control', function () {
  var _CypressTestDecorator5, _CypressTestDecorator6, _CypressTestDecorator7, _CypressTestDecorator8;
  var Select = (0, _plasmaCyUtils.getComponent)('Select');
  var ControlledSelect = function ControlledSelect() {
    var _useState3 = (0, _react.useState)(null),
      _useState4 = _slicedToArray(_useState3, 2),
      value = _useState4[0],
      setValue = _useState4[1];
    return /*#__PURE__*/_react["default"].createElement(Select, {
      id: id,
      value: value,
      onChange: function onChange(v) {
        return setValue(v);
      },
      items: items,
      placeholder: "\u041F\u043E\u043F\u0440\u043E\u0431\u0443\u0439 \u0440\u0430\u0434\u0443\u0433\u0443",
      helperText: "Skittles"
    });
  };
  it('open with "ArrowDown", "Space" and "Enter"', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator5 || (_CypressTestDecorator5 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))));

    // Open with "ArrowDown"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');
    // Check is first item is in focus
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));

    // Close with "Esc"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false');

    // Open with "Space"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Space
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');

    // Close again
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false');

    // Open with "Enter"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');

    // Close again
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'false');
  });
  it('navigate with "ArrowDown" and "ArrowUp" and select', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator6 || (_CypressTestDecorator6 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))));

    // Open with "Enter"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');

    // Navigate to the second item (it is disabled)
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-1"));

    // Select navigated item with "Enter"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should(function ($p) {
      // select should not contain a value
      expect($p).not.contain(items[1].label);
      // select should not be closed
      expect($p.attr('aria-expanded')).to.eq('true');
    });

    // Open with enter
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');

    // Navigate to the first item
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.ArrowUp
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));

    // Select navigated item with "Space"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Space
    });
    cy.get('[role="combobox"]').should(function ($p) {
      // select should contain a value
      expect($p).to.contain('Каждый');
      // select should be closed
      expect($p.attr('aria-expanded')).to.eq('false');
    });

    // First item in the list must be selected
    cy.get("#".concat(id, "-dropdown-item-0")).should('have.attr', 'aria-selected', 'true');
  });
  it('navigate with "PageDown" and "PageUp"', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator7 || (_CypressTestDecorator7 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))));

    // Open with "Enter"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-expanded', 'true');

    // Navigate to the last item
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.PageDown
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-7"));

    // Navigate to the first item
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.PageUp
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));
  });
  it('search by typing', function () {
    (0, _plasmaCyUtils.mount)(_CypressTestDecorator8 || (_CypressTestDecorator8 = /*#__PURE__*/_react["default"].createElement(_plasmaCyUtils.CypressTestDecorator, null, /*#__PURE__*/_react["default"].createElement(ControlledSelect, null))));

    // Open with "Enter"
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Enter
    });

    // Type a letter
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'Ж'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-2"));
    cy.wait(500);

    // Type a full word
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'З'
    }).trigger('keydown', {
      key: 'Н'
    }).trigger('keydown', {
      key: 'А'
    }).trigger('keydown', {
      key: 'Т'
    }).trigger('keydown', {
      key: 'Ь'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-3"));

    // Close and open
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      keyCode: Codes.Esc
    }).trigger('keydown', {
      keyCode: Codes.Enter
    });

    // Type, something, that doesnt exist
    cy.root().get('[role="combobox"]').focus().trigger('keydown', {
      key: 'W'
    });
    cy.get('[role="combobox"]').should('have.attr', 'aria-activedescendant', "".concat(id, "-dropdown-item-0"));
  });
});