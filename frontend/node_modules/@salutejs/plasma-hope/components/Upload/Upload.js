"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Upload = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _UploadRoot = /*#__PURE__*/require("./UploadRoot");
var _UploadButton = /*#__PURE__*/require("./UploadButton");
var _UploadMessage = /*#__PURE__*/require("./UploadMessage");
var _UploadProgress = /*#__PURE__*/require("./UploadProgress");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["content", "status", "message", "disabled", "progress", "accept", "loader", "validate", "onChange", "onValidation"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Upload/Upload');
/**
 * Компонент для загрузки файлов.
 */
var Upload = exports.Upload = function Upload(_ref) {
  var content = _ref.content,
    status = _ref.status,
    message = _ref.message,
    disabled = _ref.disabled,
    progress = _ref.progress,
    accept = _ref.accept,
    loader = _ref.loader,
    validate = _ref.validate,
    onChange = _ref.onChange,
    onValidation = _ref.onValidation,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_UploadRoot.UploadRoot, rest, /*#__PURE__*/_react["default"].createElement(_UploadButton.UploadButton, {
    status: status,
    disabled: disabled,
    accept: accept,
    content: content,
    isProgress: Boolean(progress !== undefined),
    loader: loader || /*#__PURE__*/_react["default"].createElement(_UploadProgress.UploadProgress, {
      progress: progress
    }),
    validate: validate,
    onValidation: onValidation,
    onChange: onChange
  }), message && /*#__PURE__*/_react["default"].createElement(_UploadMessage.UploadMessage, {
    status: status
  }, message));
};