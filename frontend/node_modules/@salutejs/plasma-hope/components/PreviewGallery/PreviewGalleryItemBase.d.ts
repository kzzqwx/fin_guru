import React from 'react';
import { Footnote2 } from '../Typography';
import { AddionalItemProps, StatusType, TooltipItem } from './types';
export declare const buttonMixin: (vPosition: 'left' | 'right', bgColor: string, color: string) => import("styled-components").FlattenSimpleInterpolation;
export declare const StyledSelectButton: import("styled-components").StyledComponent<"button", any, {}, never>;
export declare const StyledTrashButton: import("styled-components").StyledComponent<"button", any, {}, never>;
export declare const StyledIconDrag: import("styled-components").StyledComponent<React.FC<import("@salutejs/plasma-icons/scalable").IconProps>, any, {}, never>;
declare type styledCaption = typeof Footnote2;
export declare const StyledCaption: styledCaption;
export declare const StyledItem: import("styled-components").StyledComponent<"div", any, {
    width?: string | undefined;
}, never>;
export interface PreviewGalleryItemProps {
    /**
     * Идентификатор элемента.
     */
    id: string | number;
    /**
     * Конечный путь до превью элемента.
     */
    image?: string;
    /**
     * React компонент передаваемый вместо image.
     */
    component?: JSX.Element;
    /**
     * Обработчик клика на элемент.
     */
    customClickHandle?: (id: string | number) => void;
    /**
     * Дополнительное описание элемента.
     */
    caption?: string;
    /**
     * Состояние элемента.
     */
    status?: StatusType;
    /**
     * Выделен ли элемент.
     */
    isSelected?: boolean;
    /**
     * Отключает кнопку действия.
     */
    actionDisabled?: boolean;
    /**
     * Настройки для отображения tooltip.
     */
    tooltip?: TooltipItem;
}
/**
 * Базовый компонент с превью.
 */
export declare const PreviewGalleryItemBase: React.MemoExoticComponent<({ id, itemSize, image, component, customClickHandle, isSelected, caption, interactionType, actionIcon, status, onItemAction, onItemClick, actionDisabled, }: PreviewGalleryItemProps & AddionalItemProps) => JSX.Element>;
export {};
//# sourceMappingURL=PreviewGalleryItemBase.d.ts.map