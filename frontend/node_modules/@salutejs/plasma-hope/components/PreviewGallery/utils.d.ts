import { PreviewGalleryItemProps } from './PreviewGalleryItemBase';
/**
 * Метод-заглушка
 */
export declare const noop: () => void;
/**
 * Метод для смены элементов в массиве по индексам
 * @param {Array<PreviewGalleryItemProps>} oldItems массив в предыдущем состоянии
 * @param {number} oldIndex старое значение индекса
 * @param {number} newIndex новое значение индекса
 * @returns {Array<PreviewGalleryItemProps>} новый массив с новым порядком элементов
 */
export declare const arrayItemSwapping: (oldItems: Array<PreviewGalleryItemProps>, oldIndex: number, newIndex: number) => PreviewGalleryItemProps[];
/**
 * Метод для удаления элемента из массива по индексу
 * @param {Array<PreviewGalleryItemProps>} oldItems массив в предыдущем состоянии
 * @param {number | string} id старое значение индекса
 * @returns {Array<PreviewGalleryItemProps>} новый массив без удалённого элемента
 */
export declare const arrayItemRemoving: (oldItems: Array<PreviewGalleryItemProps>, id: number | string) => PreviewGalleryItemProps[];
/**
 * Метод для выделения элемента из массива по индексу
 * @param {Array<PreviewGalleryItemProps>} oldItems массив в предыдущем состоянии
 * @param {number | string} id старое значение индекса
 * @param {boolean | undefined} multipleSelect флаг множественного выбора
 * @returns {Array<PreviewGalleryItemProps>} новый массив с выделенными элементами
 */
export declare const arrayItemSelecting: (oldItems: Array<PreviewGalleryItemProps>, id: number | string, multipleSelect?: boolean) => PreviewGalleryItemProps[];
//# sourceMappingURL=utils.d.ts.map