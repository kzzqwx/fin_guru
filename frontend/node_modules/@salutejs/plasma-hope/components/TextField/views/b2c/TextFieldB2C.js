"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextFieldB2C = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _types = /*#__PURE__*/require("../../types");
var _Placeholder = /*#__PURE__*/require("./Placeholder");
var _Input = /*#__PURE__*/require("./Input");
var _Field = /*#__PURE__*/require("./Field");
var _Content = /*#__PURE__*/require("./Content");
var _Caption = /*#__PURE__*/require("./Caption");
var _TextField = /*#__PURE__*/require("./TextField.props");
var _excluded = ["id", "disabled", "status", "label", "placeholder", "contentLeft", "contentRight", "caption", "helperText", "style", "className", "size", "view", "onChange", "onKeyUp"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// eslint-disable-next-line prefer-arrow-callback
var TextFieldB2C = exports.TextFieldB2C = /*#__PURE__*/(0, _react.forwardRef)(function TextField(_ref, ref) {
  var id = _ref.id,
    disabled = _ref.disabled,
    status = _ref.status,
    label = _ref.label,
    placeholderInput = _ref.placeholder,
    contentLeft = _ref.contentLeft,
    contentRight = _ref.contentRight,
    caption = _ref.caption,
    helperText = _ref.helperText,
    style = _ref.style,
    className = _ref.className,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'm' : _ref$size,
    view = _ref.view,
    onChange = _ref.onChange,
    onKeyUp = _ref.onKeyUp,
    rest = _objectWithoutProperties(_ref, _excluded);
  var placeholder = label || placeholderInput;
  var hasTextFieldDefaultView = view === _types.TextFieldView["default"];
  var withCaption = !view || hasTextFieldDefaultView;
  var withoutCaption = !caption && !hasTextFieldDefaultView;
  var captionOrPlaceholder = !withCaption ? caption : placeholder;
  var currentId = id ? "".concat(id, "-label") : undefined;
  var ariaDescribedBy = id ? "".concat(id, "-helpertext") : undefined;
  return /*#__PURE__*/_react["default"].createElement(_Field.Field, {
    $disabled: disabled,
    $isContentLeft: Boolean(contentLeft),
    $isContentRight: Boolean(contentRight),
    $isHelper: Boolean(helperText),
    withDefaultPadding: withCaption || withoutCaption,
    properties: _TextField.textFieldProps[size],
    contentLeft: contentLeft,
    status: status,
    style: style,
    className: className
  }, /*#__PURE__*/_react["default"].createElement(_Caption.Caption, {
    visible: withCaption,
    id: currentId,
    caption: caption
  }), /*#__PURE__*/_react["default"].createElement(_Field.FieldWrapper, {
    status: status
  }, contentLeft && /*#__PURE__*/_react["default"].createElement(_Content.Content, {
    pos: "left"
  }, contentLeft), /*#__PURE__*/_react["default"].createElement(_Input.Input, _extends({
    ref: ref,
    id: id,
    placeholder: placeholder,
    disabled: disabled,
    status: status,
    "aria-labelledby": currentId,
    "aria-describedby": ariaDescribedBy,
    onChange: onChange,
    onKeyUp: onKeyUp
  }, rest)), captionOrPlaceholder && /*#__PURE__*/_react["default"].createElement(_Placeholder.Placeholder, {
    withCaption: withCaption,
    visible: size !== 'xs',
    htmlFor: id
  }, captionOrPlaceholder), contentRight && /*#__PURE__*/_react["default"].createElement(_Content.Content, {
    pos: "right"
  }, contentRight)), helperText && /*#__PURE__*/_react["default"].createElement(_plasmaCore.FieldHelper, {
    id: ariaDescribedBy
  }, helperText));
});