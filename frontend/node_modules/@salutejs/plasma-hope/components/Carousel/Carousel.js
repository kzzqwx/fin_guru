"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Carousel = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));
var _hooks = /*#__PURE__*/require("../../hooks");
var _hooks2 = /*#__PURE__*/require("./hooks");
var _collectPackageInfo = /*#__PURE__*/require("../../collectPackageInfo");
var _excluded = ["index", "scrollSnapType", "scrollAlign", "detectActive", "detectThreshold", "scaleCallback", "scaleResetCallback", "onIndexChange", "paddingStart", "paddingEnd", "children", "ariaLive", "isDragScrollDisabled"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
(0, _collectPackageInfo.collectPackageInfo)('Carousel/Carousel');
var StyledCarousel = /*#__PURE__*/(0, _styledComponents["default"])(_plasmaCore.Carousel).withConfig({
  componentId: "plasma-web-core__sc-zadi43-0"
})(["", ";"], _plasmaCore.applyNoSelect);

/**
 * Компонент для создания списков с прокруткой.
 */
// eslint-disable-next-line prefer-arrow-callback
var Carousel = exports.Carousel = /*#__PURE__*/_react["default"].forwardRef(function Carousel(_ref, ref) {
  var _ref$index = _ref.index,
    index = _ref$index === void 0 ? 0 : _ref$index,
    _ref$scrollSnapType = _ref.scrollSnapType,
    scrollSnapType = _ref$scrollSnapType === void 0 ? 'mandatory' : _ref$scrollSnapType,
    scrollAlign = _ref.scrollAlign,
    detectActive = _ref.detectActive,
    detectThreshold = _ref.detectThreshold,
    scaleCallback = _ref.scaleCallback,
    scaleResetCallback = _ref.scaleResetCallback,
    onIndexChange = _ref.onIndexChange,
    paddingStart = _ref.paddingStart,
    paddingEnd = _ref.paddingEnd,
    children = _ref.children,
    _ref$ariaLive = _ref.ariaLive,
    ariaLive = _ref$ariaLive === void 0 ? 'off' : _ref$ariaLive,
    _ref$isDragScrollDisa = _ref.isDragScrollDisabled,
    isDragScrollDisabled = _ref$isDragScrollDisa === void 0 ? false : _ref$isDragScrollDisa,
    rest = _objectWithoutProperties(_ref, _excluded);
  var axis = 'x';
  var _useCarousel = (0, _plasmaCore.useCarousel)({
      index: index,
      axis: axis,
      scrollAlign: scrollAlign,
      detectActive: detectActive,
      detectThreshold: detectThreshold,
      scaleCallback: scaleCallback,
      scaleResetCallback: scaleResetCallback,
      onIndexChange: onIndexChange
    }),
    scrollRef = _useCarousel.scrollRef,
    trackRef = _useCarousel.trackRef;
  var handleRef = (0, _hooks.useForkRef)(scrollRef, ref);
  (0, _hooks2.useDragScroll)(scrollRef, isDragScrollDisabled);
  return /*#__PURE__*/_react["default"].createElement(StyledCarousel, _extends({
    ref: handleRef,
    axis: axis,
    scrollSnapType: scrollSnapType
  }, rest), /*#__PURE__*/_react["default"].createElement(_plasmaCore.CarouselTrack, {
    ref: trackRef,
    axis: axis,
    paddingStart: paddingStart,
    paddingEnd: paddingEnd,
    "aria-live": ariaLive
  }, children));
});