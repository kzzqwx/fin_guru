var _excluded = ["content", "description"];
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled from 'styled-components';
import { BodyM } from '@salutejs/plasma-typo';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Cell/Cell');
export var CellRoot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-1xsof0e-0"
})(["display:flex;align-items:center;"]);
export var CellContent = /*#__PURE__*/styled(BodyM).withConfig({
  componentId: "plasma-web-core__sc-1xsof0e-1"
})(["margin-left:var(--cell-content-margin-left,0);"]);
/**
 * Базовый компонент для отображения блоков контента в списках и карточках.
 */
export var Cell = function Cell(_ref) {
  var content = _ref.content,
    description = _ref.description,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement(CellRoot, rest, content, /*#__PURE__*/React.createElement(CellContent, {
    bold: true
  }, description));
};