var _StyledIconMusic;
function _objectDestructuringEmpty(obj) { if (obj == null) throw new TypeError("Cannot destructure " + obj); }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import styled from 'styled-components';
import { IconMusic } from '@salutejs/plasma-icons';
import { Upload } from '../Upload';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('UploadAudio/UploadAudio');
export var StyledContent = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-va5v03-0"
})(["display:flex;align-items:center;box-sizing:border-box;"]);
export var StyledText = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-web-core__sc-va5v03-1"
})(["margin-left:0.5rem;"]);
export var StyledIconMusic = /*#__PURE__*/styled(IconMusic).withConfig({
  componentId: "plasma-web-core__sc-va5v03-2"
})(["svg{opacity:0.28;}"]);

/**
 * Компонент для загрузки аудио файлов.
 */
export var UploadAudio = function UploadAudio(_ref) {
  var rest = _extends({}, (_objectDestructuringEmpty(_ref), _ref));
  var acceptExtensions = '.mp3,.wav';
  var text = 'Перетащите трек в формате mp3';
  return /*#__PURE__*/React.createElement(Upload, _extends({
    accept: acceptExtensions,
    content: /*#__PURE__*/React.createElement(StyledContent, null, _StyledIconMusic || (_StyledIconMusic = /*#__PURE__*/React.createElement(StyledIconMusic, {
      size: "s",
      color: "inherit"
    })), /*#__PURE__*/React.createElement(StyledText, null, text))
  }, rest));
};