/**
 * Метод валидация по-умолчанию, принимающая список поддерживаемых расширений через запятую
 * и возвращает результат проверки
 * @param {FileList | null} files выбранный файл
 * @param {string | undefined} accept поддерживаемые форматы, например, `.mp3,.wav`
 * @returns {ValidationResult} объект, имеющий необязательные поля `message, status, data`
 */
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Upload/utils');
export var defaultValidate = function defaultValidate(files, accept) {
  if (!(files !== null && files !== void 0 && files.length)) {
    return {
      message: 'Загрузите файл',
      status: 'error',
      data: null
    };
  }
  var file = files[0];
  if (!accept) {
    return {
      data: file
    };
  }
  var dotRegexp = /\./g;
  var allowedFormats = accept.replace(/\s/g, '').replace(dotRegexp, '\\.').split(',');
  var fileTypeRegexp = new RegExp("".concat(allowedFormats.join('|'), "$"), 'i');
  if (!fileTypeRegexp.test(file.name)) {
    return {
      message: "\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u0444\u043E\u0440\u043C\u0430\u0442 \u0444\u0430\u0439\u043B\u0430. \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 ".concat(accept.replace(dotRegexp, ''), "-\u0444\u043E\u0440\u043C\u0430\u0442"),
      status: 'error',
      data: null
    };
  }
  return {
    data: file
  };
};