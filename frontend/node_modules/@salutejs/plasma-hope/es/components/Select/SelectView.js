function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React, { useMemo, forwardRef } from 'react';
import { SelectView as SelectViewWeb } from './views/web/SelectView';
import { SelectView as SelectViewB2C } from './views/b2c/SelectView';
var componentsMap = {
  web: SelectViewWeb,
  b2c: SelectViewB2C
};

/**
 * Поле с выпадающим списком.
 */
export var SelectView = /*#__PURE__*/forwardRef(function (props, ref) {
  var design = props.design;
  var SelectViewBase = useMemo(function () {
    return componentsMap[design];
  }, [design]);
  return /*#__PURE__*/React.createElement(SelectViewBase, _extends({}, props, {
    ref: ref
  }));
});