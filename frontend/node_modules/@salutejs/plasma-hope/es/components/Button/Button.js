function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React, { forwardRef } from 'react';
import { createButton } from '@salutejs/plasma-core';
import { ButtonWeb } from './views/web/ButtonWeb';
import { ButtonB2C } from './views/b2c/ButtonB2C';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Button/Button');
var componentMap = {
  web: ButtonWeb,
  b2c: ButtonB2C
};
export var Button = function Button(_ref) {
  var design = _ref.design;
  var ButtonView = createButton(componentMap[design]);
  ButtonView.defaultProps = {
    size: 'm',
    view: 'secondary',
    pin: 'square-square'
  };
  return /*#__PURE__*/forwardRef(function (props, ref) {
    return /*#__PURE__*/React.createElement(ButtonView, _extends({}, props, {
      ref: ref
    }));
  });
};