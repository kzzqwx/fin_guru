var _StyledDot, _StyledChevron, _StyledCheck;
var _excluded = ["value", "label", "isActive", "isDisabled", "isHovered", "color", "contentLeft", "items", "role", "index", "onClick", "onHover", "onFocus"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { useRef, useCallback, useMemo, forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { body1, accent, primary, surfaceLiquid02, surfaceLiquid03, applyDisabled, applyEllipsis, useForkRef } from '@salutejs/plasma-core';
import { IconChevronRight, IconDone } from '@salutejs/plasma-icons';
import { collectPackageInfo } from '../../collectPackageInfo';
collectPackageInfo('Dropdown/DropdownItem');
var StyledDropdownItem = /*#__PURE__*/styled.li.withConfig({
  componentId: "plasma-web-core__sc-sdbmry-0"
})(["display:flex;flex:1;align-items:center;justify-content:flex-start;box-sizing:border-box;text-decoration:none;height:var(--plasma-dropdown-item-height,3rem);padding:var(--plasma-dropdown-item-padding,1rem);border-radius:var(--plasma-dropdown-item-border-radius,0);font-family:var(--plasma-dropdown-item-font-family,", ");font-size:var(--plasma-dropdown-item-font-size,", ");font-weight:var(--plasma-dropdown-item-font-weight,", ");line-height:var(--plasma-dropdown-item-line-height,", ");letter-spacing:var(--plasma-dropdown-item-letter-spacing,", ");background-color:transparent;color:", ";transition:background-color 0.3s ease-in-out;cursor:pointer;", " &:focus{outline:0 none;}", " &:active{background-color:", ";}", ""], body1.fontFamily, body1.fontSize, body1.fontWeight, body1.lineHeight, body1.letterSpacing, function (_ref) {
  var $color = _ref.$color;
  return $color || primary;
}, function (_ref2) {
  var $withAssistive = _ref2.$withAssistive,
    $color = _ref2.$color;
  return !$withAssistive && css(["&:hover,&:focus{color:", ";background-color:", ";}"], $color || primary, surfaceLiquid02);
}, function (_ref3) {
  var $hover = _ref3.$hover,
    $color = _ref3.$color;
  return $hover && css(["color:", ";background-color:", ";"], $color || primary, surfaceLiquid02);
}, surfaceLiquid03, applyDisabled);
var StyledContent = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-sdbmry-1"
})(["display:inline-flex;margin-right:0.375rem;"]);
var StyledText = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-web-core__sc-sdbmry-2"
})(["", ";margin-right:0.625rem;pointer-events:none;user-select:none;"], applyEllipsis);
var StyledChevron = /*#__PURE__*/styled(IconChevronRight).withConfig({
  componentId: "plasma-web-core__sc-sdbmry-3"
})(["margin-left:auto;pointer-events:none;margin-right:-0.25rem;"]);
var StyledCheck = /*#__PURE__*/styled(IconDone).withConfig({
  componentId: "plasma-web-core__sc-sdbmry-4"
})(["margin-left:auto;pointer-events:none;margin-right:-0.5rem;"]);
var StyledDot = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-sdbmry-5"
})(["width:0.375rem;height:0.375rem;background-color:", ";border-radius:50%;"], accent);

/**
 * Элемент выпадающего списка.
 */
export var DropdownItem = /*#__PURE__*/forwardRef(function (props, outerRef) {
  var _items$filter;
  var value = props.value,
    label = props.label,
    isActive = props.isActive,
    isDisabled = props.isDisabled,
    isHovered = props.isHovered,
    color = props.color,
    contentLeft = props.contentLeft,
    _props$items = props.items,
    items = _props$items === void 0 ? [] : _props$items,
    _props$role = props.role,
    role = _props$role === void 0 ? 'menuitem' : _props$role,
    index = props.index,
    onClickExternal = props.onClick,
    onHover = props.onHover,
    onFocus = props.onFocus,
    rest = _objectWithoutProperties(props, _excluded);
  var ref = useRef(null);
  var forkRef = useForkRef(outerRef, ref);
  var hasItems = Boolean(items.length);
  var isActiveAsSingleOrNode = Boolean(isActive || ((_items$filter = items.filter(function (item) {
    return item.isActive;
  })) === null || _items$filter === void 0 ? void 0 : _items$filter.length));
  var contentRight = useMemo(function () {
    if (hasItems) {
      return /*#__PURE__*/React.createElement(React.Fragment, null, isActiveAsSingleOrNode && (_StyledDot || (_StyledDot = /*#__PURE__*/React.createElement(StyledDot, null))), _StyledChevron || (_StyledChevron = /*#__PURE__*/React.createElement(StyledChevron, {
        size: "xs"
      })));
    }
    if (isActive) {
      return _StyledCheck || (_StyledCheck = /*#__PURE__*/React.createElement(StyledCheck, {
        size: "s",
        color: accent
      }));
    }
    return null;
  }, [isActive, isActiveAsSingleOrNode, hasItems]);
  var onClick = useCallback(function (event) {
    var _ref$current;
    event.preventDefault();
    var targetIsItem = event.target === ref.current;
    var targetInItem = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(event.target);
    if (value !== undefined && !isDisabled && (targetIsItem || targetInItem)) {
      onClickExternal === null || onClickExternal === void 0 || onClickExternal({
        value: value,
        label: label
      }, event);
    }
  }, [value, label, isDisabled, onClickExternal]);
  var onMouseOver = useCallback(function () {
    onHover === null || onHover === void 0 || onHover(index);
  }, [value, label, isDisabled, onClickExternal]);
  return /*#__PURE__*/React.createElement(StyledDropdownItem, _extends({}, rest, {
    ref: forkRef,
    $withAssistive: Boolean(onHover),
    $hover: isHovered,
    $disabled: isDisabled,
    $color: color,
    role: role,
    "aria-label": label,
    "aria-disabled": isDisabled,
    "aria-selected": role === 'option' ? isActiveAsSingleOrNode : undefined,
    onClick: onClick,
    onMouseOver: onMouseOver,
    onFocus: onFocus
  }), contentLeft && /*#__PURE__*/React.createElement(StyledContent, null, contentLeft), label && /*#__PURE__*/React.createElement(StyledText, {
    role: "presentation"
  }, label), contentRight);
});