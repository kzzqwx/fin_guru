import { useCallback } from 'react';
import { getActionFromKey, getUpdatedIndex, Actions } from './utils';
import { useOnComboType } from './useOnComboType';
export var INITIAL_INDEX = 0;

/**
 * Клавиатурная навигация для dropdown.
 * Работает для каждого instance dropdown, (popup) отдельно.
 */
export var useKeyboardNavigation = function useKeyboardNavigation(_ref) {
  var items = _ref.items,
    isOpen = _ref.isOpen,
    _ref$index = _ref.index,
    index = _ref$index === void 0 ? INITIAL_INDEX : _ref$index,
    onToggle = _ref.onToggle,
    onItemSelect = _ref.onItemSelect,
    onIndexChange = _ref.onIndexChange;
  var getIndexByTyping = useOnComboType({
    index: index,
    items: items
  });
  var onKeyDown = useCallback(function (event) {
    if (!items.length) {
      return;
    }
    var action = getActionFromKey(event, isOpen);
    if (action === Actions.Last || action === Actions.First || action === Actions.Next || action === Actions.Previous || action === Actions.PageUp || action === Actions.PageDown) {
      event.preventDefault();
      onIndexChange === null || onIndexChange === void 0 || onIndexChange(getUpdatedIndex(action, index, items));
    } else if (action === Actions.Select) {
      event.stopPropagation();
      event.preventDefault();
      onItemSelect === null || onItemSelect === void 0 || onItemSelect(items[index], event);
    } else if (action === Actions.Open) {
      event.preventDefault();
      onToggle === null || onToggle === void 0 || onToggle(true, event);
    } else if (action === Actions.Close) {
      event.preventDefault();
      onToggle === null || onToggle === void 0 || onToggle(false, event);
    } else if (action === Actions.Type) {
      event.preventDefault();
      var newIndex = getIndexByTyping(event.key);
      if (newIndex !== undefined) {
        onIndexChange === null || onIndexChange === void 0 || onIndexChange(newIndex);
      }
    }
  }, [isOpen, index, items, onIndexChange, onToggle, getIndexByTyping]);
  return {
    onKeyDown: onKeyDown,
    index: index
  };
};