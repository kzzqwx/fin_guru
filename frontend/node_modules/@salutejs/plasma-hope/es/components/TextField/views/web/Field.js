var _excluded = ["id", "label", "children", "contentLeft", "contentRight", "helperText"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React from 'react';
import styled from 'styled-components';
import { applyDisabled } from '@salutejs/plasma-core';
import { fieldTypo, fieldHelperTextTypo, fieldColor, fieldContentMargin, fieldHelperTextMarginTop, fieldLabelColor, fieldLabelMarginBottom } from '../../../../tokens';
import { statuses } from './Field.props';
var StyledField = /*#__PURE__*/styled.label.withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-0"
})(["", " ", " position:relative;display:flex;flex-direction:column;color:", ";", ""], fieldTypo, applyDisabled, fieldColor, function (_ref) {
  var status = _ref.status;
  return status && statuses[status];
});
var StyledLabel = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-1"
})(["margin-bottom:", ";color:", ";"], fieldLabelMarginBottom, fieldLabelColor);
var StyledInputWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-2"
})(["position:relative;"]);
var StyledContent = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-3"
})(["position:absolute;top:0;bottom:0;display:flex;align-items:center;"]);
var StyledContentLeft = /*#__PURE__*/styled(StyledContent).withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-4"
})(["left:0;margin-left:", ";"], fieldContentMargin);
var StyledContentRight = /*#__PURE__*/styled(StyledContent).withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-5"
})(["right:0;margin-right:", ";"], fieldContentMargin);
var StyledHelperText = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-web-core__sc-1r9sk0e-6"
})(["", " margin-top:", ";"], fieldHelperTextTypo, fieldHelperTextMarginTop);
export var Field = function Field(_ref2) {
  var id = _ref2.id,
    label = _ref2.label,
    children = _ref2.children,
    contentLeft = _ref2.contentLeft,
    contentRight = _ref2.contentRight,
    helperText = _ref2.helperText,
    rest = _objectWithoutProperties(_ref2, _excluded);
  return /*#__PURE__*/React.createElement(StyledField, _extends({
    id: id ? "".concat(id, "-field") : undefined
  }, rest), label && /*#__PURE__*/React.createElement(StyledLabel, {
    id: id ? "".concat(id, "-label") : undefined
  }, label), /*#__PURE__*/React.createElement(StyledInputWrapper, null, contentLeft && /*#__PURE__*/React.createElement(StyledContentLeft, null, contentLeft), children, contentRight && /*#__PURE__*/React.createElement(StyledContentRight, null, contentRight)), helperText && /*#__PURE__*/React.createElement(StyledHelperText, {
    id: id ? "".concat(id, "-helpertext") : undefined
  }, helperText));
};