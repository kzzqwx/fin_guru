"use strict";
// Generated by robots, do not change this manually!
Object.defineProperty(exports, "__esModule", { value: true });
exports.buttonPrimary = exports.surfaceCard = exports.surfaceSolid03 = exports.surfaceSolid02 = exports.surfaceSolid01 = exports.surfaceLiquid03 = exports.surfaceLiquid02 = exports.surfaceLiquid01 = exports.critical = exports.warning = exports.success = exports.accent = exports.inputErrorBackground = exports.inputBorderFocus = exports.inputBorderHover = exports.inputBorder = exports.backgroundTertiary = exports.backgroundSecondary = exports.backgroundPrimary = exports.background = exports.inverse = exports.paragraph = exports.tertiary = exports.secondary = exports.primary = exports.linkVisitedActive = exports.linkVisitedHover = exports.linkVisited = exports.linkActive = exports.linkHover = exports.link = exports.text = exports.buttonWhiteSecondary = exports.buttonWhite = exports.buttonBlackTransparent = exports.buttonBlackSecondary = exports.buttonBlack = exports.buttonClear = exports.transparent = exports.dark03 = exports.dark02 = exports.dark01 = exports.blackTertiary = exports.blackSecondary = exports.blackPrimary = exports.black = exports.whiteTertiary = exports.whiteSecondary = exports.whitePrimary = exports.white = void 0;
exports.inverseOverlayBlur = exports.inverseOverlayHard = exports.inverseOverlaySoft = exports.lightOverlayBlur = exports.lightOverlayHard = exports.lightOverlaySoft = exports.darkOverlayBlur = exports.darkOverlayHard = exports.darkOverlaySoft = exports.overlayBlur = exports.overlayHard = exports.overlaySoft = exports.overlay = exports.speechBubbleReceived = exports.speechBubbleSent = exports.skeletonGradientLighter = exports.skeletonGradient = exports.voicePhraseGradient = exports.gradientDevice = exports.gradient = exports.buttonFocused = exports.buttonCheckedActiveColor = exports.buttonCheckedActive = exports.buttonCheckedHoverColor = exports.buttonCheckedHover = exports.buttonChecked = exports.buttonCriticalActiveTransparent = exports.buttonCriticalActive = exports.buttonCriticalHover = exports.buttonCriticalTransparent = exports.buttonCritical = exports.buttonWarningActiveTransparent = exports.buttonWarningActive = exports.buttonWarningHover = exports.buttonWarningTransparent = exports.buttonWarning = exports.buttonSuccessActiveTransparent = exports.buttonSuccessActive = exports.buttonSuccessHover = exports.buttonSuccessTransparent = exports.buttonSuccess = exports.buttonAccent = exports.buttonSecondaryActive = exports.buttonSecondaryHover = exports.buttonSecondary = exports.buttonPrimaryActive = exports.buttonPrimaryHover = void 0;
/** Базовый белый цвет совпадает с whitePrimary */
exports.white = 'var(--plasma-colors-white, rgba(255, 255, 255, 0.96))';
/** Первичный белый цвет */
exports.whitePrimary = 'var(--plasma-colors-white-primary, rgba(255, 255, 255, 0.96))';
/** Вторичный белый цвет */
exports.whiteSecondary = 'var(--plasma-colors-white-secondary, rgba(255, 255, 255, 0.56))';
/** Третичный белый цвет */
exports.whiteTertiary = 'var(--plasma-colors-white-tertiary, rgba(255, 255, 255, 0.28))';
/** Базовый черный цвет совпадает с blackPrimary */
exports.black = 'var(--plasma-colors-black, #080808)';
/** Первичный черный цвет */
exports.blackPrimary = 'var(--plasma-colors-black-primary, #080808)';
/** Вторичный черныйцвет */
exports.blackSecondary = 'var(--plasma-colors-black-secondary, rgba(8, 8, 8, 0.56))';
/** Третичный черный цвет */
exports.blackTertiary = 'var(--plasma-colors-black-tertiary, rgba(8, 8, 8, 0.28))';
/** Чёрный непрозрачный, не зависит от темы */
exports.dark01 = 'var(--plasma-colors-dark01, #171717)';
/** Чёрный непрозрачный, не зависит от темы */
exports.dark02 = 'var(--plasma-colors-dark02, #232323)';
/** Чёрный непрозрачный, не зависит от темы */
exports.dark03 = 'var(--plasma-colors-dark03, #363636)';
/** Прозрачный цвет */
exports.transparent = 'var(--plasma-colors-transparent, rgba(0, 0, 0, 0))';
/** Второстепенная прозрачная */
exports.buttonClear = 'var(--plasma-colors-button-clear, rgba(0, 0, 0, 0))';
/** Дефолтная чёрная, не зависит от темы */
exports.buttonBlack = 'var(--plasma-colors-button-black, #080808)';
/** Второстепенная чёрная, не зависит от темы */
exports.buttonBlackSecondary = 'var(--plasma-colors-button-black-secondary, rgba(8, 8, 8, 0.12))';
/** Чёрная для использования поверх картинок */
exports.buttonBlackTransparent = 'var(--plasma-colors-button-black-transparent, rgba(8, 8, 8, 0.56))';
/** Дефолтная белая, не зависит от темы */
exports.buttonWhite = 'var(--plasma-colors-button-white, #FFFFFF)';
/** Второстепенная белая, не зависит от темы */
exports.buttonWhiteSecondary = 'var(--plasma-colors-button-white-secondary, rgba(255, 255, 255, 0.12))';
/** Базовый цвет текста, совпадает с primary */
exports.text = 'var(--plasma-colors-text, #080808)';
exports.link = 'var(--plasma-colors-link, #2A72F8)';
exports.linkHover = 'var(--plasma-colors-link-hover, #4D89F9)';
exports.linkActive = 'var(--plasma-colors-link-active, #0859F1)';
exports.linkVisited = 'var(--plasma-colors-link-visited, #2364DE)';
exports.linkVisitedHover = 'var(--plasma-colors-link-visited-hover, #427AE3)';
exports.linkVisitedActive = 'var(--plasma-colors-link-visited-active, #1C54BC)';
/** Основной текст в интерфейсе */
exports.primary = 'var(--plasma-colors-primary, #080808)';
/** Второстепенный текст */
exports.secondary = 'var(--plasma-colors-secondary, rgba(8, 8, 8, 0.56))';
/** Третичный цвет текста */
exports.tertiary = 'var(--plasma-colors-tertiary, rgba(8, 8, 8, 0.28))';
exports.paragraph = 'var(--plasma-colors-paragraph, rgba(8, 8, 8, 0.8))';
exports.inverse = 'var(--plasma-colors-inverse, rgba(255, 255, 255, 0.96))';
/** Основной бэкграунд всех приложений и смартапов */
exports.background = 'var(--plasma-colors-background, #FFFFFF)';
/** Первичный цвет фона */
exports.backgroundPrimary = 'var(--plasma-colors-background-primary, #FFFFFF)';
/** Вторичный цвет фона */
exports.backgroundSecondary = 'var(--plasma-colors-background-secondary, #FFFFFF)';
/** Третичный цвет фона */
exports.backgroundTertiary = 'var(--plasma-colors-background-tertiary, #FFFFFF)';
exports.inputBorder = 'var(--plasma-colors-input-border, rgba(0, 0, 0, 0))';
exports.inputBorderHover = 'var(--plasma-colors-input-border-hover, rgba(0, 0, 0, 0))';
exports.inputBorderFocus = 'var(--plasma-colors-input-border-focus, rgba(0, 0, 0, 0))';
exports.inputErrorBackground = 'var(--plasma-colors-input-error-background, rgba(243, 27, 48, 0.12))';
/** Акцентный цвет бренда */
exports.accent = 'var(--plasma-colors-accent, #296AE3)';
/** Обозначение успешного сценария */
exports.success = 'var(--plasma-colors-success, #0D8523)';
/** Цвет предупреждения */
exports.warning = 'var(--plasma-colors-warning, #D14D00)';
/** Цвет ошибки */
exports.critical = 'var(--plasma-colors-critical, #E31227)';
/** Полупрозрачные поверхности */
exports.surfaceLiquid01 = 'var(--plasma-colors-surface-liquid01, rgba(8, 8, 8, 0.02))';
/** Полупрозрачные поверхности */
exports.surfaceLiquid02 = 'var(--plasma-colors-surface-liquid02, rgba(8, 8, 8, 0.06))';
/** Полупрозрачные поверхности */
exports.surfaceLiquid03 = 'var(--plasma-colors-surface-liquid03, rgba(8, 8, 8, 0.12))';
/** Непрозрачные поверхности */
exports.surfaceSolid01 = 'var(--plasma-colors-surface-solid01, #FAFAFA)';
/** Непрозрачные поверхности */
exports.surfaceSolid02 = 'var(--plasma-colors-surface-solid02, #F0F0F0)';
/** Непрозрачные поверхности */
exports.surfaceSolid03 = 'var(--plasma-colors-surface-solid03, #E1E1E1)';
/** Основной фон для карточек */
exports.surfaceCard = 'var(--plasma-colors-surface-card, #FFFFFF)';
/** Первичный цвет контролов */
exports.buttonPrimary = 'var(--plasma-colors-button-primary, #2A72F8)';
exports.buttonPrimaryHover = 'var(--plasma-colors-button-primary-hover, #447ff9)';
exports.buttonPrimaryActive = 'var(--plasma-colors-button-primary-active, #2868e0)';
/** Второстепенная кнопка */
exports.buttonSecondary = 'var(--plasma-colors-button-secondary, rgba(8, 8, 8, 0.06))';
exports.buttonSecondaryHover = 'var(--plasma-colors-button-secondary-hover, rgba(8, 8, 8, 0.04))';
exports.buttonSecondaryActive = 'var(--plasma-colors-button-secondary-active, rgba(8, 8, 8, 0.08))';
/** Акцентный цвет у контролов */
exports.buttonAccent = 'var(--plasma-colors-button-accent, #296AE3)';
/** Кнопка для успешного сценария */
exports.buttonSuccess = 'var(--plasma-colors-button-success, #148F2B)';
exports.buttonSuccessTransparent = 'var(--plasma-colors-button-success-transparent, rgba(20, 143, 43, 0.3))';
exports.buttonSuccessHover = 'var(--plasma-colors-button-success-hover, #379740)';
exports.buttonSuccessActive = 'var(--plasma-colors-button-success-active, #157e26)';
exports.buttonSuccessActiveTransparent = 'var(--plasma-colors-button-success-active-transparent, rgba(21, 126, 39, 0.35))';
/** Цвет предупреждения у контролов */
exports.buttonWarning = 'var(--plasma-colors-button-warning, #E35502)';
exports.buttonWarningTransparent = 'var(--plasma-colors-button-warning-transparent, rgba(227, 85, 2, 0.3))';
exports.buttonWarningHover = 'var(--plasma-colors-button-warning-hover, #f76d2f)';
exports.buttonWarningActive = 'var(--plasma-colors-button-warning-active, #de550a)';
exports.buttonWarningActiveTransparent = 'var(--plasma-colors-button-warning-active-transparent, rgba(222, 85, 10, 0.35))';
/** Цвет ошибки у контролов */
exports.buttonCritical = 'var(--plasma-colors-button-critical, #F31B30)';
exports.buttonCriticalTransparent = 'var(--plasma-colors-button-critical-transparent, rgba(243, 27, 48, 0.3))';
exports.buttonCriticalHover = 'var(--plasma-colors-button-critical-hover, #f53b46)';
exports.buttonCriticalActive = 'var(--plasma-colors-button-critical-active, #dc1b2b)';
exports.buttonCriticalActiveTransparent = 'var(--plasma-colors-button-critical-active-transparent, rgba(220, 27, 43, 0.35))';
/** Цвет зажатого контрола */
exports.buttonChecked = 'var(--plasma-colors-button-checked, #080808)';
exports.buttonCheckedHover = 'var(--plasma-colors-button-checked-hover, #080808)';
exports.buttonCheckedHoverColor = 'var(--plasma-colors-button-checked-hover-color, hsla(0, 0%, 100%, 0.9599999785423279))';
exports.buttonCheckedActive = 'var(--plasma-colors-button-checked-active, #080808)';
exports.buttonCheckedActiveColor = 'var(--plasma-colors-button-checked-active-color, hsla(0, 0%, 100%, 0.9599999785423279))';
/** Цвет рамки фокуса у контрола */
exports.buttonFocused = 'var(--plasma-colors-button-focused, #296AE3)';
/** Градиент для заливки основного фона */
exports.gradient = 'var(--plasma-colors-gradient, linear-gradient(45deg, hsla(219.87577639751552, 100%, 68.43137254901961%, 1) 0%, hsla(190.1639344262295, 94.81865284974093%, 62.15686274509804%, 1) 100%))';
exports.gradientDevice = 'var(--plasma-colors-gradient-device)';
exports.voicePhraseGradient = 'var(--plasma-colors-voice-phrase-gradient)';
exports.skeletonGradient = 'var(--plasma-colors-skeleton-gradient, linear-gradient( 90deg, rgba(8, 8, 8, 0.09) 0%, rgba(8, 8, 8, 0.08) 6.25%, rgba(8, 8, 8, 0.05) 12.5%, rgba(8, 8, 8, 0.01) 25%, rgba(8, 8, 8, 0.05) 37.5%, rgba(8, 8, 8, 0.08) 43.75%, rgba(8, 8, 8, 0.09) 50%, rgba(8, 8, 8, 0.08) 56.25%, rgba(8, 8, 8, 0.05) 62.5%, rgba(8, 8, 8, 0.01) 75%, rgba(8, 8, 8, 0.05) 87.5%, rgba(8, 8, 8, 0.08) 93.75%, rgba(8, 8, 8, 0.09) 100% ))';
exports.skeletonGradientLighter = 'var(--plasma-colors-skeleton-gradient-lighter, linear-gradient( 90deg, rgba(8, 8, 8, 0.36) 0%, rgba(8, 8, 8, 0.32) 6.25%, rgba(8, 8, 8, 0.20) 12.5%, rgba(8, 8, 8, 0.04) 25%, rgba(8, 8, 8, 0.20) 37.5%, rgba(8, 8, 8, 0.32) 43.75%, rgba(8, 8, 8, 0.36) 50%, rgba(8, 8, 8, 0.08) 56.25%, rgba(8, 8, 8, 0.20) 62.5%, rgba(8, 8, 8, 0.04) 75%, rgba(8, 8, 8, 0.20) 87.5%, rgba(8, 8, 8, 0.32) 93.75%, rgba(8, 8, 8, 0.36) 100% ))';
exports.speechBubbleSent = 'var(--plasma-colors-speech-bubble-sent)';
exports.speechBubbleReceived = 'var(--plasma-colors-speech-bubble-received)';
/** Цвет фона паранжи */
exports.overlay = 'var(--plasma-colors-overlay, rgba(0, 0, 0, 0.8))';
exports.overlaySoft = 'var(--plasma-colors-overlay-soft, rgba(8, 8, 8, 0.56))';
exports.overlayHard = 'var(--plasma-colors-overlay-hard, rgba(8, 8, 8, 0.9))';
exports.overlayBlur = 'var(--plasma-colors-overlay-blur, rgba(35, 35, 35, 0.2))';
exports.darkOverlaySoft = 'var(--plasma-colors-dark-overlay-soft, rgba(8, 8, 8, 0.56))';
exports.darkOverlayHard = 'var(--plasma-colors-dark-overlay-hard, rgba(8, 8, 8, 0.9))';
exports.darkOverlayBlur = 'var(--plasma-colors-dark-overlay-blur, rgba(35, 35, 35, 0.2))';
exports.lightOverlaySoft = 'var(--plasma-colors-light-overlay-soft, rgba(8, 8, 8, 0.56))';
exports.lightOverlayHard = 'var(--plasma-colors-light-overlay-hard, rgba(8, 8, 8, 0.9))';
exports.lightOverlayBlur = 'var(--plasma-colors-light-overlay-blur, rgba(35, 35, 35, 0.2))';
exports.inverseOverlaySoft = 'var(--plasma-colors-inverse-overlay-soft, rgba(8, 8, 8, 0.56))';
exports.inverseOverlayHard = 'var(--plasma-colors-inverse-overlay-hard, rgba(8, 8, 8, 0.9))';
exports.inverseOverlayBlur = 'var(--plasma-colors-inverse-overlay-blur, rgba(35, 35, 35, 0.2))';
//# sourceMappingURL=index.js.map