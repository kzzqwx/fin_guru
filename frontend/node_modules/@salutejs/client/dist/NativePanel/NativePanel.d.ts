import { Suggestions } from '../typings';
export declare type NativePanelProps = {
    className?: string;
    bubbleText: string;
    defaultText?: string;
    suggestions: Suggestions['buttons'];
    tabIndex?: number;
    screenshotMode?: boolean;
    sendServerAction: (action: Record<string, unknown>) => void;
    sendText: (text: string) => void;
    onListen: () => void;
    onSubscribeListenStatus: (cb: (type: 'listen' | 'stopped') => void) => () => void;
    onSubscribeHypotesis: (cb: (hypotesis: string, last: boolean) => void) => () => void;
};
export declare type NativePanelParams = {
    hideNativePanel?: boolean;
    render?: (props: NativePanelProps) => void;
} & Pick<NativePanelProps, 'defaultText' | 'tabIndex' | 'screenshotMode'>;
export declare const nativePanel: {
    mount: (element: HTMLDivElement, props: NativePanelProps) => void;
    unmount: () => void;
    update: (props: NativePanelProps) => void;
    readonly mounted: boolean;
};
//# sourceMappingURL=NativePanel.d.ts.map