function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
import React from 'react';
import { Calendar, CalendarDouble, CalendarDoubleRange } from '.';
var defaultProps = {
  min: /*#__PURE__*/new Date(2022, 4, 0),
  max: /*#__PURE__*/new Date(2022, 6, 15),
  date: /*#__PURE__*/new Date(),
  isDouble: false,
  isRange: false,
  value: /*#__PURE__*/new Date(2022, 5, 6),
  valueRange: [/*#__PURE__*/new Date(2022, 5, 6), /*#__PURE__*/new Date(2022, 5, 10)]
};
var eventsRange = /*#__PURE__*/_toConsumableArray(new Array(10)).map(function (_, day) {
  return {
    date: new Date(2022, 5, 15 + day),
    color: 'purple'
  };
});
var disabledDays = /*#__PURE__*/_toConsumableArray(new Array(5)).map(function (_, day) {
  return {
    date: new Date(2022, 5, 11 + day)
  };
});
var date = {
  day: 1,
  monthIndex: 2,
  year: 2022
};
var onChangeValue = function onChangeValue() {};
export var Default = function Default() {
  var min = defaultProps.min,
    max = defaultProps.max,
    isDouble = defaultProps.isDouble,
    isRange = defaultProps.isRange,
    value = defaultProps.value;
  return /*#__PURE__*/React.createElement(Calendar, {
    isRange: isRange,
    isDouble: isDouble,
    date: date,
    value: value,
    eventList: eventsRange,
    disabledList: disabledDays,
    min: min,
    max: max,
    onChangeValue: onChangeValue
  });
};
var doubleProps = {
  min: /*#__PURE__*/new Date(2022, 4, 0),
  max: /*#__PURE__*/new Date(2022, 6, 15),
  value: /*#__PURE__*/new Date(2022, 5, 6)
};
export var Double = function Double() {
  var min = doubleProps.min,
    max = doubleProps.max,
    value = doubleProps.value;
  return /*#__PURE__*/React.createElement(CalendarDouble, {
    value: value,
    eventList: eventsRange,
    disabledList: disabledDays,
    min: min,
    max: max,
    onChangeValue: onChangeValue
  });
};
var doubleRangeProps = {
  min: /*#__PURE__*/new Date(2022, 4, 0),
  max: /*#__PURE__*/new Date(2022, 7, 15),
  values: [/*#__PURE__*/new Date(2022, 5, 7), /*#__PURE__*/new Date(2022, 6, 9)]
};
var eventList = /*#__PURE__*/_toConsumableArray(eventsRange);
var disabledList = /*#__PURE__*/_toConsumableArray(disabledDays);
var valueDate = [/*#__PURE__*/new Date(), /*#__PURE__*/new Date()];
export var DoubleRange = function DoubleRange() {
  var min = doubleRangeProps.min,
    max = doubleRangeProps.max;
  return /*#__PURE__*/React.createElement(CalendarDoubleRange, {
    value: valueDate,
    eventList: eventList,
    disabledList: disabledList,
    min: min,
    max: max,
    onChangeValue: onChangeValue
  });
};