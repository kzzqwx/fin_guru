var _templateObject, _templateObject2;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { css, typographyTokens } from '@salutejs/plasma-new-hope/styled-components';
export var configFootnote1 = {
  defaults: {
    size: 'footnote1'
  },
  variations: {
    size: {
      footnote1: /*#__PURE__*/css(_templateObject || (_templateObject = /*#__PURE__*/_taggedTemplateLiteral(["\n                ", ": var(--plasma-typo-footnote1-font-family);\n                ", ": var(--plasma-typo-footnote1-font-size);\n                ", ": var(--plasma-typo-footnote1-font-style);\n                ", ": var(--plasma-typo-footnote1-font-weight);\n                ", ": var(--plasma-typo-footnote1-letter-spacing);\n                ", ": var(--plasma-typo-footnote1-line-height);\n            "])), typographyTokens.typoFontFamily, typographyTokens.typoFontSize, typographyTokens.typoFontStyle, typographyTokens.typoFontWeight, typographyTokens.typoFontLetterSpacing, typographyTokens.typoFontLineHeight)
    }
  }
};
export var configFootnote2 = {
  defaults: {
    size: 'footnote2'
  },
  variations: {
    size: {
      footnote2: /*#__PURE__*/css(_templateObject2 || (_templateObject2 = /*#__PURE__*/_taggedTemplateLiteral(["\n                ", ": var(--plasma-typo-footnote2-font-family);\n                ", ": var(--plasma-typo-footnote2-font-size);\n                ", ": var(--plasma-typo-footnote2-font-style);\n                ", ": var(--plasma-typo-footnote2-font-weight);\n                ", ": var(--plasma-typo-footnote2-letter-spacing);\n                ", ": var(--plasma-typo-footnote2-line-height);\n            "])), typographyTokens.typoFontFamily, typographyTokens.typoFontSize, typographyTokens.typoFontStyle, typographyTokens.typoFontWeight, typographyTokens.typoFontLetterSpacing, typographyTokens.typoFontLineHeight)
    }
  }
};