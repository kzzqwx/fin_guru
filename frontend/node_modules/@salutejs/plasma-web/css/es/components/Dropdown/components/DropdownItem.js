import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { component, mergeConfig, dropdownItemOldConfig } from '@salutejs/plasma-new-hope';
import styled from 'styled-components';
import { IconDone } from '@salutejs/plasma-icons';
import { accent } from '@salutejs/plasma-core';

var _StyledCheck;
var _excluded = ["value", "label", "color", "contentLeft", "isActive", "isHovered", "index", "onClick", "onHover", "onFocus", "items", "isDisabled", "style"];
var mergedItemConfig = /*#__PURE__*/mergeConfig(dropdownItemOldConfig);
var DropdownNewHopeItem = /*#__PURE__*/component(mergedItemConfig);
var StyledCheck = /*#__PURE__*/styled(IconDone).withConfig({
  componentId: "plasma-web__sc-1kwedk5-0"
})(["margin-left:auto;pointer-events:none;margin-right:-0.5rem;"]);
var DropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var value = props.value,
    label = props.label,
    color = props.color,
    contentLeft = props.contentLeft,
    isActive = props.isActive,
    index = props.index,
    onClick = props.onClick,
    onHover = props.onHover,
    onFocus = props.onFocus,
    isDisabled = props.isDisabled,
    style = props.style,
    rest = _objectWithoutProperties(props, _excluded);
  var handleClick = function handleClick(e) {
    if (onClick) {
      onClick({
        value: value,
        label: label,
        color: color,
        contentLeft: contentLeft
      }, e);
    }
  };
  var handleHover = function handleHover() {
    if (onHover) {
      onHover(index);
    }
  };
  return /*#__PURE__*/React.createElement(DropdownNewHopeItem, _extends({}, rest, {
    value: value,
    text: label,
    ref: ref,
    style: _objectSpread2(_objectSpread2({}, style), {}, {
      color: color
    }),
    contentLeft: contentLeft,
    contentRight: isActive ? _StyledCheck || (_StyledCheck = /*#__PURE__*/React.createElement(StyledCheck, {
      size: "s",
      color: accent
    })) : undefined,
    onClick: handleClick,
    onMouseOver: handleHover,
    onFocus: onFocus,
    disabled: isDisabled
  }));
});

export { DropdownItem, DropdownNewHopeItem };
//# sourceMappingURL=DropdownItem.js.map
