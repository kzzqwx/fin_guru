import styled from 'styled-components';
import { IconChevronDown } from '../../../_Icon';
import { addFocus, applyEllipsis } from '../../../../mixins';
import { component, mergeConfig } from '../../../../engines';
import { buttonConfig, buttonTokens } from '../../../Button';
import { classes, tokens } from '../../Select.tokens';
var hasChips = classes.hasChips,
  hasNoFocus = classes.hasNoFocus,
  innerLabelUp = classes.innerLabelUp,
  arrowInverse = classes.arrowInverse,
  selectTargetArrow = classes.selectTargetArrow,
  selectTargeText = classes.selectTargeText,
  selectTargetLabel = classes.selectTargetLabel;
var mergedButtonConfig = /*#__PURE__*/mergeConfig(buttonConfig);
var Button = /*#__PURE__*/component(mergedButtonConfig);

// NOTE: Необходимое переопределение токенов из компонента Button т.к. используются его части
export var StyledSelectTarget = /*#__PURE__*/styled(Button).withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-0"
})(["", ":var(", ");", ":var(", ");", ":", ";", ":", ";", ":", ";", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");box-shadow:inset 0 0 0 0.0625rem ", ";&:hover:not([disabled]):not([readonly]){box-shadow:inset 0 0 0 0.0625rem ", ";}&:active:not([disabled]):not([readonly]){box-shadow:inset 0 0 0 0.0625rem ", ";}padding:", ";display:flex;justify-content:flex-start;&[readonly]{cursor:default;.", "{opacity:0.4;}}.", "{transform:rotate(-180deg);}&.", "{padding:var(", ");}&.", "{.", "{top:var(", ");}.", "{top:var(", ");font-family:var(", ");font-size:var(", ");font-style:var(", ");font-weight:var(", ");letter-spacing:var(", ");line-height:var(", ");}}&.", "{--plasma_private-combobox-focus-size:0.0625rem;", "}"], buttonTokens.buttonDisabledOpacity, tokens.disabledOpacity, buttonTokens.buttonColor, tokens.targetColor, buttonTokens.buttonBackgroundColor, function (_ref) {
  var opened = _ref.opened;
  return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColor, ")");
}, buttonTokens.buttonBackgroundColorHover, function (_ref2) {
  var opened = _ref2.opened;
  return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColorHover, ")");
}, buttonTokens.buttonBackgroundColorActive, function (_ref3) {
  var opened = _ref3.opened;
  return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColorActive, ")");
}, buttonTokens.buttonHeight, tokens.targetHeight, buttonTokens.buttonWidth, tokens.targetWidth, buttonTokens.buttonRadius, tokens.targetRadius, buttonTokens.buttonFontFamily, tokens.targetFontFamily, buttonTokens.buttonFontSize, tokens.targetFontSize, buttonTokens.buttonFontStyle, tokens.targetFontStyle, buttonTokens.buttonFontWeight, tokens.targetFontWeight, buttonTokens.buttonLetterSpacing, tokens.targetLetterSpacing, buttonTokens.buttonLineHeight, tokens.targetLineHeight, buttonTokens.buttonFocusColor, tokens.focusColor, function (_ref4) {
  var opened = _ref4.opened;
  return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColor, ")");
}, function (_ref5) {
  var opened = _ref5.opened;
  return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColorHover, ")");
}, function (_ref6) {
  var opened = _ref6.opened;
  return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColorActive, ")");
}, function (_ref7) {
  var target = _ref7.target;
  return target === 'textField-like' ? "var(".concat(tokens.targetPaddingWithInput, ")") : "var(".concat(tokens.targetPadding, ")");
}, /*#__PURE__*/String(selectTargetArrow), /*#__PURE__*/String(arrowInverse), /*#__PURE__*/String(hasChips), tokens.targetPaddingHasChips, /*#__PURE__*/String(innerLabelUp), /*#__PURE__*/String(selectTargeText), tokens.targetInnerTop, /*#__PURE__*/String(selectTargetLabel), tokens.targetLabelInnerTop, tokens.targetLabelInnerFontFamily, tokens.targetLabelInnerFontSize, tokens.targetLabelInnerFontStyle, tokens.targetLabelInnerFontWeight, tokens.targetLabelInnerLetterSpacing, tokens.targetLabelInnerLineHeight, /*#__PURE__*/String(hasNoFocus), /*#__PURE__*/addFocus({
  hasTransition: false,
  outlineOffset: 'calc(-1 * var(--plasma_private-combobox-focus-size))',
  outlineRadius: /*#__PURE__*/"calc(var(".concat(tokens.targetRadius, ") + var(--plasma_private-combobox-focus-size))"),
  outlineSize: 'var(--plasma_private-combobox-focus-size)',
  customFocusRules: /*#__PURE__*/"\n                &:focus-within {\n                    box-shadow: none;\n                    background-color: var(".concat(tokens.targetBackgroundColorOpen, ");\n\n                    &::before {\n                        box-shadow: inset 0 0 0 var(--plasma_private-combobox-focus-size) var(").concat(tokens.targetBorderColorOpen, ");\n                    }\n                }\n            ")
}));
export var StyledArrow = /*#__PURE__*/styled(IconChevronDown).withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-1"
})(["transition:color 0.3s ease-in,transform 0.15s ease-in;pointer-events:none;user-select:none;position:absolute;right:var(", ");color:var(", ");"], tokens.targetArrowRight, tokens.targetArrowColor);
export var StyledText = /*#__PURE__*/styled.span.withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-2"
})(["", ";position:relative;pointer-events:none;user-select:none;color:var(", ");"], /*#__PURE__*/applyEllipsis(), tokens.targetColor);
export var StyledChipsWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-3"
})(["border-radius:var(", ");overflow:scroll;position:relative;width:100%;height:var(", ");display:flex;align-items:center;::-webkit-scrollbar{display:none;}scrollbar-width:none;overscroll-behavior:contain;"], tokens.chipBorderRadius, tokens.chipHeight);
export var StyledChips = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-4"
})(["overflow:visible;display:flex;gap:var(", ");position:absolute;user-select:none;"], tokens.chipGap);
export var StyledLabel = /*#__PURE__*/styled.label.withConfig({
  componentId: "plasma-new-hope__sc-s16vtc-5"
})(["", ";box-sizing:border-box;position:absolute;pointer-events:none;display:inline-flex;align-items:center;transition:all 0.1s ease-in-out;transform-origin:top left;width:100%;height:auto;color:var(", ");font-family:var(", ");font-size:var(", ");font-style:var(", ");font-weight:var(", ");letter-spacing:var(", ");line-height:var(", ");"], /*#__PURE__*/applyEllipsis(), tokens.targetLabelColor, tokens.targetFontFamily, tokens.targetFontSize, tokens.targetFontStyle, tokens.targetFontWeight, tokens.targetLetterSpacing, tokens.targetLineHeight);