import { classes, tokens } from '../TextArea.tokens';
var innerPlaceholderUp = classes.innerPlaceholderUp,
  hidePlaceHolder = classes.hidePlaceHolder,
  focusedOuterPlaceholderColor = classes.focusedOuterPlaceholderColor,
  styledTextArea = classes.styledTextArea,
  styledTextAreaWrapper = classes.styledTextAreaWrapper,
  styledPlaceholder = classes.styledPlaceholder;
export var applyDynamicLabel = /*#__PURE__*/"\n    .".concat(String(innerPlaceholderUp), " {\n        .").concat(String(styledTextArea), " {\n            height: calc(var(--plasma_private-textarea-input-actual-height) - var(").concat(tokens.labelInnerTop, "));\n        }\n\n        .").concat(String(styledTextAreaWrapper), " {\n            padding-top: calc(calc(var(").concat(tokens.labelInnerTop, ") + var(").concat(tokens.labelInnerFontSize, ")) + var(").concat(tokens.labelInnerMarginBottom, "));\n        }\n\n        .").concat(String(styledPlaceholder), " {\n            font-family: var(").concat(tokens.labelInnerFontFamily, ");\n            font-size: var(").concat(tokens.labelInnerFontSize, ");\n            font-style: var(").concat(tokens.labelInnerFontStyle, ");\n            font-weight: var(").concat(tokens.labelInnerFontWeight, ");\n            letter-spacing: var(").concat(tokens.labelInnerLetterSpacing, ");\n            line-height: var(").concat(tokens.labelInnerLineHeight, ");\n            top: var(").concat(tokens.labelInnerTop, ");\n        }\n    }\n\n    .").concat(String(hidePlaceHolder), " {\n        .").concat(String(styledPlaceholder), " {\n            display: none;\n        }\n    }\n\n    .").concat(String(focusedOuterPlaceholderColor), " {\n        .").concat(String(styledPlaceholder), " {\n            color: var(").concat(tokens.placeholderColorFocus, ");\n        }\n    }\n");