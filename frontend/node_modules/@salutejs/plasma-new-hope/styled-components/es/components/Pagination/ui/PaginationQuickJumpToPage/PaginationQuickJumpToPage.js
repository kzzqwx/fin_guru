var _excluded = ["placeholderQuickJump", "textQuickJump", "onChangeValue"];
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { useState } from 'react';
import { defaultValues } from '../../utils';
import { QuickJumpToPageRoot, QuickJumpToPageTypography, QuickJumpToPageInput } from './PaginationQuickJumpToPage.styles';
export var PaginationQuickJumpToPage = function PaginationQuickJumpToPage(_ref) {
  var _ref$placeholderQuick = _ref.placeholderQuickJump,
    placeholderQuickJump = _ref$placeholderQuick === void 0 ? defaultValues.placeholderQuickJump : _ref$placeholderQuick,
    _ref$textQuickJump = _ref.textQuickJump,
    textQuickJump = _ref$textQuickJump === void 0 ? defaultValues.textQuickJump : _ref$textQuickJump,
    onChangeValue = _ref.onChangeValue,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    pageValue = _useState2[0],
    setPageValue = _useState2[1];
  var handleKeyPress = function handleKeyPress(event) {
    if (event.key === 'Enter') {
      onChangeValue === null || onChangeValue === void 0 || onChangeValue(Number(pageValue));
      setPageValue('');
    }
  };
  var handleChangeInput = function handleChangeInput(event) {
    var result = event.currentTarget.value.replace(/\D/g, '');
    if (result === '') return setPageValue('');
    setPageValue(Number(result));
  };
  return /*#__PURE__*/React.createElement(QuickJumpToPageRoot, rest, /*#__PURE__*/React.createElement(QuickJumpToPageTypography, null, textQuickJump), /*#__PURE__*/React.createElement(QuickJumpToPageInput, {
    value: pageValue,
    placeholder: placeholderQuickJump,
    onKeyUp: handleKeyPress,
    onChange: handleChangeInput
  }));
};