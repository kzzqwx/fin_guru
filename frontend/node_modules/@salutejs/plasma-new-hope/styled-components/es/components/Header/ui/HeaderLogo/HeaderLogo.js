function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React, { forwardRef } from 'react';
import { component } from '../../../../engines';
import { imageConfig } from '../../../Image';
import { classes } from '../../Header.tokens';
import { base as sizeCSS } from './variations/_size/base';

// INFO: Omit 'onResize' | 'onResizeCapture' | 'nonce'
// because this types coming with @types/react@18.0.25 and breaks react@17.0.2 with @types/react@18.0.18

// issue #823
var Image = /*#__PURE__*/component(imageConfig);

/**
 * Компонент для размещения логотипа.
 */
export var headerLogoRoot = function headerLogoRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, outerRootRef) {
    return /*#__PURE__*/React.createElement(Root, {
      ref: outerRootRef
    }, /*#__PURE__*/React.createElement(Image, _extends({
      className: classes.headerLogoImage
    }, props)));
  });
};
export var headerLogoConfig = {
  name: 'HeaderLogo',
  tag: 'div',
  layout: headerLogoRoot,
  base: '',
  variations: {
    size: {
      css: sizeCSS
    }
  },
  defaults: {
    size: 'm'
  }
};