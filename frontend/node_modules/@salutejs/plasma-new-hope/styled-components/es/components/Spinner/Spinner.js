var _excluded = ["id"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import { safeUseId } from '@salutejs/plasma-core';
import { base as viewCSS } from './variations/_view/base';
import { base as sizeCSS } from './variations/_size/base';
import { SpinnerSvg } from './SpinnerSvg';
import { SpinnerWrapper, base } from './Spinner.styles';
import { useInnerProps } from './hooks';
export var spinnerRoot = function spinnerRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var id = props.id,
      rest = _objectWithoutProperties(props, _excluded);
    var innerProps = useInnerProps(props, {
      wrapperWidth: 'auto',
      wrapperHeight: 'auto',
      svgWidth: 'var(--plasma-spinner-size)',
      svgHeight: 'var(--plasma-spinner-size)',
      color: 'currentColor'
    });
    var uniqId = safeUseId;
    var innerId = id || uniqId();
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: ref,
      id: innerId
    }, rest), /*#__PURE__*/React.createElement(SpinnerWrapper, {
      width: innerProps.wrapperWidth,
      height: innerProps.wrapperHeight
    }, /*#__PURE__*/React.createElement(SpinnerSvg, {
      id: innerId,
      width: innerProps.svgWidth,
      height: innerProps.svgHeight,
      color: innerProps.color
    })));
  });
};
export var spinnerConfig = {
  name: 'Spinner',
  tag: 'div',
  layout: spinnerRoot,
  base: base,
  variations: {
    size: {
      css: sizeCSS
    },
    view: {
      css: viewCSS
    }
  },
  defaults: {
    size: 'm',
    view: 'accent'
  }
};