var _excluded = ["width", "height", "lighter", "customGradientColor", "roundness"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import { getRoundness, getSkeletonColor } from '../../../mixins';
import { StyledRectSkeleton } from './RectSkeleton.styles';
/**
 * Компонент для создания прямоугольного плейсхолдера.
 */
export var RectSkeleton = /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {
  var width = _ref.width,
    height = _ref.height,
    lighter = _ref.lighter,
    customGradientColor = _ref.customGradientColor,
    _ref$roundness = _ref.roundness,
    roundness = _ref$roundness === void 0 ? '16' : _ref$roundness,
    rest = _objectWithoutProperties(_ref, _excluded);
  var roundnessValue = getRoundness({
    roundness: roundness
  });
  var skeletonGradientColor = getSkeletonColor({
    lighter: lighter,
    customGradientColor: customGradientColor
  });
  return /*#__PURE__*/React.createElement(StyledRectSkeleton, _extends({
    ref: outerRootRef,
    roundness: roundnessValue,
    gradientColor: skeletonGradientColor,
    width: Number.isNaN(Number(width)) ? String(width) : "".concat(width, "px"),
    height: Number.isNaN(Number(height)) ? String(height) : "".concat(height, "px")
  }, rest));
});