import styled from 'styled-components';
import { classes, tokens } from '../../Dropdown.tokens';
import { addFocus, applyEllipsis } from '../../../../mixins';
export var StyledContentLeft = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-hs0ek1-0"
})(["display:inline-flex;"]);
export var StyledContentRight = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-hs0ek1-1"
})(["margin-left:auto;display:inline-flex;"]);
export var DisclosureIconWrapper = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-hs0ek1-2"
})(["line-height:0;color:var(", ");"], tokens.disclosureIconColor);
export var StyledText = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-hs0ek1-3"
})(["", ";flex:1;"], /*#__PURE__*/applyEllipsis());
export var Wrapper = /*#__PURE__*/styled.li.withConfig({
  componentId: "plasma-new-hope__sc-hs0ek1-4"
})(["display:flex;align-items:center;margin:0;box-sizing:content-box;padding-top:", ";padding-right:var(", ");padding-bottom:", ";padding-left:var(", ");font-family:var(", ");font-size:var(", ");font-style:var(", ");font-weight:var(", ");letter-spacing:var(", ");line-height:var(", ");background:var(", ");color:var(", ");border-radius:var(", ");user-select:none;&:hover:not(.", "){cursor:pointer;background:var(", ");}&.", "{background:var(", ");}&.", "{opacity:var(", ");cursor:not-allowed;}:focus{outline:none;}", ";"], function (_ref) {
  var variant = _ref.variant;
  return "var(".concat(variant === 'tight' ? tokens.itemPaddingTopTight : tokens.itemPaddingTop, ")");
}, tokens.itemPaddingRight, function (_ref2) {
  var variant = _ref2.variant;
  return "var(".concat(variant === 'tight' ? tokens.itemPaddingBottomTight : tokens.itemPaddingBottom, ")");
}, tokens.itemPaddingLeft, tokens.itemFontFamily, tokens.itemFontSize, tokens.itemFontStyle, tokens.itemFontWeightBold, tokens.itemFontLetterSpacing, tokens.itemFontLineHeight, tokens.itemBackground, tokens.itemColor, tokens.itemBorderRadius, classes.dropdownItemIsDisabled, tokens.itemBackgroundHover, classes.dropdownItemIsActive, tokens.itemBackgroundHover, classes.dropdownItemIsDisabled, tokens.disabledOpacity, /*#__PURE__*/addFocus({
  outlineSize: '0.0625rem',
  outlineOffset: '0',
  outlineColor: /*#__PURE__*/"var(".concat(tokens.focusColor, ")"),
  outlineRadius: /*#__PURE__*/"var(".concat(tokens.itemBorderRadius, ")"),
  hasTransition: false,
  customFocusRules: /*#__PURE__*/"\n            &.".concat(classes.dropdownItemIsFocused, ":before {\n                outline: none;\n                box-shadow: 0 0 0 0.0625rem var(").concat(tokens.focusColor, ");\n            }\n        ")
}));