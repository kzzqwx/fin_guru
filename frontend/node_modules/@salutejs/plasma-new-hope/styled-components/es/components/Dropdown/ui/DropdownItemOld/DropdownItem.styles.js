var _templateObject;
function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }
import { css } from 'styled-components';
import styled from 'styled-components';
import { classes, tokens } from '../../Dropdown.tokens';
import { addFocus, applyEllipsis } from '../../../../mixins';
export var StyledContentLeft = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-17ya3ay-0"
})(["display:inline-flex;min-width:var(", ");color:var(", ");"], tokens.itemContentLeftWidth, tokens.itemContentLeftColor);
export var StyledContentRight = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-17ya3ay-1"
})(["margin-left:auto;display:inline-flex;min-width:var(", ");color:var(", ");"], tokens.itemContentRightWidth, tokens.itemContentRightColor);
export var StyledText = /*#__PURE__*/styled.div.withConfig({
  componentId: "plasma-new-hope__sc-17ya3ay-2"
})(["", ";"], /*#__PURE__*/applyEllipsis());

// INFO: Для возможности переиспользования стилей в других компонентах
export var baseContent = /*#__PURE__*/"\n    box-sizing: content-box;\n    display: flex;\n    align-items: center;\n    user-select: none;\n\n    :focus {\n        outline: none;\n    }\n\n    ".concat(addFocus({
  outlineSize: '0.0625rem',
  outlineOffset: '0',
  outlineColor: "var(".concat(tokens.focusColor, ")"),
  outlineRadius: "var(".concat(tokens.itemBorderRadius, ")"),
  hasTransition: false
}), ";\n\n    width: auto;\n\n    font-family: var(").concat(tokens.itemFontFamily, ");\n    font-size: var(").concat(tokens.itemFontSize, ");\n    font-style: var(").concat(tokens.itemFontStyle, ");\n    font-weight: var(").concat(tokens.itemFontWeightBold, ");\n    letter-spacing: var(").concat(tokens.itemFontLetterSpacing, ");\n    line-height: var(").concat(tokens.itemFontLineHeight, ");\n\n    background: var(").concat(tokens.itemBackground, ");\n    color: var(").concat(tokens.itemColor, ");\n    border-radius: var(").concat(tokens.itemBorderRadius, ");\n\n    width: var(").concat(tokens.itemWidth, ");\n    height: var(").concat(tokens.itemHeight, ");\n\n    padding: var(").concat(tokens.itemPaddingTop, ") var(").concat(tokens.itemPaddingRight, ") var(").concat(tokens.itemPaddingBottom, ")\n        var(").concat(tokens.itemPaddingLeft, ");\n\n    margin: var(").concat(tokens.itemMarginTop, ") var(").concat(tokens.itemMarginRight, ") var(").concat(tokens.itemMarginBottom, ")\n        var(").concat(tokens.itemMarginLeft, ");\n\n    &:hover:not(.").concat(classes.dropdownItemIsDisabled, ") {\n        cursor: pointer;\n        background: var(").concat(tokens.itemBackgroundHover, ");\n    }\n\n    &.").concat(String(classes.dropdownItemIsSelected), " {\n        color: var(").concat(tokens.itemColorSelected, ");\n        background: var(").concat(tokens.itemBackgroundSelected, ");\n\n        &:hover:not(.").concat(classes.dropdownItemIsDisabled, ") {\n            background: var(").concat(tokens.itemBackgroundSelectedHover, ");\n        }\n    }\n\n    &.").concat(classes.dropdownItemIsDisabled, " {\n        opacity: var(").concat(tokens.disabledOpacity, ");\n        cursor: not-allowed;\n    }\n");
export var base = /*#__PURE__*/css(_templateObject || (_templateObject = /*#__PURE__*/_taggedTemplateLiteral(["\n    ", ";\n"])), baseContent);