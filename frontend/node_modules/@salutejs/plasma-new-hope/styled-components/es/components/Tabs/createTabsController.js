var _excluded = ["items", "index", "autoscroll", "onIndexChange"],
  _excluded2 = ["label"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
/**
 * @deprecated
 * Используйте Tabs, TabItem, указав параметры index, itemIndex, onIndexChange
 *
 * Функция для создания `TabController`, которая дает возможность
 * кастомизировать стили, при этом сохраняя единый интерфейс и функционал.
 */
export function createTabsController(ListComponent, ItemComponent) {
  // eslint-disable-next-line prefer-arrow-callback
  return /*#__PURE__*/forwardRef(function TabsController(_ref, ref) {
    var items = _ref.items,
      index = _ref.index,
      autoscroll = _ref.autoscroll,
      onIndexChange = _ref.onIndexChange,
      rest = _objectWithoutProperties(_ref, _excluded);
    var disabled = rest.disabled;
    return /*#__PURE__*/React.createElement(ListComponent, _extends({
      ref: ref,
      index: index
    }, rest), items.map(function (_ref2, i) {
      var label = _ref2.label,
        restItem = _objectWithoutProperties(_ref2, _excluded2);
      return /*#__PURE__*/React.createElement(ItemComponent, _extends({
        key: i,
        selected: i === index,
        itemIndex: i,
        onIndexChange: onIndexChange,
        tabIndex: !disabled && i === index ? 0 : -1,
        disabled: disabled
      }, restItem), label);
    }));
  });
}