function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _excluded = ["children", "view", "size", "width", "height", "className", "style"];
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import React, { forwardRef } from 'react';
import { cx, getSizeValueFromProp } from '../../utils';
import { base as viewCSS } from './variations/_view/base';
import { base as sizeCSS } from './variations/_size/base';
import { base as borderRadiusCSS } from './variations/_borderRadius/base';
import { classes } from './Panel.tokens';
import { StyledWrapper } from './Panel.styles';
export var panelRoot = function panelRoot(Root) {
  return /*#__PURE__*/forwardRef(function (_ref, outerRef) {
    var children = _ref.children,
      view = _ref.view,
      size = _ref.size,
      width = _ref.width,
      height = _ref.height,
      className = _ref.className,
      style = _ref.style,
      rest = _objectWithoutProperties(_ref, _excluded);
    var innerWidth = width ? getSizeValueFromProp(width) : '100%';
    var innerHeight = height ? getSizeValueFromProp(height) : '100%';
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: outerRef,
      view: view,
      size: size,
      className: cx(classes.root, className),
      style: _objectSpread(_objectSpread({}, style), {}, {
        '--plasma_private-panel-width': innerWidth,
        '--plasma_private-panel-height': innerHeight
      })
    }, rest), /*#__PURE__*/React.createElement(StyledWrapper, null, children));
  });
};
export var panelConfig = {
  name: 'Panel',
  tag: 'div',
  layout: panelRoot,
  base: '',
  variations: {
    view: {
      css: viewCSS
    },
    size: {
      css: sizeCSS
    },
    borderRadius: {
      css: borderRadiusCSS
    }
  },
  defaults: {
    view: 'default',
    size: 'm',
    borderRadius: 'none'
  }
};