import { css } from 'styled-components';
import { textAreaTokens } from '../../../../components/TextArea';
export var config = {
  defaults: {
    view: 'default',
    focused: 'true'
  },
  variations: {
    size: {
      xs: /*#__PURE__*/css(["", ":100%;", ":5.825rem;", ":1.125rem;", ":0.125rem;", ":0.25rem;", ":0.125rem;", ":0.5rem;", ":0.125rem;", ":0.5rem;", ":var(--plasma-typo-body-s-font-family);", ":var(--plasma-typo-body-s-font-size);", ":var(--plasma-typo-body-s-font-style);", ":var(--plasma-typo-body-s-font-weight);", ":var(--plasma-typo-body-s-letter-spacing);", ":var(--plasma-typo-body-s-line-height);"], textAreaTokens.inputWidth, textAreaTokens.inputHeight, textAreaTokens.inputMinHeight, textAreaTokens.borderSize, textAreaTokens.borderRadius, textAreaTokens.inputPaddingTop, textAreaTokens.inputPaddingRight, textAreaTokens.inputPaddingBottom, textAreaTokens.inputPaddingLeft, textAreaTokens.inputFontFamily, textAreaTokens.inputFontSize, textAreaTokens.inputFontStyle, textAreaTokens.inputFontWeight, textAreaTokens.inputLetterSpacing, textAreaTokens.inputLineHeight),
      s: /*#__PURE__*/css(["", ":100%;", ":5.825rem;", ":1.125rem;", ":0.125rem;", ":0.25rem;", ":0.188rem;", ":0.5rem;", ":0.313rem;", ":0.5rem;", ":var(--plasma-typo-body-m-font-family);", ":var(--plasma-typo-body-m-font-size);", ":var(--plasma-typo-body-m-font-style);", ":var(--plasma-typo-body-m-font-weight);", ":var(--plasma-typo-body-m-letter-spacing);", ":var(--plasma-typo-body-m-line-height);"], textAreaTokens.inputWidth, textAreaTokens.inputHeight, textAreaTokens.inputMinHeight, textAreaTokens.borderSize, textAreaTokens.borderRadius, textAreaTokens.inputPaddingTop, textAreaTokens.inputPaddingRight, textAreaTokens.inputPaddingBottom, textAreaTokens.inputPaddingLeft, textAreaTokens.inputFontFamily, textAreaTokens.inputFontSize, textAreaTokens.inputFontStyle, textAreaTokens.inputFontWeight, textAreaTokens.inputLetterSpacing, textAreaTokens.inputLineHeight),
      m: /*#__PURE__*/css(["", ":100%;", ":5.825rem;", ":1.125rem;", ":0.125rem;", ":0.25rem;", ":0.438rem;", ":0.5rem;", ":0.563rem;", ":0.75rem;", ":var(--plasma-typo-body-m-font-family);", ":var(--plasma-typo-body-m-font-size);", ":var(--plasma-typo-body-m-font-style);", ":var(--plasma-typo-body-m-font-weight);", ":var(--plasma-typo-body-m-letter-spacing);", ":var(--plasma-typo-body-m-line-height);"], textAreaTokens.inputWidth, textAreaTokens.inputHeight, textAreaTokens.inputMinHeight, textAreaTokens.borderSize, textAreaTokens.borderRadius, textAreaTokens.inputPaddingTop, textAreaTokens.inputPaddingRight, textAreaTokens.inputPaddingBottom, textAreaTokens.inputPaddingLeft, textAreaTokens.inputFontFamily, textAreaTokens.inputFontSize, textAreaTokens.inputFontStyle, textAreaTokens.inputFontWeight, textAreaTokens.inputLetterSpacing, textAreaTokens.inputLineHeight)
    },
    view: {
      "default": /*#__PURE__*/css(["", ":var(--surface-transparent-tertiary);", ":var(--surface-accent-hover);", ":var(--surface-accent-active);", ":var(--surface-accent-active);", ":var(--text-primary);", ":var(--text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], textAreaTokens.inputBorderColor, textAreaTokens.inputBorderColorHover, textAreaTokens.inputBorderColorActive, textAreaTokens.inputBorderColorFocus, textAreaTokens.inputColor, textAreaTokens.inputColorFocus, textAreaTokens.placeholderColor, textAreaTokens.placeholderColorFocus),
      negative: /*#__PURE__*/css(["", ":var(--surface-transparent-negative);", ":var(--surface-transparent-negative);", ":var(--surface-transparent-negative);", ":var(--surface-transparent-negative);", ":var(--surface-transparent-tertiary);", ":var(--surface-accent-hover);", ":var(--surface-accent-active);", ":var(--surface-accent-active);", ":var(--text-primary);", ":var(--text-primary);", ":var(--text-secondary);", ":var(--plasma-colors-secondary);"], textAreaTokens.inputBackgroundColor, textAreaTokens.inputBackgroundColorHover, textAreaTokens.inputBackgroundColorActive, textAreaTokens.inputBackgroundColorFocus, textAreaTokens.inputBorderColor, textAreaTokens.inputBorderColorHover, textAreaTokens.inputBorderColorActive, textAreaTokens.inputBorderColorFocus, textAreaTokens.inputColor, textAreaTokens.inputColorFocus, textAreaTokens.placeholderColor, textAreaTokens.placeholderColorFocus)
    },
    disabled: {
      "true": /*#__PURE__*/css(["", ":0.4;"], textAreaTokens.disabledOpacity)
    }
  }
};