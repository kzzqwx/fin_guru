import { css } from 'styled-components';
import { chipTokens } from '../../../../components/Chip';
export var config = {
  defaults: {
    view: 'primary',
    size: 'm'
  },
  variations: {
    view: {
      primary: /*#__PURE__*/css(["", ":var(--text-primary);", ":var(--surface-transparent-secondary);", ":var(--text-primary);", ":rgba(12,143,230,0.11);", ":var(--text-primary);", ":rgba(12,143,230,0.11);"], chipTokens.color, chipTokens.background, chipTokens.colorHover, chipTokens.backgroundHover, chipTokens.colorActive, chipTokens.backgroundActive)
    },
    size: {
      m: /*#__PURE__*/css(["", ":2.5rem;", ":auto;", ":2.5rem;", ":1rem;", ":1rem;", ":var(--plasma-typo-body-m-font-family);", ":var(--plasma-typo-body-m-font-size);", ":var(--plasma-typo-body-m-font-style);", ":var(--plasma-typo-body-m-font-weight);", ":var(--plasma-typo-body-m-letter-spacing);", ":var(--plasma-typo-body-m-line-height);", ":0.5rem;", ":-0.25rem;", ":1rem;"], chipTokens.borderRadius, chipTokens.width, chipTokens.height, chipTokens.paddingRight, chipTokens.paddingLeft, chipTokens.fontFamily, chipTokens.fontSize, chipTokens.fontStyle, chipTokens.fontWeight, chipTokens.letterSpacing, chipTokens.lineHeight, chipTokens.clearContentMarginLeft, chipTokens.clearContentMarginRight, chipTokens.closeIconSize),
      s: /*#__PURE__*/css(["", ":2.5rem;", ":auto;", ":1.75rem;", ":0.75rem;", ":0.75rem;", ":var(--plasma-typo-body-s-font-family);", ":var(--plasma-typo-body-s-font-size);", ":var(--plasma-typo-body-s-font-style);", ":var(--plasma-typo-body-s-font-weight);", ":var(--plasma-typo-body-s-letter-spacing);", ":var(--plasma-typo-body-s-line-height);", ":0.5rem;", ":-0.25rem;", ":1rem;"], chipTokens.borderRadius, chipTokens.width, chipTokens.height, chipTokens.paddingRight, chipTokens.paddingLeft, chipTokens.fontFamily, chipTokens.fontSize, chipTokens.fontStyle, chipTokens.fontWeight, chipTokens.letterSpacing, chipTokens.lineHeight, chipTokens.clearContentMarginLeft, chipTokens.clearContentMarginRight, chipTokens.closeIconSize),
      xs: /*#__PURE__*/css(["", ":2.5rem;", ":auto;", ":1.25rem;", ":0.625rem;", ":0.625rem;", ":var(--plasma-typo-body-xs-font-family);", ":var(--plasma-typo-body-xs-font-size);", ":var(--plasma-typo-body-xs-font-style);", ":var(--plasma-typo-body-xs-font-weight);", ":var(--plasma-typo-body-xs-letter-spacing);", ":var(--plasma-typo-body-xs-line-height);", ":0.25rem;", ":-0.125rem;", ":1rem;"], chipTokens.borderRadius, chipTokens.width, chipTokens.height, chipTokens.paddingRight, chipTokens.paddingLeft, chipTokens.fontFamily, chipTokens.fontSize, chipTokens.fontStyle, chipTokens.fontWeight, chipTokens.letterSpacing, chipTokens.lineHeight, chipTokens.clearContentMarginLeft, chipTokens.clearContentMarginRight, chipTokens.closeIconSize),
      xxs: /*#__PURE__*/css(["", ":0.375rem;", ":auto;", ":0.875rem;", ":0.5rem;", ":0.5rem;", ":var(--plasma-typo-body-xxs-font-family);", ":var(--plasma-typo-body-xxs-font-size);", ":var(--plasma-typo-body-xxs-font-style);", ":var(--plasma-typo-body-xxs-font-weight);", ":var(--plasma-typo-body-xxs-letter-spacing);", ":var(--plasma-typo-body-xxs-line-height);", ":0.25rem;", ":-0.125rem;", ":1rem;"], chipTokens.borderRadius, chipTokens.width, chipTokens.height, chipTokens.paddingRight, chipTokens.paddingLeft, chipTokens.fontFamily, chipTokens.fontSize, chipTokens.fontStyle, chipTokens.fontWeight, chipTokens.letterSpacing, chipTokens.lineHeight, chipTokens.clearContentMarginLeft, chipTokens.clearContentMarginRight, chipTokens.closeIconSize)
    },
    readOnly: {
      "true": /*#__PURE__*/css(["", ":var(--text-accent);", ":var(--surface-transparent-secondary);", ":var(--text-accent);", ":rgba(12,143,230,0.11);", ":var(--surface-transparent-secondary);", ":var(--text-accent);", ":rgba(12,143,230,0.11);", ":var(--text-accent);"], chipTokens.color, chipTokens.background, chipTokens.colorHover, chipTokens.backgroundHover, chipTokens.backgroundReadOnly, chipTokens.colorReadOnly, chipTokens.backgroundReadOnlyHover, chipTokens.colorReadOnlyHover)
    }
  }
};