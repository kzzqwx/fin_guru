"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.buttonGroupRoot = exports.buttonGroupConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _utils = /*#__PURE__*/require("../../utils");
var _base = /*#__PURE__*/require("./variations/_view/base");
var _base2 = /*#__PURE__*/require("./variations/_size/base");
var _base3 = /*#__PURE__*/require("./variations/_gap/base");
var _base4 = /*#__PURE__*/require("./variations/_shape/base");
var _base5 = /*#__PURE__*/require("./variations/_orientation/base");
var _base6 = /*#__PURE__*/require("./variations/_stretching/base");
var _ButtonGroup = /*#__PURE__*/require("./ButtonGroup.styles");
var _ButtonGroup2 = /*#__PURE__*/require("./ButtonGroup.tokens");
var _excluded = ["children", "view", "size", "className", "stretching", "gap", "orientation", "shape", "isCommonButtonStyles"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var buttonGroupRoot = exports.buttonGroupRoot = function buttonGroupRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
    var children = props.children,
      view = props.view,
      size = props.size,
      className = props.className,
      _props$stretching = props.stretching,
      stretching = _props$stretching === void 0 ? 'auto' : _props$stretching,
      _props$gap = props.gap,
      gap = _props$gap === void 0 ? 'dense' : _props$gap,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,
      _props$shape = props.shape,
      shape = _props$shape === void 0 ? 'default' : _props$shape,
      _props$isCommonButton = props.isCommonButtonStyles,
      isCommonButtonStyles = _props$isCommonButton === void 0 ? true : _props$isCommonButton,
      rest = _objectWithoutProperties(props, _excluded);
    var orientationClass = _ButtonGroup2.classes[orientation];
    var gapClass = _ButtonGroup2.classes[gap];
    var shapeClass = _ButtonGroup2.classes[shape];
    var stretchingClass = _ButtonGroup2.classes["".concat(stretching, "Stretching")];
    var overrideStylesClass = isCommonButtonStyles ? _ButtonGroup2.classes.buttonGroupOverrideStyles : undefined;
    return /*#__PURE__*/_react["default"].createElement(Root, _extends({
      ref: ref,
      view: view,
      size: size,
      gap: gap,
      orientation: orientation,
      shape: shape,
      className: (0, _utils.cx)(overrideStylesClass, orientationClass, gapClass, shapeClass, stretchingClass, className)
    }, rest), children);
  });
};
var buttonGroupConfig = exports.buttonGroupConfig = {
  name: 'ButtonGroup',
  tag: 'div',
  layout: buttonGroupRoot,
  base: _ButtonGroup.base,
  variations: {
    view: {
      css: _base.base
    },
    size: {
      css: _base2.base
    },
    gap: {
      css: _base3.base
    },
    orientation: {
      css: _base5.base
    },
    shape: {
      css: _base4.base
    },
    stretching: {
      css: _base6.base
    }
  },
  defaults: {
    view: 'primary',
    size: 'm',
    gap: 'dense',
    orientation: 'horizontal',
    shape: 'default',
    stretching: 'auto'
  }
};