"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.segmentGroupRoot = exports.segmentGroupConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _Icon = /*#__PURE__*/require("../../../_Icon");
var _tokens = /*#__PURE__*/require("../../tokens");
var _utils = /*#__PURE__*/require("../../../../utils");
var _SegmentProvider = /*#__PURE__*/require("../../SegmentProvider/SegmentProvider");
var _base = /*#__PURE__*/require("./variations/_size/base");
var _base2 = /*#__PURE__*/require("./variations/_view/base");
var _base3 = /*#__PURE__*/require("./variations/_disabled/base");
var _base4 = /*#__PURE__*/require("./variations/_pilled/base");
var _base5 = /*#__PURE__*/require("./variations/_filledBackgound/base");
var _base6 = /*#__PURE__*/require("./variations/_stretch/base");
var _SegmentGroup = /*#__PURE__*/require("./SegmentGroup.styles");
var _excluded = ["id", "selectionMode", "pilled", "stretch", "filledBackground", "disabled", "size", "view", "children"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var segmentGroupRoot = exports.segmentGroupRoot = function segmentGroupRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (props, outerRef) {
    var id = props.id,
      selectionMode = props.selectionMode,
      pilled = props.pilled,
      stretch = props.stretch,
      _props$filledBackgrou = props.filledBackground,
      filledBackground = _props$filledBackgrou === void 0 ? false : _props$filledBackgrou,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      size = props.size,
      view = props.view,
      children = props.children,
      rest = _objectWithoutProperties(props, _excluded);
    var _useSegmentInner = (0, _SegmentProvider.useSegmentInner)(),
      setSelectionMode = _useSegmentInner.setSelectionMode,
      setDisabledGroup = _useSegmentInner.setDisabledGroup;
    var _useState = (0, _react.useState)(0),
      _useState2 = _slicedToArray(_useState, 2),
      index = _useState2[0],
      setIndex = _useState2[1];
    var _useState3 = (0, _react.useState)(false),
      _useState4 = _slicedToArray(_useState3, 2),
      firstItemVisible = _useState4[0],
      setFirstItemVisible = _useState4[1];
    var _useState5 = (0, _react.useState)(false),
      _useState6 = _slicedToArray(_useState5, 2),
      lastItemVisible = _useState6[0],
      setLastItemVisible = _useState6[1];
    var uniqId = (0, _plasmaCore.safeUseId)();
    var segmentGroupId = id || uniqId;
    var pilledAttr = view !== 'clear' && pilled;
    var filledBackgroundAttr = view !== 'clear' && filledBackground;
    var pilledClass = pilledAttr ? _tokens.classes.segmentPilled : undefined;
    var filledClass = filledBackgroundAttr ? _tokens.classes.segmentGroupFilledBackground : undefined;
    var stretchClass = firstItemVisible && lastItemVisible && stretch ? _tokens.classes.segmentStretch : undefined;
    var items = (_react.Children === null || _react.Children === void 0 ? void 0 : _react.Children.map(children, function (child) {
      return child;
    })) || [];
    var onPrev = (0, _react.useCallback)(function () {
      !disabled && setIndex(function (prevIndex) {
        return prevIndex > 0 ? prevIndex - 1 : 0;
      });
    }, [disabled]);
    var onNext = (0, _react.useCallback)(function () {
      !disabled && setIndex(function (prevIndex) {
        return prevIndex < items.length - 1 ? prevIndex + 1 : prevIndex;
      });
    }, [disabled]);
    var onIntersecting = function onIntersecting(setVisible) {
      return function (entries) {
        /*
         * Пробегаемся по элементам на которых есть слушатель события появления.
         * Если элемент находится в зоне видимости или выходит из нее, меняем значение флага видимости
         */
        entries.forEach(function (entry) {
          if (entry.isIntersecting) {
            setVisible(true);
          } else {
            setVisible(false);
          }
        });
      };
    };
    var _useCarousel = (0, _plasmaCore.useCarousel)({
        index: index,
        axis: 'x',
        scrollAlign: 'start',
        detectActive: true,
        debounceMs: 250,
        onIndexChange: setIndex
      }),
      scrollRef = _useCarousel.scrollRef,
      trackRef = _useCarousel.trackRef;
    var PreviousButton = (0, _react.useMemo)(function () {
      return /*#__PURE__*/_react["default"].createElement(_SegmentGroup.StyledArrow, {
        type: "button",
        "aria-label": "\u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0439 \u0441\u0435\u0433\u043C\u0435\u043D\u0442",
        onClick: onPrev,
        tabIndex: disabled ? -1 : 0,
        disabled: disabled
      }, /*#__PURE__*/_react["default"].createElement(_Icon.IconDisclosureLeft, {
        color: "var(".concat(_tokens.tokens.arrowColor, ")")
      }));
    }, [onPrev]);
    var NextButton = (0, _react.useMemo)(function () {
      return /*#__PURE__*/_react["default"].createElement(_SegmentGroup.StyledArrow, {
        type: "button",
        "aria-label": "\u0421\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u0441\u0435\u0433\u043C\u0435\u043D\u0442",
        onClick: onNext,
        tabIndex: disabled ? -1 : 0,
        disabled: disabled
      }, /*#__PURE__*/_react["default"].createElement(_Icon.IconDisclosureRight, {
        color: "var(".concat(_tokens.tokens.arrowColor, ")")
      }));
    }, [onNext]);
    (0, _react.useEffect)(function () {
      selectionMode && setSelectionMode(selectionMode);
      setDisabledGroup(disabled);
    }, [selectionMode, disabled]);
    (0, _react.useEffect)(function () {
      var _trackRef$current;
      // Intersection observer для первого сегмента
      var observeFirstItem = new IntersectionObserver(onIntersecting(setFirstItemVisible), {
        root: null,
        rootMargin: '0px',
        threshold: 0.5
      });

      // Intersection observer для последнего сегмента
      var observeLastItem = new IntersectionObserver(onIntersecting(setLastItemVisible), {
        root: null,
        rootMargin: '0px',
        threshold: 0.5
      });

      // получаем список сегментов внутри SegmentGroup
      var childrenArray = Array.from(((_trackRef$current = trackRef.current) === null || _trackRef$current === void 0 ? void 0 : _trackRef$current.children) || []);
      if (childrenArray.length) {
        // подписываемся на событие появление внутри SegmentGroup
        observeFirstItem.observe(childrenArray[0]);
        observeLastItem.observe(childrenArray[childrenArray.length - 1]);
      }
      return function () {
        // отписываемся от события появления внутри SegmentGroup
        observeFirstItem.disconnect();
        observeLastItem.disconnect();
      };
    }, [children]);
    return /*#__PURE__*/_react["default"].createElement(Root, _extends({
      view: view,
      size: size,
      id: segmentGroupId,
      ref: outerRef,
      filledBackground: filledBackgroundAttr,
      disabled: disabled,
      pilled: pilledAttr,
      className: (0, _utils.cx)(pilledClass, filledClass, stretchClass)
    }, rest), !firstItemVisible && PreviousButton, /*#__PURE__*/_react["default"].createElement(_SegmentGroup.StyledContentWrapper, {
      ref: scrollRef
    }, /*#__PURE__*/_react["default"].createElement(_SegmentGroup.StyledContent, {
      ref: trackRef
    }, children)), !lastItemVisible && NextButton);
  });
};
var segmentGroupConfig = exports.segmentGroupConfig = {
  name: 'SegmentGroup',
  tag: 'div',
  layout: segmentGroupRoot,
  base: _SegmentGroup.base,
  variations: {
    size: {
      css: _base.base
    },
    view: {
      css: _base2.base
    },
    disabled: {
      css: _base3.base,
      attrs: true
    },
    pilled: {
      css: _base4.base,
      attrs: true
    },
    stretch: {
      css: _base6.base,
      attrs: true
    },
    filledBackground: {
      css: _base5.base,
      attrs: true
    }
  },
  defaults: {
    view: 'clear',
    size: 'xs'
  }
};