"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CalendarDayItem = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _utils = /*#__PURE__*/require("../../../../utils");
var _Calendar = /*#__PURE__*/require("../../Calendar.tokens");
var _CalendarDayItem = /*#__PURE__*/require("./CalendarDayItem.styles");
var _excluded = ["isFocused", "dayOfWeek", "disabled", "isCurrent", "isSelected", "isDayInCurrentMonth", "isDouble", "inRange", "isHovered", "sideInRange", "eventList", "day", "monthIndex", "year", "onClick", "onMouseOver", "onFocus", "disabledArrowKey", "disabledMonths"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Компонент дня в календаре.
 */
var CalendarDayItem = exports.CalendarDayItem = /*#__PURE__*/(0, _react.memo)( /*#__PURE__*/(0, _react.forwardRef)(function (_ref, outerRef) {
  var isFocused = _ref.isFocused,
    dayOfWeek = _ref.dayOfWeek,
    disabled = _ref.disabled,
    isCurrent = _ref.isCurrent,
    isSelected = _ref.isSelected,
    isDayInCurrentMonth = _ref.isDayInCurrentMonth,
    isDouble = _ref.isDouble,
    inRange = _ref.inRange,
    isHovered = _ref.isHovered,
    sideInRange = _ref.sideInRange,
    _ref$eventList = _ref.eventList,
    eventList = _ref$eventList === void 0 ? [] : _ref$eventList,
    day = _ref.day,
    monthIndex = _ref.monthIndex,
    year = _ref.year,
    onClick = _ref.onClick,
    onMouseOver = _ref.onMouseOver,
    onFocus = _ref.onFocus,
    disabledArrowKey = _ref.disabledArrowKey,
    disabledMonths = _ref.disabledMonths,
    rest = _objectWithoutProperties(_ref, _excluded);
  var selectableClass = !dayOfWeek && !disabled ? _Calendar.classes.selectableItem : undefined;
  var selectedClass = isSelected ? _Calendar.classes.selectedItem : undefined;
  var currentClass = isCurrent ? _Calendar.classes.currentItem : undefined;
  var hoveredClass = isHovered ? _Calendar.classes.hoveredItem : undefined;
  var dayOfWeekClass = dayOfWeek ? _Calendar.classes.dayOfWeek : undefined;
  var disabledClass = disabled && !isCurrent ? _Calendar.classes.dayDisabled : undefined;
  var disabledCurrentClass = disabled && isCurrent ? _Calendar.classes.dayDisabledCurrent : undefined;
  var sideInRangeLeft = sideInRange === 'left' ? _Calendar.classes.daySideLeft : undefined;
  var sideInRangeRight = sideInRange === 'right' ? _Calendar.classes.daySideRight : undefined;
  var sideInRangeClass = sideInRange ? _Calendar.classes.daySideInRange : undefined;
  var inRangeStyle = inRange ? _Calendar.classes.dayInRange : undefined;
  var sideOffset = !isSelected && isCurrent ? -1 : 0;
  return /*#__PURE__*/_react["default"].createElement(_CalendarDayItem.StyledDayRoot, _extends({
    ref: outerRef,
    className: (0, _utils.cx)(dayOfWeekClass, selectableClass, selectedClass, currentClass, disabledClass, disabledCurrentClass, hoveredClass),
    tabIndex: isFocused ? 0 : -1,
    dayOfWeek: dayOfWeek,
    isCurrent: isCurrent,
    isSelected: isSelected,
    isDayInCurrentMonth: isDayInCurrentMonth,
    isDouble: isDouble,
    isHovered: isHovered,
    sideInRange: sideInRange,
    onClick: disabled ? undefined : onClick,
    onMouseOver: onMouseOver,
    onFocus: onFocus,
    "data-day": day,
    "data-month-index": monthIndex,
    "data-year": year,
    "data-disabled-arrow-key": disabledArrowKey || undefined,
    "data-disabled-months": disabledMonths || undefined,
    "aria-selected": isSelected,
    "aria-disabled": disabled,
    "aria-describedby": disabled ? 'withShift' : undefined
  }, rest), /*#__PURE__*/_react["default"].createElement(_CalendarDayItem.StyledDay, {
    className: (0, _utils.cx)(sideInRangeClass, sideInRangeLeft, sideInRangeRight, inRangeStyle),
    offset: sideOffset
  }, day), /*#__PURE__*/_react["default"].createElement(_CalendarDayItem.StyledEvents, {
    "aria-hidden": true
  }, [eventList[0], eventList[1], eventList[2]].map(function (event, i) {
    return event && /*#__PURE__*/_react["default"].createElement(_CalendarDayItem.StyledEvent, _extends({
      key: "".concat(event.date, "-").concat(i)
    }, event));
  })));
}));