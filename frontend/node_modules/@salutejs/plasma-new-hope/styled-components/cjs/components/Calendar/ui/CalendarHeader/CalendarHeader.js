"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CalendarHeader = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _Icon = /*#__PURE__*/require("../../../_Icon");
var _types = /*#__PURE__*/require("../../store/types");
var _utils = /*#__PURE__*/require("../../utils");
var _CalendarHeader = /*#__PURE__*/require("./CalendarHeader.styles");
var _IconDisclosureLeft, _IconDisclosureRight;
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
/**
 * Компонент шапки календаря.
 */
var CalendarHeader = exports.CalendarHeader = function CalendarHeader(_ref) {
  var _ref$type = _ref.type,
    type = _ref$type === void 0 ? 'Days' : _ref$type,
    _ref$startYear = _ref.startYear,
    startYear = _ref$startYear === void 0 ? 0 : _ref$startYear,
    firstDate = _ref.firstDate,
    secondDate = _ref.secondDate,
    isDouble = _ref.isDouble,
    onPrev = _ref.onPrev,
    onNext = _ref.onNext,
    onUpdateCalendarState = _ref.onUpdateCalendarState;
  var handleCalendarState = (0, _react.useCallback)(function () {
    if (type === _types.CalendarState.Days) {
      onUpdateCalendarState === null || onUpdateCalendarState === void 0 || onUpdateCalendarState(_types.CalendarState.Months, [3, 2]);
    }
    if (type === _types.CalendarState.Months) {
      onUpdateCalendarState === null || onUpdateCalendarState === void 0 || onUpdateCalendarState(_types.CalendarState.Years, [3, 2]);
    }
  }, [type, onUpdateCalendarState]);
  var getHeaderContent = (0, _react.useCallback)(function (date) {
    if (!date) {
      return '';
    }
    if (type === _types.CalendarState.Days) {
      return "".concat(_utils.MONTH_NAMES[date.monthIndex], " ").concat(date.year);
    }
    if (type === _types.CalendarState.Months) {
      return "".concat(date.year);
    }
    if (type === _types.CalendarState.Years) {
      return "".concat(startYear, "\u2014").concat(startYear + _utils.YEAR_RENDER_COUNT - 1);
    }
    return '';
  }, [type, startYear]);
  var currentCalendarType = (0, _utils.getCalendarType)(isDouble ? _types.CalendarState.Days : type);
  var PreviousButton = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledArrow, {
      type: "button",
      "aria-label": "\u041F\u0440\u0435\u0434\u044B\u0434\u0443\u0449\u0438\u0439 ".concat(currentCalendarType),
      tabIndex: 0,
      onClick: function onClick() {
        return onPrev();
      }
    }, _IconDisclosureLeft || (_IconDisclosureLeft = /*#__PURE__*/_react["default"].createElement(_Icon.IconDisclosureLeft, null)));
  }, [currentCalendarType, onPrev]);
  var NextButton = (0, _react.useMemo)(function () {
    return /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledArrow, {
      type: "button",
      "aria-label": "\u0421\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 ".concat(currentCalendarType),
      tabIndex: 0,
      onClick: function onClick() {
        return onNext();
      }
    }, _IconDisclosureRight || (_IconDisclosureRight = /*#__PURE__*/_react["default"].createElement(_Icon.IconDisclosureRight, null)));
  }, [currentCalendarType, onNext]);
  return /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledCalendarHeader, null, isDouble ? /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledNavigation, null, PreviousButton, /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledHeaderDouble, {
    "aria-live": "polite"
  }, getHeaderContent(firstDate)), /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledHeaderDouble, {
    "aria-live": "polite"
  }, getHeaderContent(secondDate)), NextButton) : /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledHeader, {
    type: "button",
    "aria-live": "polite",
    id: "id-grid-label",
    onClick: handleCalendarState,
    tabIndex: 0
  }, getHeaderContent(firstDate)), /*#__PURE__*/_react["default"].createElement(_CalendarHeader.StyledArrows, null, PreviousButton, NextButton)));
};