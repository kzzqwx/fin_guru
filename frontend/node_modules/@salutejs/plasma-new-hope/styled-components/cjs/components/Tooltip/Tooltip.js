"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tooltipRoot = exports.tooltipConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("styled-components"));
var _engines = /*#__PURE__*/require("../../engines");
var _Popover = /*#__PURE__*/require("../Popover");
var _utils = /*#__PURE__*/require("../../utils");
var _Tooltip = /*#__PURE__*/require("./Tooltip.styles");
var _base = /*#__PURE__*/require("./variations/_view/base");
var _base2 = /*#__PURE__*/require("./variations/_size/base");
var _Tooltip2 = /*#__PURE__*/require("./Tooltip.tokens");
var _excluded = ["id", "text", "isOpen", "isVisible", "hasArrow", "arrow", "animated", "offset", "minWidth", "maxWidth", "placement", "usePortal", "target", "children", "onDismiss", "view", "size", "contentLeft", "zIndex", "className"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var ESCAPE_KEYCODE = 27;
var getStringValue = function getStringValue(value) {
  return typeof value === 'number' ? "".concat(value, "rem") : value;
};
var Popover = /*#__PURE__*/(0, _engines.component)(_Popover.popoverConfig);
var StyledPopover = /*#__PURE__*/(0, _styledComponents["default"])(Popover).withConfig({
  componentId: "plasma-new-hope__sc-dj06kz-0"
})(["", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");", ":var(", ");&.", " .", "{transition:opacity 200ms ease-in-out,visibility 200ms ease-in-out;}"], _Popover.popoverTokens.arrowMaskWidth, _Tooltip2.tokens.arrowMaskWidth, _Popover.popoverTokens.arrowMaskHeight, _Tooltip2.tokens.arrowMaskHeight, _Popover.popoverTokens.arrowMaskImage, _Tooltip2.tokens.arrowMaskImage, _Popover.popoverTokens.arrowBackground, _Tooltip2.tokens.arrowBackground, _Popover.popoverTokens.arrowHeight, _Tooltip2.tokens.arrowHeight, _Popover.popoverTokens.arrowEdgeMargin, _Tooltip2.tokens.arrowEdgeMargin, _Tooltip2.classes.animated, _Popover.popoverClasses.root);

/**
 * Компонент для текстовых подсказок. Основное предназначение — подписи к блокам.
 */

var tooltipRoot = exports.tooltipRoot = function tooltipRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (_ref, outerRef) {
    var id = _ref.id,
      text = _ref.text,
      isOpen = _ref.isOpen,
      isVisible = _ref.isVisible,
      _ref$hasArrow = _ref.hasArrow,
      hasArrow = _ref$hasArrow === void 0 ? true : _ref$hasArrow,
      arrow = _ref.arrow,
      animated = _ref.animated,
      _ref$offset = _ref.offset,
      offset = _ref$offset === void 0 ? [0, 8] : _ref$offset,
      minWidth = _ref.minWidth,
      maxWidth = _ref.maxWidth,
      _ref$placement = _ref.placement,
      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,
      _ref$usePortal = _ref.usePortal,
      usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,
      target = _ref.target,
      children = _ref.children,
      onDismiss = _ref.onDismiss,
      view = _ref.view,
      size = _ref.size,
      contentLeft = _ref.contentLeft,
      _ref$zIndex = _ref.zIndex,
      zIndex = _ref$zIndex === void 0 ? '9200' : _ref$zIndex,
      className = _ref.className,
      rest = _objectWithoutProperties(_ref, _excluded);
    var _useState = (0, _react.useState)(null),
      _useState2 = _slicedToArray(_useState, 2),
      ref = _useState2[0],
      setRef = _useState2[1];

    // TODO убрать после отказа от старого API
    var innerIsOpen = isVisible || isOpen;
    var innerHasArrow = arrow || hasArrow;
    var showTooltip = innerIsOpen && Boolean(text === null || text === void 0 ? void 0 : text.length);
    var animatedClass = animated ? _Tooltip2.classes.animated : undefined;
    (0, _react.useEffect)(function () {
      var onKeyDown = function onKeyDown(event) {
        if (event.keyCode === ESCAPE_KEYCODE) {
          onDismiss === null || onDismiss === void 0 || onDismiss();
        }
      };
      window.addEventListener('keydown', onKeyDown);
      return function () {
        window.removeEventListener('keydown', onKeyDown);
      };
    }, []);
    var withContentLeft = contentLeft ? _Tooltip2.classes.hasContentLeft : undefined;
    return /*#__PURE__*/_react["default"].createElement(StyledPopover, _extends({
      isOpen: showTooltip,
      placement: placement,
      offset: offset,
      zIndex: zIndex,
      target: target || children,
      usePortal: usePortal,
      hasArrow: innerHasArrow,
      "aria-hidden": !innerIsOpen,
      "aria-live": "polite",
      role: "tooltip",
      className: (0, _utils.cx)(ref === null || ref === void 0 ? void 0 : ref.classList.toString(), animatedClass, className)
      // INFO: Прокидываем стили для Popover из Root Tooltip-а
    }, rest), /*#__PURE__*/_react["default"].createElement(Root, {
      view: view,
      size: size,
      ref: setRef
    }, /*#__PURE__*/_react["default"].createElement(_Tooltip.TooltipRoot, {
      ref: outerRef,
      id: id,
      className: (0, _utils.cx)(withContentLeft),
      maxWidth: getStringValue(maxWidth),
      minWidth: getStringValue(minWidth)
    }, contentLeft && /*#__PURE__*/_react["default"].createElement(_Tooltip.StyledContentLeft, null, contentLeft), text)));
  });
};
var tooltipConfig = exports.tooltipConfig = {
  name: 'Tooltip',
  tag: 'div',
  layout: tooltipRoot,
  base: '',
  variations: {
    view: {
      css: _base.base
    },
    size: {
      css: _base2.base
    }
  },
  defaults: {
    view: 'default',
    size: 'm'
  }
};