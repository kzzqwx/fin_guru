"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PopupRoot = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _plasmaCore = /*#__PURE__*/require("@salutejs/plasma-core");
var _PopupContext = /*#__PURE__*/require("./PopupContext");
var _Popup = /*#__PURE__*/require("./Popup.styles");
var _Popup2 = /*#__PURE__*/require("./Popup.tokens");
var _excluded = ["id", "placement", "offset", "frame", "setVisible", "children", "role", "zIndex", "animationInfo", "className"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Корень Popup.
 * Управляет показом/скрытием и анимацией всплывающего окна.
 */
var PopupRoot = exports.PopupRoot = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var id = _ref.id,
    placement = _ref.placement,
    offset = _ref.offset,
    frame = _ref.frame,
    setVisible = _ref.setVisible,
    children = _ref.children,
    role = _ref.role,
    zIndex = _ref.zIndex,
    animationInfo = _ref.animationInfo,
    className = _ref.className,
    rest = _objectWithoutProperties(_ref, _excluded);
  var contentRef = (0, _react.useRef)(null);
  var innerRef = (0, _plasmaCore.useForkRef)(contentRef, ref);
  var popupController = (0, _PopupContext.usePopupContext)();
  var handleAnimationEnd = (0, _react.useCallback)(function (e) {
    if (!contentRef || e.target !== contentRef.current) {
      return;
    }
    e.stopPropagation();
    if (animationInfo !== null && animationInfo !== void 0 && animationInfo.endAnimation) {
      popupController.unregister(id);
      setVisible(false);
      animationInfo.setEndAnimation(false);
    }
  }, [popupController.unregister, animationInfo === null || animationInfo === void 0 ? void 0 : animationInfo.endAnimation, setVisible]);
  return /*#__PURE__*/_react["default"].createElement(_Popup.PopupRootContainer, _extends({
    className: _Popup2.classes.root,
    ref: innerRef,
    placement: placement,
    frame: frame,
    offset: offset,
    zIndex: zIndex,
    onAnimationEnd: handleAnimationEnd,
    onTransitionEnd: handleAnimationEnd
  }, rest), /*#__PURE__*/_react["default"].createElement(_Popup.PopupView, {
    role: role
  }, children));
});