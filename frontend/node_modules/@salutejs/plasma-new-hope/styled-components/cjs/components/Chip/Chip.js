"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chipRoot = exports.chipConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _IconClose = /*#__PURE__*/require("../_Icon/Icons/IconClose");
var _utils = /*#__PURE__*/require("../../utils");
var _base = /*#__PURE__*/require("./variations/_view/base");
var _base2 = /*#__PURE__*/require("./variations/_size/base");
var _base3 = /*#__PURE__*/require("./variations/_disabled/base");
var _base4 = /*#__PURE__*/require("./variations/_readonly/base");
var _base5 = /*#__PURE__*/require("./variations/_focused/base");
var _base6 = /*#__PURE__*/require("./variations/_pilled/base");
var _Chip = /*#__PURE__*/require("./Chip.styles");
var _Chip2 = /*#__PURE__*/require("./Chip.tokens");
var _excluded = ["children", "text", "contentLeft", "contentRight", "contentClearButton", "size", "className", "onClear", "onClick", "pilled", "readOnly", "disabled"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var chipRoot = exports.chipRoot = function chipRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (props, ref) {
    var children = props.children,
      text = props.text,
      contentLeft = props.contentLeft,
      contentRight = props.contentRight,
      contentClearButton = props.contentClearButton,
      size = props.size,
      className = props.className,
      onClear = props.onClear,
      onClick = props.onClick,
      _props$pilled = props.pilled,
      pilled = _props$pilled === void 0 ? false : _props$pilled,
      _props$readOnly = props.readOnly,
      readOnly = _props$readOnly === void 0 ? false : _props$readOnly,
      _props$disabled = props.disabled,
      disabled = _props$disabled === void 0 ? false : _props$disabled,
      rest = _objectWithoutProperties(props, _excluded);
    var txt = !text && typeof children === 'string' ? children : text;
    var pilledClass = pilled ? _Chip2.classes.pilled : undefined;
    var handleClick = function handleClick(event) {
      if (disabled || readOnly) {
        return;
      }
      onClick === null || onClick === void 0 || onClick(event);
      onClear === null || onClear === void 0 || onClear();
    };
    var ClearContent = (0, _react.useMemo)(function () {
      return contentClearButton || /*#__PURE__*/_react["default"].createElement(_Chip.StyledContentClear, null, /*#__PURE__*/_react["default"].createElement(_IconClose.IconClose, {
        sizeCustomProperty: _Chip2.tokens.closeIconSize,
        color: "inherit"
      }));
    }, [contentClearButton, _Chip2.tokens.closeIconSize]);
    return /*#__PURE__*/_react["default"].createElement(Root, _extends({
      type: "button",
      ref: ref,
      className: (0, _utils.cx)(pilledClass, className),
      tabIndex: readOnly ? -1 : 0,
      onClick: handleClick,
      disabled: disabled,
      pilled: pilled,
      readOnly: !disabled && readOnly,
      size: size
    }, rest), contentLeft && /*#__PURE__*/_react["default"].createElement(_Chip.StyledContentLeft, null, contentLeft), txt ? /*#__PURE__*/_react["default"].createElement(_Chip.StyledContentMain, null, txt) : children, contentRight && /*#__PURE__*/_react["default"].createElement(_Chip.StyledContentRight, null, contentRight), ClearContent);
  });
};
var chipConfig = exports.chipConfig = {
  name: 'Chip',
  tag: 'button',
  layout: chipRoot,
  base: _Chip.base,
  variations: {
    view: {
      css: _base.base
    },
    size: {
      css: _base2.base
    },
    disabled: {
      css: _base3.base,
      attrs: true
    },
    readOnly: {
      css: _base4.base,
      attrs: true
    },
    focused: {
      css: _base5.base
    },
    pilled: {
      css: _base6.base,
      attrs: true
    }
  },
  defaults: {
    view: 'default',
    size: 'm'
  }
};