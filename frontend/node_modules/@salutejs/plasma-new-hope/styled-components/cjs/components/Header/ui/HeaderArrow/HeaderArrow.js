"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.headerArrowRoot = exports.headerArrowConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _engines = /*#__PURE__*/require("../../../../engines");
var _Button = /*#__PURE__*/require("../../../Button");
var _Header = /*#__PURE__*/require("../../Header.tokens");
var _Icon = /*#__PURE__*/require("../../../_Icon");
var _utils = /*#__PURE__*/require("../../../../utils");
var _HeaderArrow = /*#__PURE__*/require("./HeaderArrow.styles");
var _base = /*#__PURE__*/require("./variations/_size/base");
var _base2 = /*#__PURE__*/require("./variations/_view/base");
var _excluded = ["arrow", "iconSize", "value"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var mergedButtonConfig = /*#__PURE__*/(0, _engines.mergeConfig)(_Button.buttonConfig);
var Button = /*#__PURE__*/(0, _engines.component)(mergedButtonConfig);

/**
 * Кнопка-стрелка с возможностью отображения в двух типах - "назад" или "свернуть".
 */
var headerArrowRoot = exports.headerArrowRoot = function headerArrowRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (props, outerRootRef) {
    var arrow = props.arrow,
      _props$iconSize = props.iconSize,
      iconSize = _props$iconSize === void 0 ? 's' : _props$iconSize,
      value = props.value,
      rest = _objectWithoutProperties(props, _excluded);
    var minimizeClass = arrow === 'minimize' ? _Header.classes.headerArrowIconMinimize : undefined;
    return /*#__PURE__*/_react["default"].createElement(Root, {
      ref: outerRootRef
    }, /*#__PURE__*/_react["default"].createElement(Button, _extends({
      view: "clear",
      size: "s",
      tabIndex: -1,
      className: _Header.classes.headerArrow,
      value: String(value)
    }, rest), /*#__PURE__*/_react["default"].createElement(_Icon.IconChevronLeft, _extends({
      size: iconSize,
      sizeCustomProperty: _Header.tokens.headerArrowIconSize,
      className: (0, _utils.cx)(_Header.classes.headerArrowIcon, minimizeClass),
      color: "inherit"
    }, props))));
  });
};
var headerArrowConfig = exports.headerArrowConfig = {
  name: 'HeaderArrow',
  tag: 'div',
  layout: headerArrowRoot,
  base: _HeaderArrow.base,
  variations: {
    view: {
      css: _base2.base
    },
    size: {
      css: _base.base
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};