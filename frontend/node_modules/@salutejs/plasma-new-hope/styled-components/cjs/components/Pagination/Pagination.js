"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.paginationRoot = exports.paginationConfig = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _utils = /*#__PURE__*/require("../../utils");
var _Pagination = /*#__PURE__*/require("./Pagination.styles");
var _utils2 = /*#__PURE__*/require("./utils");
var _base = /*#__PURE__*/require("./variations/_view/base");
var _base2 = /*#__PURE__*/require("./variations/_type/base");
var _base3 = /*#__PURE__*/require("./variations/_size/base");
var _Pagination2 = /*#__PURE__*/require("./Pagination.tokens");
var _PaginationQuickJumpToPage = /*#__PURE__*/require("./ui/PaginationQuickJumpToPage/PaginationQuickJumpToPage");
var _PaginationSelectPerPage = /*#__PURE__*/require("./ui/PaginationSelectPerPage/PaginationSelectPerPage");
var _PaginationShorter;
var _excluded = ["value", "perPage", "slots", "view", "viewCurrentPage", "type", "size", "pilled", "square", "disabledPages", "count", "hasQuickJump", "hasPerPage", "perPageList", "isCommonButtonStyles", "placeholderQuickJump", "textQuickJump", "textPerPage", "leftContent", "rightContent", "onChangePageValue", "onChangePerPageValue"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var paginationRoot = exports.paginationRoot = function paginationRoot(Root) {
  return /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
    var _ref$value = _ref.value,
      value = _ref$value === void 0 ? _utils2.defaultValues.value : _ref$value,
      perPage = _ref.perPage,
      _ref$slots = _ref.slots,
      slots = _ref$slots === void 0 ? _utils2.defaultValues.slots : _ref$slots,
      view = _ref.view,
      viewCurrentPage = _ref.viewCurrentPage,
      _ref$type = _ref.type,
      type = _ref$type === void 0 ? _utils2.defaultValues.type : _ref$type,
      size = _ref.size,
      _ref$pilled = _ref.pilled,
      pilled = _ref$pilled === void 0 ? _utils2.defaultValues.pilled : _ref$pilled,
      _ref$square = _ref.square,
      square = _ref$square === void 0 ? _utils2.defaultValues.square : _ref$square,
      _ref$disabledPages = _ref.disabledPages,
      disabledPages = _ref$disabledPages === void 0 ? _utils2.defaultValues.disabledPages : _ref$disabledPages,
      _ref$count = _ref.count,
      count = _ref$count === void 0 ? _utils2.defaultValues.value : _ref$count,
      _ref$hasQuickJump = _ref.hasQuickJump,
      hasQuickJump = _ref$hasQuickJump === void 0 ? _utils2.defaultValues.hasQuickJump : _ref$hasQuickJump,
      _ref$hasPerPage = _ref.hasPerPage,
      hasPerPage = _ref$hasPerPage === void 0 ? _utils2.defaultValues.hasPerPage : _ref$hasPerPage,
      _ref$perPageList = _ref.perPageList,
      perPageList = _ref$perPageList === void 0 ? _utils2.defaultValues.perPageList : _ref$perPageList,
      _ref$isCommonButtonSt = _ref.isCommonButtonStyles,
      isCommonButtonStyles = _ref$isCommonButtonSt === void 0 ? _utils2.defaultValues.isCommonButtonStyles : _ref$isCommonButtonSt,
      _ref$placeholderQuick = _ref.placeholderQuickJump,
      placeholderQuickJump = _ref$placeholderQuick === void 0 ? _utils2.defaultValues.placeholderQuickJump : _ref$placeholderQuick,
      _ref$textQuickJump = _ref.textQuickJump,
      textQuickJump = _ref$textQuickJump === void 0 ? _utils2.defaultValues.textQuickJump : _ref$textQuickJump,
      _ref$textPerPage = _ref.textPerPage,
      textPerPage = _ref$textPerPage === void 0 ? _utils2.defaultValues.textPerPage : _ref$textPerPage,
      leftContent = _ref.leftContent,
      rightContent = _ref.rightContent,
      onChangePageValue = _ref.onChangePageValue,
      onChangePerPageValue = _ref.onChangePerPageValue,
      rest = _objectWithoutProperties(_ref, _excluded);
    var _useState = (0, _react.useState)(1),
      _useState2 = _slicedToArray(_useState, 2),
      page = _useState2[0],
      setPageValue = _useState2[1];
    var _useState3 = (0, _react.useState)(perPage),
      _useState4 = _slicedToArray(_useState3, 2),
      perPageValue = _useState4[0],
      setPerPageValue = _useState4[1];
    var _useState5 = (0, _react.useState)(value),
      _useState6 = _slicedToArray(_useState5, 2),
      pages = _useState6[0],
      setPagesValue = _useState6[1];
    var _useState7 = (0, _react.useState)(null),
      _useState8 = _slicedToArray(_useState7, 2),
      sections = _useState8[0],
      setSections = _useState8[1];
    var typeClass = _Pagination2.classes["".concat(type, "Type")];
    var roundedClass = pilled ? 'circle-circle' : 'square-square';
    var withHasPerPageSelect = hasPerPage ? _Pagination2.classes.withHasPerPageSelect : undefined;
    var withHasQuickJump = hasQuickJump ? _Pagination2.classes.withHasQuickJump : undefined;
    var disabled = disabledPages.map(function (el) {
      return (0, _utils.isNumber)(el) ? Number(el) : null;
    });
    var handlerSetPages = function handlerSetPages(newPerPage) {
      setPagesValue(Math.ceil(count / (newPerPage || (hasPerPage ? _utils2.defaultValues.perPage : 1))));
    };
    var handlerSetPage = function handlerSetPage(newPageValue) {
      var pageValue = newPageValue !== null && newPageValue !== void 0 ? newPageValue : _utils2.defaultValues.value;
      if (pageValue > pages) {
        pageValue = pages;
      }
      if (pageValue < 1) {
        pageValue = 1;
      }
      if (disabled.includes(pageValue)) {
        return;
      }
      setPageValue(pageValue);
      onChangePageValue === null || onChangePageValue === void 0 || onChangePageValue(pageValue);
    };
    var handlerSetPerPage = function handlerSetPerPage(newPerPageValue) {
      handlerSetPage(1);
      setPerPageValue(newPerPageValue);
      onChangePerPageValue === null || onChangePerPageValue === void 0 || onChangePerPageValue(newPerPageValue);
      handlerSetPages(newPerPageValue);
    };
    var isActiveButton = function isActiveButton(checkPage) {
      return page === checkPage ? _Pagination2.classes.paginationPageButtonActive : '';
    };
    (0, _react.useEffect)(function () {
      handlerSetPages(perPage);
    }, [perPage, count, handlerSetPages]);
    (0, _react.useEffect)(function () {
      handlerSetPage(value);
    }, [value]);
    (0, _react.useEffect)(function () {
      setSections((0, _utils2.getSections)(page, pages, slots));
    }, [page, slots, pages, setSections, _utils2.getSections]);
    return /*#__PURE__*/_react["default"].createElement(Root, _extends({
      size: size,
      view: view,
      viewCurrentPage: viewCurrentPage,
      className: (0, _utils.cx)(_Pagination2.classes.wrapper, typeClass),
      ref: ref
    }, rest), /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationRoot, {
      className: typeClass
    }, /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationPages, null, leftContent && /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationButtonGroup, {
      isCommonButtonStyles: isCommonButtonStyles
    }, leftContent), sections && sections.map(function (section, indexSection) {
      return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, indexSection !== 0 && (_PaginationShorter || (_PaginationShorter = /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationShorter, {
        stretching: "fixed",
        disabled: true
      }, "..."))), /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationSection, {
        key: indexSection
      }, section.map(function (pageValue) {
        return /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationButton, {
          square: square,
          pin: roundedClass,
          key: pageValue,
          onClick: function onClick() {
            return handlerSetPage(pageValue);
          },
          disabled: disabled.includes(pageValue),
          className: (0, _utils.cx)(_Pagination2.classes.paginationPageButton, isActiveButton(pageValue))
        }, pageValue);
      })));
    }), rightContent && /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationButtonGroup, {
      isCommonButtonStyles: isCommonButtonStyles
    }, rightContent)), /*#__PURE__*/_react["default"].createElement(_Pagination.PaginationActions, {
      className: (0, _utils.cx)(_Pagination2.classes.actions, typeClass, withHasPerPageSelect, withHasQuickJump)
    }, hasQuickJump && /*#__PURE__*/_react["default"].createElement(_PaginationQuickJumpToPage.PaginationQuickJumpToPage, {
      placeholderQuickJump: placeholderQuickJump,
      textQuickJump: textQuickJump,
      onChangeValue: handlerSetPage
    }), hasPerPage && /*#__PURE__*/_react["default"].createElement(_PaginationSelectPerPage.PaginationSelectPerPage, {
      textPerPage: textPerPage,
      value: perPageValue,
      valuesList: perPageList,
      onChangeValue: handlerSetPerPage
    }))));
  });
};
var paginationConfig = exports.paginationConfig = {
  name: 'Pagination',
  tag: 'div',
  layout: paginationRoot,
  base: '',
  variations: {
    view: {
      css: _base.base
    },
    size: {
      css: _base3.base
    },
    type: {
      css: _base2.base
    }
  },
  defaults: {
    view: 'clear',
    size: 'm'
  }
};