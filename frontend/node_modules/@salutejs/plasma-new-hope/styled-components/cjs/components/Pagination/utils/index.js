"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSections = exports.defaultValues = void 0;
var generateSection = function generateSection(length, add) {
  return Array.from(Array(length).keys()).map(function (el) {
    return el + add;
  });
};
var dType = 'default';
var dDlots = 9;
var sections = {
  7: [1, 3, 1],
  8: [1, 4, 1],
  9: [2, 3, 2],
  10: [2, 4, 2],
  11: [3, 3, 3],
  12: [3, 4, 3],
  13: [3, 5, 3],
  14: [3, 6, 3],
  15: [4, 5, 4]
};
var defaultValues = exports.defaultValues = {
  value: 1,
  perPage: 20,
  slots: dDlots,
  type: dType,
  pilled: false,
  square: false,
  disabledPages: [],
  hasQuickJump: true,
  hasPerPage: true,
  perPageList: [20, 50, 100, 200],
  isCommonButtonStyles: true,
  placeholderQuickJump: '#',
  textQuickJump: 'Go to',
  textPerPage: 'Show'
};
var getSections = exports.getSections = function getSections(value, pages, slots) {
  var _value, _pages, _slots;
  value = (_value = value) !== null && _value !== void 0 ? _value : 1;
  pages = (_pages = pages) !== null && _pages !== void 0 ? _pages : 1;
  slots = (_slots = slots) !== null && _slots !== void 0 ? _slots : defaultValues.slots;
  var pageArray = [generateSection(pages, 1)];
  if (slots >= pages || slots < 5) {
    return pageArray;
  }
  if (!sections[slots]) {
    return pageArray;
  }
  var smallSection = Math.min(Math.floor((slots - 1) / 2), 6);
  var bigSection = Math.min(Math.floor(slots / 2), 6);
  var defaultSection = sections[slots][1];
  var smallSectionLeft = sections[slots][0];
  var smallSectionRight = sections[slots][2];
  if (smallSection > value) {
    return [generateSection(bigSection, 1), generateSection(smallSection, pages - smallSection + 1)];
  }
  if (smallSection === value) {
    return [generateSection(bigSection + 1, 1), generateSection(smallSection - 1, pages - smallSection + 2)];
  }
  if (pages - smallSection + 1 < value) {
    return [generateSection(smallSection, 1), generateSection(bigSection, pages - bigSection + 1)];
  }
  if (pages - smallSection + 1 === value) {
    return [generateSection(smallSection - 1, 1), generateSection(bigSection + 1, pages - bigSection)];
  }
  return [generateSection(smallSectionLeft, 1), generateSection(defaultSection, value - Math.floor(defaultSection / 2)), generateSection(smallSectionRight, pages - smallSectionRight + 1)];
};