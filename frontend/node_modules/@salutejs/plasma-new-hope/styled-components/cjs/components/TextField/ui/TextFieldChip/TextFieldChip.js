"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextFieldChip = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _TextFieldChip = /*#__PURE__*/require("./TextFieldChip.styles");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
/**
 * Чип, отображающий выбранный элемент
 */
var TextFieldChip = exports.TextFieldChip = /*#__PURE__*/(0, _react.forwardRef)(function (_ref, ref) {
  var id = _ref.id,
    text = _ref.text,
    disabled = _ref.disabled,
    readOnly = _ref.readOnly,
    onClick = _ref.onClick,
    onClear = _ref.onClear,
    onKeyDown = _ref.onKeyDown;
  var onClearHandle = function onClearHandle() {
    return onClear(id);
  };
  var onKeyDownHandle = function onKeyDownHandle(event) {
    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event, id);
  };
  return /*#__PURE__*/_react["default"].createElement(_TextFieldChip.StyledChip, {
    ref: ref,
    tabIndex: -1,
    disabled: disabled,
    readOnly: readOnly,
    onClick: onClick,
    onClear: onClearHandle,
    onKeyDown: onKeyDownHandle,
    text: "".concat(text)
  });
});