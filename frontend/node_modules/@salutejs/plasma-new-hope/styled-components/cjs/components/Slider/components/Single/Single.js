"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SingleSlider = void 0;
var _react = /*#__PURE__*/_interopRequireWildcard( /*#__PURE__*/require("react"));
var _SliderBase = /*#__PURE__*/require("../SliderBase/SliderBase");
var _ui = /*#__PURE__*/require("../../ui");
var _utils = /*#__PURE__*/require("../../utils");
var _utils2 = /*#__PURE__*/require("../../../../utils");
var _Slider = /*#__PURE__*/require("../../Slider.tokens");
var _Single = /*#__PURE__*/require("./Single.styles");
var _excluded = ["min", "max", "value", "disabled", "onChangeCommitted", "onChange", "ariaLabel", "label", "labelContentLeft", "showRangeValues", "showCurrentValue", "hideMinValueDiff", "hideMaxValueDiff", "labelPlacement", "rangeValuesPlacement", "multipleStepSize", "size"];
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var SingleSlider = exports.SingleSlider = function SingleSlider(_ref) {
  var min = _ref.min,
    max = _ref.max,
    value = _ref.value,
    disabled = _ref.disabled,
    onChangeCommitted = _ref.onChangeCommitted,
    onChange = _ref.onChange,
    ariaLabel = _ref.ariaLabel,
    label = _ref.label,
    labelContentLeft = _ref.labelContentLeft,
    showRangeValues = _ref.showRangeValues,
    showCurrentValue = _ref.showCurrentValue,
    hideMinValueDiff = _ref.hideMinValueDiff,
    hideMaxValueDiff = _ref.hideMaxValueDiff,
    _ref$labelPlacement = _ref.labelPlacement,
    labelPlacement = _ref$labelPlacement === void 0 ? 'outer' : _ref$labelPlacement,
    _ref$rangeValuesPlace = _ref.rangeValuesPlacement,
    rangeValuesPlacement = _ref$rangeValuesPlace === void 0 ? 'outer' : _ref$rangeValuesPlace,
    _ref$multipleStepSize = _ref.multipleStepSize,
    multipleStepSize = _ref$multipleStepSize === void 0 ? 10 : _ref$multipleStepSize,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? 'm' : _ref$size,
    rest = _objectWithoutProperties(_ref, _excluded);
  var _useState = (0, _react.useState)({
      xHandle: 0,
      stepSize: 0,
      railFillWidth: 0
    }),
    _useState2 = _slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var _useState3 = (0, _react.useState)(0),
    _useState4 = _slicedToArray(_useState3, 2),
    startOffset = _useState4[0],
    setStartOffset = _useState4[1];
  var _useState5 = (0, _react.useState)(0),
    _useState6 = _slicedToArray(_useState5, 2),
    endOffset = _useState6[0],
    setEndOffset = _useState6[1];
  var _useState7 = (0, _react.useState)(value),
    _useState8 = _slicedToArray(_useState7, 2),
    dragValue = _useState8[0],
    setDragValue = _useState8[1];
  var stepSize = state.stepSize;
  var hasLabelContent = label || labelContentLeft;
  var labelPlacementClass = labelPlacement === 'outer' ? _Slider.classes.labelPlacementOuter : _Slider.classes.labelPlacementInner;
  var rangeValuesPlacementClass = rangeValuesPlacement === 'outer' ? _Slider.classes.rangeValuesPlacementOuter : _Slider.classes.rangeValuesPlacementInner;
  var hideMinValueDiffClass = hideMinValueDiff && value - min <= hideMinValueDiff ? _Slider.classes.hideMinValue : '';
  var hideMaxValueDiffClass = hideMaxValueDiff && max - value <= hideMaxValueDiff ? _Slider.classes.hideMaxValue : '';
  var startLabelRef = (0, _react.useRef)(null);
  var endLabelRef = (0, _react.useRef)(null);
  var activeFirstValue = dragValue === min ? _Slider.classes.activeRangeValue : undefined;
  var activeSecondValue = dragValue === max ? _Slider.classes.activeRangeValue : undefined;
  (0, _react.useEffect)(function () {
    var localValue = Math.min(Math.max(value, min), max) - min;
    if (rangeValuesPlacement === 'outer') {
      var _startLabelRef$curren, _endLabelRef$current;
      var startWidth = (_startLabelRef$curren = startLabelRef.current) === null || _startLabelRef$curren === void 0 ? void 0 : _startLabelRef$curren.offsetWidth;
      if ((0, _utils2.isNumber)(startWidth)) {
        setStartOffset(Number(startWidth));
      }
      var endWidth = (_endLabelRef$current = endLabelRef.current) === null || _endLabelRef$current === void 0 ? void 0 : _endLabelRef$current.offsetWidth;
      if ((0, _utils2.isNumber)(endWidth)) {
        setEndOffset(Number(endWidth));
      }
    } else {
      setStartOffset(1);
      setEndOffset(1);
    }
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        xHandle: stepSize * localValue,
        railFillWidth: stepSize * localValue
      });
    });
  }, [value, labelPlacement, stepSize, rangeValuesPlacement, min, max, setStartOffset, setEndOffset]);
  var setStepSize = (0, _react.useCallback)(function (newStepSize) {
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        stepSize: newStepSize
      });
    });
  }, [setState]);
  var onHandleChange = function onHandleChange(handleValue, data) {
    var newHandleXPosition = data.x;
    var newValue = Math.round(handleValue);
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        railFillWidth: newHandleXPosition
      });
    });
    if (onChange) {
      onChange(newValue);
    }
    setDragValue(newValue);
  };
  var onHandleChangeCommitted = function onHandleChangeCommitted(handleValue, data) {
    var newValue = Math.round(handleValue);
    if (onChangeCommitted) {
      onChangeCommitted(newValue);
    }
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        xHandle: data.lastX,
        railFillWidth: data.lastX
      });
    });
    setDragValue(newValue);
  };
  return /*#__PURE__*/_react["default"].createElement(_Single.SingleWrapper, {
    className: labelPlacementClass
  }, hasLabelContent && /*#__PURE__*/_react["default"].createElement(_Single.LabelWrapper, null, labelContentLeft && /*#__PURE__*/_react["default"].createElement(_Single.LabelContentLeft, null, labelContentLeft), label && /*#__PURE__*/_react["default"].createElement(_Single.Label, null, label)), /*#__PURE__*/_react["default"].createElement(_Single.SliderBaseWrapper, {
    className: rangeValuesPlacementClass
  }, showRangeValues && /*#__PURE__*/_react["default"].createElement(_Single.StyledRangeValue, {
    ref: startLabelRef,
    className: (0, _utils2.cx)(hideMinValueDiffClass, activeFirstValue)
  }, min), /*#__PURE__*/_react["default"].createElement(_SliderBase.SliderBase, _extends({
    min: min,
    max: max,
    disabled: disabled,
    setStepSize: setStepSize,
    onChange: onHandleChangeCommitted,
    railFillWidth: state.railFillWidth,
    settings: _utils.sizeData[size],
    labelPlacement: labelPlacement,
    rangeValuesPlacement: rangeValuesPlacement
  }, rest), /*#__PURE__*/_react["default"].createElement(_ui.Handler, {
    stepSize: state.stepSize,
    onChangeCommitted: onHandleChangeCommitted,
    onChange: onHandleChange,
    xPosition: state.xHandle,
    min: min,
    max: max,
    startOffset: startOffset,
    endOffset: endOffset,
    value: dragValue,
    disabled: disabled,
    ariaLabel: ariaLabel,
    multipleStepSize: multipleStepSize,
    showCurrentValue: showCurrentValue
  })), showRangeValues && /*#__PURE__*/_react["default"].createElement(_Single.StyledRangeValue, {
    ref: endLabelRef,
    className: (0, _utils2.cx)(_Slider.classes.maxRangeValue, hideMaxValueDiffClass, activeSecondValue)
  }, max)));
};