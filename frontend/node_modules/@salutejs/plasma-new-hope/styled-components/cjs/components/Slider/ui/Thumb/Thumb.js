"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Thumb = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _Thumb = /*#__PURE__*/require("./Thumb.styles");
var _excluded = ["min", "max", "value", "ariaValueMin", "ariaLabel", "disabled"];
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
var Thumb = exports.Thumb = function Thumb(_ref) {
  var min = _ref.min,
    max = _ref.max,
    value = _ref.value,
    _ref$ariaValueMin = _ref.ariaValueMin,
    ariaValueMin = _ref$ariaValueMin === void 0 ? min : _ref$ariaValueMin,
    ariaLabel = _ref.ariaLabel,
    disabled = _ref.disabled,
    rest = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/_react["default"].createElement(_Thumb.ThumbBase, _extends({
    role: "slider",
    "aria-label": ariaLabel,
    "aria-valuemin": ariaValueMin,
    "aria-valuemax": max,
    "aria-valuenow": value,
    disabled: disabled,
    "aria-orientation": "horizontal"
  }, rest));
};