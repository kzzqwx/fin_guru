"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.component = component;
exports.mergeConfig = exports.getStaticVariants = exports.getDynamicVariants = void 0;
var _react = /*#__PURE__*/_interopRequireDefault( /*#__PURE__*/require("react"));
var _styledComponents = /*#__PURE__*/require("./styled-components");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
//
// Тип HTMLAttributesOmitOnChange требуется чтобы использовать компонент с кастомным пропсом onChange
//

var getStaticVariants = exports.getStaticVariants = function getStaticVariants(config) {
  if (!config.variations) {
    return [];
  }
  var res = [];
  var variations = config.variations;

  // eslint-disable-next-line guard-for-in
  for (var key in variations) {
    var css = variations[key].css;
    css && res.push(css);
  }
  return res;
};
var getDynamicVariants = exports.getDynamicVariants = function getDynamicVariants(config) {
  return function (props) {
    var res = [];

    // eslint-disable-next-line guard-for-in
    for (var key in config.variations) {
      if (key in props) {
        var variant = config.variations[key];
        var css = variant[props[key]];
        // no css for { modifier: true }
        css && Array.isArray(css) ? res.push.apply(res, _toConsumableArray(css)) : res.push(css);
      }
    }
    return res;
  };
};
var mergeConfig = exports.mergeConfig = function mergeConfig(baseConfig, userConfig) {
  var res = _objectSpread(_objectSpread({}, baseConfig), userConfig);
  if (res.variations) {
    // copy variations base css
    // eslint-disable-next-line guard-for-in
    for (var key in res.variations) {
      var variant = baseConfig.variations[key];
      res.variations[key].css = variant === null || variant === void 0 ? void 0 : variant.css;
      /* start of bad decision */
      if (!res.variations[key]["true"] && variant !== null && variant !== void 0 && variant["true"]) {
        res.variations[key]["true"] = variant["true"];
      }
      /* end of bad decision */
      if (variant !== null && variant !== void 0 && variant.attrs) {
        res.variations[key].attrs = variant.attrs;
      }
    }
  }

  // eslint-disable-next-line guard-for-in
  for (var _key in baseConfig.defaults || {}) {
    if (!(_key in res.defaults)) {
      res.defaults[_key] = baseConfig.defaults[_key];
    }
  }
  return res;
};
function component(config) {
  var Comp = config.layout((0, _styledComponents._component)(config));
  return /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
    return /*#__PURE__*/_react["default"].createElement(Comp, _extends({}, config === null || config === void 0 ? void 0 : config.defaults, props, {
      ref: ref
    }));
  });
}