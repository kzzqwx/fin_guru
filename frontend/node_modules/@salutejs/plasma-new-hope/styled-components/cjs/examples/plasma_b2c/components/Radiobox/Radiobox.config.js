"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.config = void 0;
var _styledComponents = /*#__PURE__*/require("styled-components");
var _Radiobox = /*#__PURE__*/require("../../../../components/Radiobox");
var config = exports.config = {
  defaults: {
    view: 'accent',
    focused: 'true'
  },
  variations: {
    /**
     * Размер контрола.
     */
    size: {
      s: /*#__PURE__*/(0, _styledComponents.css)(["", ":0;", ":0;", ":1rem;", ":1.125rem;", ":0.5rem;", ":0;", ":0.5rem;", ":var(--plasma-typo-body-s-font-family);", ":var(--plasma-typo-body-s-font-size);", ":var(--plasma-typo-body-s-font-style);", ":var(--plasma-typo-body-s-font-weight);", ":var(--plasma-typo-body-s-letter-spacing);", ":var(--plasma-typo-body-s-line-height);", ":var(--plasma-typo-body-xs-font-family);", ":0.125rem;", ":var(--plasma-typo-body-xs-font-size);", ":var(--plasma-typo-body-xs-font-style);", ":var(--plasma-typo-body-xs-font-weight);", ":var(--plasma-typo-body-xs-letter-spacing);", ":var(--plasma-typo-body-xs-line-height);"], _Radiobox.radioboxTokens.margin, _Radiobox.radioboxTokens.triggerMargin, _Radiobox.radioboxTokens.triggerSize, _Radiobox.radioboxTokens.triggerBorderRadius, _Radiobox.radioboxTokens.ellipseSize, _Radiobox.radioboxTokens.contentTopOffset, _Radiobox.radioboxTokens.contentLeftOffset, _Radiobox.radioboxTokens.labelFontFamily, _Radiobox.radioboxTokens.labelFontSize, _Radiobox.radioboxTokens.labelFontStyle, _Radiobox.radioboxTokens.labelFontWeight, _Radiobox.radioboxTokens.labelLetterSpacing, _Radiobox.radioboxTokens.labelLineHeight, _Radiobox.radioboxTokens.descriptionFontFamily, _Radiobox.radioboxTokens.descriptionMarginTop, _Radiobox.radioboxTokens.descriptionFontSize, _Radiobox.radioboxTokens.descriptionFontStyle, _Radiobox.radioboxTokens.descriptionFontWeight, _Radiobox.radioboxTokens.descriptionLetterSpacing, _Radiobox.radioboxTokens.descriptionLineHeight),
      m: /*#__PURE__*/(0, _styledComponents.css)(["", ":0;", ":0.063rem;", ":1.375rem;", ":1.125rem;", ":0.625rem;", ":0.125rem;", ":0.625rem;", ":var(--plasma-typo-body-m-font-family);", ":var(--plasma-typo-body-m-font-size);", ":var(--plasma-typo-body-m-font-style);", ":var(--plasma-typo-body-m-font-weight);", ":var(--plasma-typo-body-m-letter-spacing);", ":var(--plasma-typo-body-m-line-height);", ":var(--plasma-typo-body-s-font-family);", ":0.125rem;", ":var(--plasma-typo-body-s-font-size);", ":var(--plasma-typo-body-s-font-style);", ":var(--plasma-typo-body-s-font-weight);", ":var(--plasma-typo-body-s-letter-spacing);", ":var(--plasma-typo-body-s-line-height);"], _Radiobox.radioboxTokens.margin, _Radiobox.radioboxTokens.triggerMargin, _Radiobox.radioboxTokens.triggerSize, _Radiobox.radioboxTokens.triggerBorderRadius, _Radiobox.radioboxTokens.ellipseSize, _Radiobox.radioboxTokens.contentTopOffset, _Radiobox.radioboxTokens.contentLeftOffset, _Radiobox.radioboxTokens.labelFontFamily, _Radiobox.radioboxTokens.labelFontSize, _Radiobox.radioboxTokens.labelFontStyle, _Radiobox.radioboxTokens.labelFontWeight, _Radiobox.radioboxTokens.labelLetterSpacing, _Radiobox.radioboxTokens.labelLineHeight, _Radiobox.radioboxTokens.descriptionFontFamily, _Radiobox.radioboxTokens.descriptionMarginTop, _Radiobox.radioboxTokens.descriptionFontSize, _Radiobox.radioboxTokens.descriptionFontStyle, _Radiobox.radioboxTokens.descriptionFontWeight, _Radiobox.radioboxTokens.descriptionLetterSpacing, _Radiobox.radioboxTokens.descriptionLineHeight)
    },
    /**
     * Вид контрола.
     */
    view: {
      "default": /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-primary);", ":var(--inverse-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      secondary: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-secondary);", ":var(--inverse-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      tertiary: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-tertiary);", ":var(--inverse-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      paragraph: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-paragraph);", ":var(--inverse-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      accent: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-accent);", ":var(--on-dark-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      positive: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-positive);", ":var(--on-dark-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      warning: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-warning);", ":var(--on-dark-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor),
      negative: /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-negative);", ":var(--on-dark-text-primary);", ":var(--text-secondary);", ":var(--text-secondary);"], _Radiobox.radioboxTokens.fillColor, _Radiobox.radioboxTokens.ellipseColor, _Radiobox.radioboxTokens.descriptionColor, _Radiobox.radioboxTokens.triggerBorderColor)
    },
    disabled: {
      "true": /*#__PURE__*/(0, _styledComponents.css)(["", ":0.4;"], _Radiobox.radioboxTokens.disabledOpacity)
    },
    focused: {
      "true": /*#__PURE__*/(0, _styledComponents.css)(["", ":var(--text-accent);"], _Radiobox.radioboxTokens.focusColor)
    }
  }
};