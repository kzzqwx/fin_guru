"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spacingFns = exports.spacing = exports.applySpacing = void 0;
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
var baseSpacing = {
  0: '0',
  2: '0.125rem',
  4: '0.25rem',
  8: '0.5rem',
  10: '0.625rem',
  12: '0.75rem',
  16: '1rem',
  18: '1.125rem',
  20: '1.25rem',
  24: '1.5rem',
  32: '2rem'
};
var spacing = exports.spacing = /*#__PURE__*/_objectSpread( /*#__PURE__*/_objectSpread({}, baseSpacing), {}, {
  '0x': baseSpacing[0],
  '1x': baseSpacing[2],
  '2x': baseSpacing[4],
  '4x': baseSpacing[8],
  '5x': baseSpacing[10],
  '6x': baseSpacing[12],
  '8x': baseSpacing[16],
  '9x': baseSpacing[18],
  '10x': baseSpacing[20],
  '12x': baseSpacing[24],
  '16x': baseSpacing[32]
});
var createSpacingFn = function createSpacingFn(params) {
  return function (value) {
    return params.reduce(function (acc, cur) {
      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur, spacing[value]));
    }, {});
  };
};
var m = /*#__PURE__*/createSpacingFn(['margin']);
var mt = /*#__PURE__*/createSpacingFn(['marginTop']);
var mr = /*#__PURE__*/createSpacingFn(['marginRight']);
var ml = /*#__PURE__*/createSpacingFn(['marginLeft']);
var mb = /*#__PURE__*/createSpacingFn(['marginBottom']);
var mx = /*#__PURE__*/createSpacingFn(['marginLeft', 'marginRight']);
var my = /*#__PURE__*/createSpacingFn(['marginTop', 'marginBottom']);
var p = /*#__PURE__*/createSpacingFn(['padding']);
var pt = /*#__PURE__*/createSpacingFn(['paddingTop']);
var pr = /*#__PURE__*/createSpacingFn(['paddingRight']);
var pl = /*#__PURE__*/createSpacingFn(['paddingLeft']);
var pb = /*#__PURE__*/createSpacingFn(['paddingBottom']);
var px = /*#__PURE__*/createSpacingFn(['paddingLeft', 'paddingRight']);
var py = /*#__PURE__*/createSpacingFn(['paddingTop', 'paddingBottom']);
var spacingFns = exports.spacingFns = {
  m: m,
  mt: mt,
  mr: mr,
  ml: ml,
  mb: mb,
  mx: mx,
  my: my,
  p: p,
  pt: pt,
  pr: pr,
  pl: pl,
  pb: pb,
  px: px,
  py: py
};
var spacingFnsList = /*#__PURE__*/Object.entries(spacingFns);
/**
 * Миксин для добавления пропсов стандартных отступов в компонент.
 */
var applySpacing = exports.applySpacing = function applySpacing(props) {
  return spacingFnsList.reduce(function (styles, _ref) {
    var _ref2 = _slicedToArray(_ref, 2),
      fnName = _ref2[0],
      fn = _ref2[1];
    if (fnName in props) {
      return _objectSpread(_objectSpread({}, styles), fn(props[fnName]));
    }
    return styles;
  }, {});
};