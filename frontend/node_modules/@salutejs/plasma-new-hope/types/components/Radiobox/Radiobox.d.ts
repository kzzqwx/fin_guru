import React from 'react';
import type { InputHTMLAttributes } from '../../types';
import type { Filter, RootProps } from '../../engines/types';
import { BaseboxProps } from '../Checkbox/Checkbox.types';
declare type RadioboxProps = Filter<InputHTMLAttributes<HTMLInputElement>, 'size'> & Omit<BaseboxProps, 'indeterminate'>;
export declare const radioboxRoot: (Root: RootProps<HTMLInputElement, RadioboxProps>) => React.ForwardRefExoticComponent<Filter<InputHTMLAttributes<HTMLInputElement>, "size"> & Omit<BaseboxProps, "indeterminate"> & React.RefAttributes<HTMLInputElement>>;
export declare const radioboxConfig: {
    name: string;
    tag: string;
    layout: (Root: RootProps<HTMLInputElement, RadioboxProps>) => React.ForwardRefExoticComponent<Filter<InputHTMLAttributes<HTMLInputElement>, "size"> & Omit<BaseboxProps, "indeterminate"> & React.RefAttributes<HTMLInputElement>>;
    base: import("@linaria/core").LinariaClassName;
    variations: {
        size: {
            css: import("@linaria/core").LinariaClassName;
        };
        view: {
            css: import("@linaria/core").LinariaClassName;
        };
        disabled: {
            css: import("@linaria/core").LinariaClassName;
        };
        focused: {
            css: import("@linaria/core").LinariaClassName;
        };
    };
    defaults: {
        size: string;
        view: string;
    };
};
export {};
//# sourceMappingURL=Radiobox.d.ts.map