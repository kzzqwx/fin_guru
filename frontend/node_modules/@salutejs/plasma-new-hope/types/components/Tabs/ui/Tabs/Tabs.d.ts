import React from 'react';
import type { RootProps } from '../../../../engines/types';
import type { TabsProps } from './Tabs.types';
export declare const tabsRoot: (Root: RootProps<HTMLDivElement, TabsProps>) => React.ForwardRefExoticComponent<import("../../../../types").AsProps<any> & React.HTMLAttributes<HTMLDivElement> & {
    disabled?: boolean | undefined;
    stretch?: boolean | undefined;
    pilled?: boolean | undefined;
    size?: string | undefined;
    view?: string | undefined;
    outsideScroll?: boolean | {
        left?: string | undefined;
        right?: string | undefined;
    } | undefined;
    index?: number | undefined;
} & React.RefAttributes<HTMLDivElement>>;
export declare const tabsConfig: {
    name: string;
    tag: string;
    layout: (Root: RootProps<HTMLDivElement, TabsProps>) => React.ForwardRefExoticComponent<import("../../../../types").AsProps<any> & React.HTMLAttributes<HTMLDivElement> & {
        disabled?: boolean | undefined;
        stretch?: boolean | undefined;
        pilled?: boolean | undefined;
        size?: string | undefined;
        view?: string | undefined;
        outsideScroll?: boolean | {
            left?: string | undefined;
            right?: string | undefined;
        } | undefined;
        index?: number | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    base: import("@linaria/core").LinariaClassName;
    variations: {
        size: {
            css: import("@linaria/core").LinariaClassName;
        };
        view: {
            css: import("@linaria/core").LinariaClassName;
        };
        disabled: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        stretch: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        pilled: {
            css: import("@linaria/core").LinariaClassName;
        };
    };
    defaults: {
        view: string;
        size: string;
    };
};
//# sourceMappingURL=Tabs.d.ts.map