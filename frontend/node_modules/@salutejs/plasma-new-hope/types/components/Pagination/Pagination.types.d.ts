import type { HTMLAttributes, ReactNode } from 'react';
import type { AsProps, NumericRange, CreateArrayWithLengthX } from '../../types';
export declare type PaginationTypes = 'compact' | 'default';
export declare type CustomPaginationProps = {
    view?: string;
    viewCurrentPage?: string;
    leftContent?: ReactNode;
    rightContent?: ReactNode;
    type?: PaginationTypes;
    size?: string;
    count?: number;
    value?: number;
    hasQuickJump?: boolean;
    hasPerPage?: boolean;
    perPage?: number;
    perPageList?: number[];
    disabledPages?: string[];
    slots?: NumericRange<CreateArrayWithLengthX<7>, 15>;
    pilled?: boolean;
    square?: boolean;
    isCommonButtonStyles?: boolean;
    placeholderQuickJump?: string;
    textQuickJump?: string;
    textPerPage?: string;
    onChangePageValue?: (page?: number) => void;
    onChangePerPageValue?: (perpage?: number) => void;
};
export interface PaginationProps extends HTMLAttributes<HTMLDivElement>, AsProps, CustomPaginationProps {
}
//# sourceMappingURL=Pagination.types.d.ts.map