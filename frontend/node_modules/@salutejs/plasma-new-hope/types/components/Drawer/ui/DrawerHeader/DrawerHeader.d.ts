/// <reference types="react" />
export declare const drawerHeaderRoot: (Root: import("../../../..").RootProps<HTMLDivElement, import("../../../Panel").PanelHeaderProps>) => import("react").ForwardRefExoticComponent<{
    hasClose?: boolean | undefined;
    closePlacement?: "left" | "right" | undefined;
    actions?: import("react").ReactNode;
    onClose?: (() => void) | undefined;
    view?: string | undefined;
} & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
export declare const drawerHeaderConfig: {
    name: string;
    layout: (Root: import("../../../..").RootProps<HTMLDivElement, import("../../../Panel").PanelHeaderProps>) => import("react").ForwardRefExoticComponent<{
        hasClose?: boolean | undefined;
        closePlacement?: "left" | "right" | undefined;
        actions?: import("react").ReactNode;
        onClose?: (() => void) | undefined;
        view?: string | undefined;
    } & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
    tag: string;
    base: string;
    variations: {
        view: {
            css: import("@linaria/core").LinariaClassName;
        };
    };
    defaults: {
        view: string;
    };
};
//# sourceMappingURL=DrawerHeader.d.ts.map