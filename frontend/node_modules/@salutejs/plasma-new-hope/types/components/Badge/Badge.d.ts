import React from 'react';
import type { RootProps } from '../../engines';
import type { BadgeProps } from './Badge.types';
export declare const badgeRoot: (Root: RootProps<HTMLDivElement, BadgeProps>) => React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & {
    text?: string | undefined;
    contentLeft?: React.ReactNode;
    contentRight?: React.ReactNode;
    pilled?: boolean | undefined;
    transparent?: boolean | undefined;
    size?: string | undefined;
    view?: string | undefined;
} & {
    children?: React.ReactNode;
} & React.RefAttributes<HTMLDivElement>>;
export declare const badgeConfig: {
    name: string;
    tag: string;
    layout: (Root: RootProps<HTMLDivElement, BadgeProps>) => React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & {
        text?: string | undefined;
        contentLeft?: React.ReactNode;
        contentRight?: React.ReactNode;
        pilled?: boolean | undefined;
        transparent?: boolean | undefined;
        size?: string | undefined;
        view?: string | undefined;
    } & {
        children?: React.ReactNode;
    } & React.RefAttributes<HTMLDivElement>>;
    base: import("@linaria/core").LinariaClassName;
    variations: {
        view: {
            css: import("@linaria/core").LinariaClassName;
        };
        size: {
            css: import("@linaria/core").LinariaClassName;
        };
        pilled: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        transparent: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
    };
    defaults: {
        view: string;
        size: string;
    };
};
//# sourceMappingURL=Badge.d.ts.map