import React from 'react';
import type { RootProps } from '../../../../engines/types';
import type { SegmentGroupProps } from './SegmentGroup.types';
export declare const segmentGroupRoot: (Root: RootProps<HTMLDivElement, SegmentGroupProps>) => React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & {
    selectionMode?: "multiple" | "single" | undefined;
    disabled?: boolean | undefined;
    stretch?: boolean | undefined;
    pilled?: boolean | undefined;
    filledBackground?: boolean | undefined;
    size?: string | undefined;
    view?: string | undefined;
} & React.RefAttributes<HTMLDivElement>>;
export declare const segmentGroupConfig: {
    name: string;
    tag: string;
    layout: (Root: RootProps<HTMLDivElement, SegmentGroupProps>) => React.ForwardRefExoticComponent<React.HTMLAttributes<HTMLDivElement> & {
        selectionMode?: "multiple" | "single" | undefined;
        disabled?: boolean | undefined;
        stretch?: boolean | undefined;
        pilled?: boolean | undefined;
        filledBackground?: boolean | undefined;
        size?: string | undefined;
        view?: string | undefined;
    } & React.RefAttributes<HTMLDivElement>>;
    base: import("@linaria/core").LinariaClassName;
    variations: {
        size: {
            css: import("@linaria/core").LinariaClassName;
        };
        view: {
            css: import("@linaria/core").LinariaClassName;
        };
        disabled: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        pilled: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        stretch: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
        filledBackground: {
            css: import("@linaria/core").LinariaClassName;
            attrs: boolean;
        };
    };
    defaults: {
        view: string;
        size: string;
    };
};
//# sourceMappingURL=SegmentGroup.d.ts.map