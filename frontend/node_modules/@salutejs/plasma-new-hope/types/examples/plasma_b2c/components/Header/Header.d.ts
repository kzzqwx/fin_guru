/// <reference types="react" />
export { HeaderContent, HeaderTitle } from '../../../../components/Header';
export declare const HeaderRoot: import("react").FunctionComponent<import("../../../../engines/types").PropsType<{
    view: {
        default: import("@linaria/core").LinariaClassName;
    };
    size: {
        m: import("@linaria/core").LinariaClassName;
    };
}> & import("react").HtmlHTMLAttributes<HTMLDivElement> & {
    size?: string | undefined;
    gradientColor?: string | undefined;
    view?: string | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const HeaderLogo: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & import("../../../../components/Header").HeaderLogoProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const HeaderArrow: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    arrow?: "back" | "minimize" | undefined;
    iconSize?: "m" | "s" | "xxs" | "xs" | "l" | "xl" | "xxl" | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const HeaderTitleWrapper: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & import("react").HTMLAttributes<HTMLDivElement> & {
    label?: string | undefined;
    title?: string | undefined;
    subTitle?: string | undefined;
    caption?: string | undefined;
    children?: import("react").ReactNode;
    withBigTitle?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Header.d.ts.map