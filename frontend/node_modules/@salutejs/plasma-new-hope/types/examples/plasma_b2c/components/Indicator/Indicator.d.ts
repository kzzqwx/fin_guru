/// <reference types="react" />
declare const mergedConfig: import("../../../../engines").ComponentConfig<string, {
    view: {
        default: import("@linaria/core").LinariaClassName;
        accent: import("@linaria/core").LinariaClassName;
        inactive: import("@linaria/core").LinariaClassName;
        positive: import("@linaria/core").LinariaClassName;
        warning: import("@linaria/core").LinariaClassName;
        negative: import("@linaria/core").LinariaClassName;
        black: import("@linaria/core").LinariaClassName;
        white: import("@linaria/core").LinariaClassName;
    };
    size: {
        l: import("@linaria/core").LinariaClassName;
        m: import("@linaria/core").LinariaClassName;
        s: import("@linaria/core").LinariaClassName;
    };
}, import("../../../../engines/types").PropsType<{
    view: {
        default: import("@linaria/core").LinariaClassName;
        accent: import("@linaria/core").LinariaClassName;
        inactive: import("@linaria/core").LinariaClassName;
        positive: import("@linaria/core").LinariaClassName;
        warning: import("@linaria/core").LinariaClassName;
        negative: import("@linaria/core").LinariaClassName;
        black: import("@linaria/core").LinariaClassName;
        white: import("@linaria/core").LinariaClassName;
    };
    size: {
        l: import("@linaria/core").LinariaClassName;
        m: import("@linaria/core").LinariaClassName;
        s: import("@linaria/core").LinariaClassName;
    };
}>, import("react").HTMLAttributes<HTMLDivElement> & {
    size: string;
    view: string;
} & import("react").RefAttributes<HTMLDivElement>>;
declare const Indicator: import("react").FunctionComponent<import("../../../../engines/types").PropsType<{
    view: {
        default: import("@linaria/core").LinariaClassName;
        accent: import("@linaria/core").LinariaClassName;
        inactive: import("@linaria/core").LinariaClassName;
        positive: import("@linaria/core").LinariaClassName;
        warning: import("@linaria/core").LinariaClassName;
        negative: import("@linaria/core").LinariaClassName;
        black: import("@linaria/core").LinariaClassName;
        white: import("@linaria/core").LinariaClassName;
    };
    size: {
        l: import("@linaria/core").LinariaClassName;
        m: import("@linaria/core").LinariaClassName;
        s: import("@linaria/core").LinariaClassName;
    };
}> & import("react").HTMLAttributes<HTMLDivElement> & {
    size: string;
    view: string;
} & import("react").RefAttributes<HTMLDivElement>>;
export { Indicator, mergedConfig };
//# sourceMappingURL=Indicator.d.ts.map