/// <reference types="react" />
export { useToast } from '../../../../components/Toast';
export declare const Toast: import("react").FunctionComponent<import("../../../../engines/types").PropsType<{
    view: {
        default: import("@linaria/core").LinariaClassName;
        dark: import("@linaria/core").LinariaClassName;
        light: import("@linaria/core").LinariaClassName;
    };
    size: {
        m: import("@linaria/core").LinariaClassName;
    };
    pilled: {
        true: import("@linaria/core").LinariaClassName;
    };
}> & import("react").HTMLAttributes<HTMLButtonElement> & import("../../../../components/Toast/Toast.types").CustomToastProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const ToastController: (props: import("../../../../components/Toast/Toast.types").ToastControllerProps) => JSX.Element | null;
export declare const ToastProvider: ({ children }: {
    children: import("react").ReactNode;
}) => JSX.Element;
//# sourceMappingURL=Toast.d.ts.map