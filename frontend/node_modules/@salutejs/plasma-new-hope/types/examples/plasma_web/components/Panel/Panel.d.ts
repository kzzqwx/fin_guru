/// <reference types="react" />
export declare const Panel: import("react").FunctionComponent<import("../../../../engines/types").PropsType<{
    view: {
        default: import("@linaria/core").LinariaClassName;
    };
    size: {
        m: import("@linaria/core").LinariaClassName;
    };
    borderRadius: {
        none: import("@linaria/core").LinariaClassName;
        default: import("@linaria/core").LinariaClassName;
    };
}> & import("../../../../components/Panel").PanelProps & import("react").RefAttributes<HTMLDivElement>>;
export declare const PanelContent: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & {
    view?: string | undefined;
} & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
export declare const PanelHeader: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & {
    hasClose?: boolean | undefined;
    closePlacement?: "left" | "right" | undefined;
    actions?: import("react").ReactNode;
    onClose?: (() => void) | undefined;
    view?: string | undefined;
} & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
export declare const PanelFooter: import("react").FunctionComponent<import("../../../../engines/types").PropsType<import("../../../../engines/types").Variants> & {
    view?: string | undefined;
} & import("react").HTMLAttributes<HTMLDivElement> & import("react").RefAttributes<HTMLDivElement>>;
//# sourceMappingURL=Panel.d.ts.map