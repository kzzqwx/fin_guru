import React from 'react';
import type { ComponentConfig, HTMLAnyAttributes, HTMLTagList, PropsType, Variants, HTMLAttributesOmitOnChange } from './types';
export declare const getStaticVariants: (config: ComponentConfig) => string[];
export declare const getDynamicVariants: (config: ComponentConfig) => (props: HTMLAnyAttributes) => any[];
export declare const mergeConfig: <Tag extends HTMLTagList, VariantList extends Variants, VariantsProps extends PropsType<VariantList>, LayoutPropsBase extends React.HTMLAttributes<HTMLElement> | HTMLAttributesOmitOnChange, LayoutPropsUser extends React.HTMLAttributes<HTMLElement> | HTMLAttributesOmitOnChange | undefined = undefined>(baseConfig: ComponentConfig<Tag, Variants, PropsType<Variants> & LayoutPropsBase, LayoutPropsBase>, userConfig?: Partial<ComponentConfig<Tag, VariantList, VariantsProps, LayoutPropsUser>> | undefined) => ComponentConfig<Tag, VariantList, PropsType<VariantList>, LayoutPropsUser extends undefined ? LayoutPropsBase : LayoutPropsUser>;
export declare function component<Tag extends HTMLTagList, VariantList extends Variants, VariantsProps extends PropsType<VariantList>, LayoutProps extends React.HTMLAttributes<HTMLElement> | HTMLAttributesOmitOnChange>(config: ComponentConfig<Tag, VariantList, VariantsProps, LayoutProps>): React.FunctionComponent<VariantsProps & LayoutProps>;
//# sourceMappingURL=common.d.ts.map