'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var applySpacing = require('../../mixins/applySpacing.js');
var index = require('../../utils/index.js');
var tokens = require('./tokens.js');

var _excluded = ["size", "children", "breakWord", "bold", "className", "style"];
var typographyRootCompose = function typographyRootCompose(defaultArgs) {
  return function (Root) {
    return /*#__PURE__*/React.forwardRef(function (props, ref) {
      var size = props.size,
        children = props.children,
        breakWord = props.breakWord,
        _props$bold = props.bold,
        bold = _props$bold === void 0 ? defaultArgs === null || defaultArgs === void 0 ? void 0 : defaultArgs.defaultBold : _props$bold,
        className = props.className,
        style = props.style,
        rest = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);
      var withBreakWord = breakWord ? tokens.classes.typoWithBreakWord : undefined;
      var typographyBold = bold ? tokens.classes.typoBold : undefined;
      return /*#__PURE__*/React.createElement(Root, _rollupPluginBabelHelpers.extends({
        size: size,
        ref: ref,
        className: index.cx(withBreakWord, typographyBold, className),
        style: _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, style), applySpacing.applySpacing(rest)),
        bold: bold
      }, rest), children);
    });
  };
};

exports.typographyRootCompose = typographyRootCompose;
//# sourceMappingURL=Typography.js.map
