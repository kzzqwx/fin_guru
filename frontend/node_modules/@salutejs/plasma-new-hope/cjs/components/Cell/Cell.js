'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var index = require('../../utils/index.js');
var Cell_styles = require('./Cell.styles.js');
var Cell_tokens = require('./Cell.tokens.js');
var base = require('./variations/_view/base.js');
var base$1 = require('./variations/_size/base.js');
var CellTextbox = require('./ui/CellTextbox/CellTextbox.js');

var cellRoot = function cellRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (_ref, outerRootRef) {
    var size = _ref.size,
      view = _ref.view,
      contentLeft = _ref.contentLeft,
      contentRight = _ref.contentRight,
      _ref$alignContentLeft = _ref.alignContentLeft,
      alignContentLeft = _ref$alignContentLeft === void 0 ? 'center' : _ref$alignContentLeft,
      _ref$alignContentRigh = _ref.alignContentRight,
      alignContentRight = _ref$alignContentRigh === void 0 ? 'center' : _ref$alignContentRigh,
      children = _ref.children,
      title = _ref.title,
      subtitle = _ref.subtitle,
      label = _ref.label,
      description = _ref.description,
      content = _ref.content,
      _ref$stretching = _ref.stretching,
      stretching = _ref$stretching === void 0 ? 'filled' : _ref$stretching;
    var stretchingClass = Cell_tokens.classes["".concat(stretching, "Stretching")];

    // Импорт  старых свойств
    var titleText = title || description;
    var contentLeftDeprecated = contentLeft || content;
    return /*#__PURE__*/React.createElement(Root, {
      ref: outerRootRef,
      size: size,
      view: view,
      className: index.cx(stretchingClass, Cell_tokens.classes.cellRoot)
    }, contentLeftDeprecated && /*#__PURE__*/React.createElement(Cell_styles.CellLeft, {
      align: alignContentLeft
    }, contentLeftDeprecated), /*#__PURE__*/React.createElement(Cell_styles.CellContentWrapper, null, /*#__PURE__*/React.createElement(Cell_styles.CellContent, null, titleText || subtitle || label ? /*#__PURE__*/React.createElement(CellTextbox.CellTextbox, {
      label: label,
      title: titleText,
      subtitle: subtitle
    }) : children), contentRight && /*#__PURE__*/React.createElement(Cell_styles.CellRight, {
      align: alignContentRight
    }, contentRight)));
  });
};
var cellConfig = {
  name: 'Cell',
  tag: 'div',
  layout: cellRoot,
  base: Cell_styles.base,
  variations: {
    view: {
      css: base.base
    },
    size: {
      css: base$1.base
    }
  },
  defaults: {
    view: 'default',
    size: 'm'
  }
};

exports.cellConfig = cellConfig;
exports.cellRoot = cellRoot;
//# sourceMappingURL=Cell.js.map
