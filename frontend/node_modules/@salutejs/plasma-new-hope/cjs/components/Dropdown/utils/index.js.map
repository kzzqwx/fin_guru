{"version":3,"file":"index.js","sources":["../../../../src/components/Dropdown/utils/index.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport React, { Children, HTMLAttributes, ElementType, cloneElement, isValidElement } from 'react';\n\nimport type { PopoverPlacementBasic } from '../../Popover';\nimport type { DropdownPlacement, DropdownPlacementBasic, DropdownProps } from '../Dropdown.types';\n\nexport const getPlacement = (placement: DropdownPlacement) => {\n    return `${placement}-start` as PopoverPlacementBasic;\n};\n\nexport const getPlacements = (placements?: DropdownPlacement | DropdownPlacementBasic[]) => {\n    if (!placements) {\n        return;\n    }\n    const isArray = Array.isArray(placements);\n\n    if (!isArray) {\n        return getPlacement(placements as DropdownPlacement);\n    }\n    return ((placements || []) as DropdownPlacementBasic[]).map((placement) => getPlacement(placement));\n};\n\nexport const getCorrectHeight = (listHeight: Required<DropdownProps>['listHeight']): string => {\n    if (Number.isNaN(Number(listHeight))) {\n        return listHeight.toString();\n    }\n    return `${listHeight}rem`;\n};\n\nexport const childrenWithProps = (children: ReactNode, additionalProps: HTMLAttributes<HTMLLIElement>) =>\n    Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n            return React.cloneElement(child, additionalProps);\n        }\n        return child;\n    });\n\nconst isReactObject = (element: any): element is ElementType => {\n    return typeof element === 'object' || typeof element === 'function';\n};\n\nexport const getValidComponent = (element: ElementType | ReactNode, props: object) => {\n    if (isValidElement(element)) {\n        return cloneElement(element, props);\n    }\n\n    if (isReactObject(element)) {\n        const Component = element;\n\n        return <Component {...props} />;\n    }\n\n    return element;\n};\n"],"names":["getPlacement","placement","concat","getPlacements","placements","isArray","Array","map","getCorrectHeight","listHeight","Number","isNaN","toString","childrenWithProps","children","additionalProps","Children","child","React","isValidElement","cloneElement","isReactObject","element","_typeof","getValidComponent","props","Component","createElement"],"mappings":";;;;;;;IAMaA,YAAY,GAAG,SAAfA,YAAYA,CAAIC,SAA4B,EAAK;EAC1D,OAAAC,EAAAA,CAAAA,MAAA,CAAUD,SAAS,EAAA,QAAA,CAAA,CAAA;AACvB,EAAC;IAEYE,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,UAAyD,EAAK;EACxF,IAAI,CAACA,UAAU,EAAE;AACb,IAAA,OAAA;AACJ,GAAA;AACA,EAAA,IAAMC,OAAO,GAAGC,KAAK,CAACD,OAAO,CAACD,UAAU,CAAC,CAAA;EAEzC,IAAI,CAACC,OAAO,EAAE;IACV,OAAOL,YAAY,CAACI,UAA+B,CAAC,CAAA;AACxD,GAAA;EACA,OAAO,CAAEA,UAAU,IAAI,EAAE,EAA+BG,GAAG,CAAC,UAACN,SAAS,EAAA;IAAA,OAAKD,YAAY,CAACC,SAAS,CAAC,CAAA;GAAC,CAAA,CAAA;AACvG,EAAC;IAEYO,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIC,UAAiD,EAAa;EAC3F,IAAIC,MAAM,CAACC,KAAK,CAACD,MAAM,CAACD,UAAU,CAAC,CAAC,EAAE;AAClC,IAAA,OAAOA,UAAU,CAACG,QAAQ,EAAE,CAAA;AAChC,GAAA;EACA,OAAAV,EAAAA,CAAAA,MAAA,CAAUO,UAAU,EAAA,KAAA,CAAA,CAAA;AACxB,EAAC;AAEM,IAAMI,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,QAAmB,EAAEC,eAA8C,EAAA;EAAA,OACjGC,cAAQ,CAACT,GAAG,CAACO,QAAQ,EAAE,UAACG,KAAK,EAAK;AAC9B,IAAA,kBAAIC,KAAK,CAACC,cAAc,CAACF,KAAK,CAAC,EAAE;AAC7B,MAAA,oBAAOC,KAAK,CAACE,YAAY,CAACH,KAAK,EAAEF,eAAe,CAAC,CAAA;AACrD,KAAA;AACA,IAAA,OAAOE,KAAK,CAAA;AAChB,GAAC,CAAC,CAAA;AAAA,EAAA;AAEN,IAAMI,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,OAAY,EAA6B;EAC5D,OAAOC,gCAAA,CAAOD,OAAO,CAAA,KAAK,QAAQ,IAAI,OAAOA,OAAO,KAAK,UAAU,CAAA;AACvE,CAAC,CAAA;AAEM,IAAME,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIF,OAAgC,EAAEG,KAAa,EAAK;AAClF,EAAA,kBAAIN,oBAAc,CAACG,OAAO,CAAC,EAAE;AACzB,IAAA,oBAAOF,kBAAY,CAACE,OAAO,EAAEG,KAAK,CAAC,CAAA;AACvC,GAAA;AAEA,EAAA,IAAIJ,aAAa,CAACC,OAAO,CAAC,EAAE;IACxB,IAAMI,SAAS,GAAGJ,OAAO,CAAA;AAEzB,IAAA,oBAAOJ,KAAA,CAAAS,aAAA,CAACD,SAAS,EAAKD,KAAQ,CAAC,CAAA;AACnC,GAAA;AAEA,EAAA,OAAOH,OAAO,CAAA;AAClB;;;;;;;;"}