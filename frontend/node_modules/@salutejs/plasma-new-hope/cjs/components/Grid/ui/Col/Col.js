'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index$1 = require('../../../../utils/index.js');
var index = require('../../utils/index.js');
var Grid_tokens = require('../../Grid.tokens.js');
var Col_styles = require('./Col.styles.js');

var _excluded = ["className", "style", "size", "offset"];

/**
 * Блок для размещения контента внутри себя.
 * По дефолту доступные пропсы для задания позиционирования:
 * smallM, mediumS, mediumM, largeS, largeM
 */
var Col = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var className = props.className,
    style = props.style,
    size = props.size,
    offset = props.offset,
    rest = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);
  var defaultTokens = {
    '--plasma_private-grid-col-default-size': size,
    '--plasma_private-grid-col-default-offset': offset
  };
  return /*#__PURE__*/React.createElement(Col_styles.StyledCol, _rollupPluginBabelHelpers.extends({
    ref: ref,
    style: _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, defaultTokens), index.getColTokens(rest)), style),
    className: index$1.cx(Grid_tokens.classes.col, className)
  }, rest));
});

exports.Col = Col;
//# sourceMappingURL=Col.js.map
