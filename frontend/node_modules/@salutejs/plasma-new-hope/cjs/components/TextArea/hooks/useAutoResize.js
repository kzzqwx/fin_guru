'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');

var ROOT_FONT_SIZE = 16;
var useAutoResize = function useAutoResize(active, ref, value, minHeight, maxHeight) {
  var isManualResize = React.useRef(false);
  var previousHeight = React.useRef();
  React.useEffect(function () {
    if (active && ref && ref.current && !isManualResize.current) {
      // проверка на пользовательский resize (вручную)
      var height = ref.current.clientHeight / ROOT_FONT_SIZE;
      if (previousHeight.current !== undefined && previousHeight.current !== height) {
        isManualResize.current = true;
        return;
      }
      ref.current.style.height = "".concat(minHeight ? minHeight + 1 : '0', "rem");
      var scrollHeight = ref.current.scrollHeight / ROOT_FONT_SIZE;
      var newHeight = Math.min(scrollHeight, maxHeight ? maxHeight + 1 : scrollHeight);
      ref.current.style.height = "".concat(newHeight, "rem");
      previousHeight.current = newHeight;
    }
  }, [ref, active, value]);
};

exports.ROOT_FONT_SIZE = ROOT_FONT_SIZE;
exports.useAutoResize = useAutoResize;
//# sourceMappingURL=useAutoResize.js.map
