'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index = require('../../utils/index.js');
var IconCross = require('../_Icon/Icons/IconCross.js');
var Toast_tokens = require('./Toast.tokens.js');
var base = require('./variations/_view/base.js');
var base$1 = require('./variations/_size/base.js');
var base$2 = require('./variations/_pilled/base.js');
var Toast_styles = require('./Toast.styles.js');

var _IconCross;
var _excluded = ["role", "width", "text", "hasClose", "contentLeft", "view", "size", "pilled", "className", "style", "onCloseButtonClick"];

// TODO https://github.com/salute-developers/plasma/issues/1015
var toastRoot = function toastRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (props, ref) {
    var _props$role = props.role,
      role = _props$role === void 0 ? 'status' : _props$role,
      width = props.width,
      text = props.text,
      hasClose = props.hasClose,
      contentLeft = props.contentLeft,
      view = props.view,
      size = props.size,
      pilled = props.pilled,
      className = props.className,
      style = props.style,
      onCloseButtonClick = props.onCloseButtonClick,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);
    var pilledClass = pilled ? Toast_tokens.classes.toastPilled : undefined;
    var fixedWidth = !Number.isNaN(Number(width)) ? "".concat(width, "%") : width;
    var ariaLive = 'polite';
    var ariaAtomic = false;
    if (role === 'alert') {
      ariaLive = 'assertive';
    } else if (role === 'status') {
      ariaAtomic = true;
    }
    return /*#__PURE__*/React.createElement(Root, _rollupPluginBabelHelpers.extends({
      view: view,
      size: size,
      pilled: pilled,
      className: index.cx(pilledClass, className),
      style: _rollupPluginBabelHelpers.objectSpread2({
        width: width ? fixedWidth : 'unset'
      }, style),
      ref: ref,
      role: role,
      "aria-live": ariaLive,
      "aria-atomic": ariaAtomic
    }, rest), contentLeft && /*#__PURE__*/React.createElement(Toast_styles.StyledContentLeft, null, contentLeft), /*#__PURE__*/React.createElement(Toast_styles.StyledContent, null, text), hasClose && /*#__PURE__*/React.createElement(Toast_styles.CloseIconWrapper, {
      view: "clear",
      size: "s",
      onClick: onCloseButtonClick,
      className: index.cx(Toast_tokens.classes.closeIcon),
      stretching: "fixed"
    }, _IconCross || (_IconCross = /*#__PURE__*/React.createElement(IconCross.IconCross, {
      size: "s",
      color: "inherit"
    }))));
  });
};
var toastConfig = {
  name: 'Toast',
  tag: 'div',
  layout: toastRoot,
  base: Toast_styles.base,
  variations: {
    view: {
      css: base.base
    },
    size: {
      css: base$1.base
    },
    pilled: {
      css: base$2.base,
      attrs: true
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};

exports.toastConfig = toastConfig;
exports.toastRoot = toastRoot;
//# sourceMappingURL=Toast.js.map
