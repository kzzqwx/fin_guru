'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');

var POPUP_PORTAL_ID = 'plasma-popup-root';
var items = [];
var PopupContext = /*#__PURE__*/React.createContext({
  items: items,
  register: function register(_info) {
    throw new Error('Function not implemented. Add PopupProvider');
  },
  unregister: function unregister(_id) {
    throw new Error('Function not implemented. Add PopupProvider');
  }
});
var usePopupContext = function usePopupContext() {
  return React.useContext(PopupContext);
};
var PopupProvider = function PopupProvider(_ref) {
  var children = _ref.children;
  var _useState = React.useState([]),
    _useState2 = _rollupPluginBabelHelpers.slicedToArray(_useState, 2),
    items = _useState2[0],
    setItems = _useState2[1];
  var register = function register(info) {
    setItems([].concat(_rollupPluginBabelHelpers.toConsumableArray(items), [info]));
  };
  var unregister = function unregister(id) {
    var index = items.findIndex(function (item) {
      return id === item.id;
    });
    if (index === -1) {
      return;
    }
    items.splice(index, 1);
    setItems(_rollupPluginBabelHelpers.toConsumableArray(items));
  };
  var context = {
    items: items,
    register: register,
    unregister: unregister
  };
  React.useEffect(function () {
    return function () {
      var portal = document.createElement('div');
      if (portal && document.body.contains(portal)) {
        document.body.removeChild(portal);
      }
    };
  }, []);
  return /*#__PURE__*/React.createElement(PopupContext.Provider, {
    value: context
  }, children);
};

exports.POPUP_PORTAL_ID = POPUP_PORTAL_ID;
exports.PopupProvider = PopupProvider;
exports.usePopupContext = usePopupContext;
//# sourceMappingURL=PopupContext.js.map
