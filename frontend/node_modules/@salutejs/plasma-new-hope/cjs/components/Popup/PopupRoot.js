'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var plasmaCore = require('@salutejs/plasma-core');
var PopupContext = require('./PopupContext.js');
var Popup_styles = require('./Popup.styles.js');
var Popup_tokens = require('./Popup.tokens.js');

var _excluded = ["id", "placement", "offset", "frame", "setVisible", "children", "role", "zIndex", "animationInfo", "className"];

/**
 * Корень Popup.
 * Управляет показом/скрытием и анимацией всплывающего окна.
 */
var PopupRoot = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var id = _ref.id,
    placement = _ref.placement,
    offset = _ref.offset,
    frame = _ref.frame,
    setVisible = _ref.setVisible,
    children = _ref.children,
    role = _ref.role,
    zIndex = _ref.zIndex,
    animationInfo = _ref.animationInfo,
    rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);
  var contentRef = React.useRef(null);
  var innerRef = plasmaCore.useForkRef(contentRef, ref);
  var popupController = PopupContext.usePopupContext();
  var handleAnimationEnd = React.useCallback(function (e) {
    if (!contentRef || e.target !== contentRef.current) {
      return;
    }
    e.stopPropagation();
    if (animationInfo !== null && animationInfo !== void 0 && animationInfo.endAnimation) {
      popupController.unregister(id);
      setVisible(false);
      animationInfo.setEndAnimation(false);
    }
  }, [popupController.unregister, animationInfo === null || animationInfo === void 0 ? void 0 : animationInfo.endAnimation, setVisible]);
  return /*#__PURE__*/React.createElement(Popup_styles.PopupRootContainer, _rollupPluginBabelHelpers.extends({
    className: Popup_tokens.classes.root,
    ref: innerRef,
    placement: placement,
    frame: frame,
    offset: offset,
    zIndex: zIndex,
    onAnimationEnd: handleAnimationEnd,
    onTransitionEnd: handleAnimationEnd
  }, rest), /*#__PURE__*/React.createElement(Popup_styles.PopupView, {
    role: role
  }, children));
});

exports.PopupRoot = PopupRoot;
//# sourceMappingURL=PopupRoot.js.map
