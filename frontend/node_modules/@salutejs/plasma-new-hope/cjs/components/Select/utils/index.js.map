{"version":3,"file":"index.js","sources":["../../../../src/components/Select/utils/index.ts"],"sourcesContent":["import { Children, MouseEvent, ReactElement, ReactNode, cloneElement, isValidElement } from 'react';\n\nimport { SelectPrimitiveValue, ValueType, SelectValue } from '../Select.types';\nimport { SelectItemProps } from '../ui/SelectItem/SelectItem.type';\n\ntype NewSelectedFunc = {\n    (selected?: undefined | null, newValue?: undefined | null, type?: undefined | null): undefined;\n    (selected?: SelectPrimitiveValue, newValue?: SelectPrimitiveValue, type?: ValueType): SelectPrimitiveValue;\n    (selected?: Array<SelectPrimitiveValue>, newValue?: SelectPrimitiveValue, type?: ValueType): Array<\n        SelectPrimitiveValue\n    >;\n};\n\nexport const getNewSelected: NewSelectedFunc = (selected: any, newValue: any, type: any) => {\n    if (newValue === undefined || newValue === null) {\n        return newValue;\n    }\n\n    if (\n        (type === 'single' || type === 'native') &&\n        (typeof newValue === 'string' || typeof newValue === 'number' || typeof newValue === 'boolean')\n    ) {\n        return newValue;\n    }\n\n    const newSelected = selected || [];\n\n    const set = new Set(newSelected);\n\n    if (set.has(newValue)) {\n        set.delete(newValue);\n    } else {\n        set.add(newValue);\n    }\n\n    return Array.from(set);\n};\n\nconst getChildrenInnerText = (children: ReactElement): string => {\n    if (!children || typeof children === 'string') {\n        return children;\n    }\n\n    return getChildrenInnerText(children.props.children);\n};\n\nexport const getValues = (items: ReactElement[], value?: SelectValue, result: Array<Array<string>> = []) => {\n    items.forEach((item) => {\n        if (item.props === undefined) {\n            return result;\n        }\n\n        const { value: newValue } = item.props;\n\n        if (item.props.children && Array.isArray(item.props.children)) {\n            return getValues(item.props.children, value, result);\n        }\n\n        if (\n            (!Array.isArray(value) && newValue === value) ||\n            (Array.isArray(value) && value?.find((v) => newValue === v))\n        ) {\n            const index = (Array.isArray(value) && value?.findIndex((v) => newValue === v)) || 0;\n\n            if (item.props.text) {\n                const { text: newText } = item.props;\n                result[index] = [newValue, newText];\n\n                return;\n            }\n\n            const newText = getChildrenInnerText(item.props.children);\n            result[index] = [newValue, newText];\n        }\n\n        return result;\n    });\n\n    return result;\n};\n\nconst getChildrenItemChecked = (value?: SelectValue, child?: ReactElement<SelectItemProps>) =>\n    (!Array.isArray(value) && child?.props.value === value) ||\n    (Array.isArray(value) && Boolean(value?.find((v) => child?.props.value === v)));\n\n// INFO: Функция для рекурсивного обновления пропсов\nexport const updatePropsRecursively = (\n    children?: ReactElement<SelectItemProps>[],\n    externalProps?: Record<string, any>,\n    value?: SelectValue,\n    search?: string,\n    filterFunction?: (childText: string, filterValue?: string) => boolean,\n): ReactNode[] =>\n    Children.map(children || [], (child) => {\n        if (!isValidElement(child)) {\n            return child;\n        }\n\n        const hasValue = 'value' in child?.props;\n\n        const props = {\n            key: `${value}$`,\n            checked: getChildrenItemChecked(value, child),\n            ...(hasValue && {\n                ref: (element: HTMLDivElement) => {\n                    if (externalProps?.childrenRefs?.current && element) {\n                        externalProps.childrenRefs.current.push(element);\n                    }\n                },\n                onClick: (event: MouseEvent<HTMLDivElement>) => {\n                    child.props.onClick?.(event);\n                    externalProps?.onClick?.(event);\n                },\n            }),\n        };\n\n        const updatedChild = updatePropsRecursively(\n            child.props.children as ReactElement<SelectItemProps>[],\n            externalProps,\n            value,\n            search,\n            filterFunction,\n        );\n\n        if (filterFunction) {\n            const text = child.props?.text || '';\n\n            return filterFunction(text, search) ? cloneElement(child, props, updatedChild) : null;\n        }\n\n        return cloneElement(child, props, updatedChild);\n    });\n\nconst defaultFilterFunction = (text: string, filterValue = '') => text.includes(filterValue);\n\nexport const getChildren = (\n    children: ReactElement<SelectItemProps>[],\n    externalProps: Record<string, any>,\n    value?: SelectValue,\n    search?: string,\n    filterFunction = defaultFilterFunction,\n) => {\n    if (externalProps.childrenRefs) {\n        externalProps.childrenRefs.current = [];\n    }\n\n    return updatePropsRecursively(children, externalProps, value, search, filterFunction);\n};\n"],"names":["getNewSelected","selected","newValue","type","undefined","newSelected","set","Set","has","add","Array","from","getChildrenInnerText","children","props","getValues","items","value","result","arguments","length","forEach","item","isArray","find","v","index","findIndex","text","newText","getChildrenItemChecked","child","Boolean","updatePropsRecursively","externalProps","search","filterFunction","Children","map","isValidElement","hasValue","_objectSpread","key","concat","checked","ref","element","_externalProps$childr","childrenRefs","current","push","onClick","event","_child$props$onClick","_child$props","_externalProps$onClic","call","updatedChild","_child$props2","cloneElement","defaultFilterFunction","filterValue","includes","getChildren"],"mappings":"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"}