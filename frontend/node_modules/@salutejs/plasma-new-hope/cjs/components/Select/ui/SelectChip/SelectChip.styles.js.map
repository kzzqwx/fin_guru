{"version":3,"file":"SelectChip.styles.js","sources":["../../../../../src/components/Select/ui/SelectChip/SelectChip.styles.ts"],"sourcesContent":["import { styled } from '@linaria/react';\n\nimport { chipConfig, chipTokens } from '../../../Chip';\nimport { component, mergeConfig } from '../../../../engines';\nimport { tokens } from '../../Select.tokens';\nimport { addFocus } from '../../../../mixins';\n\n// issue #823\nconst mergedConfig = mergeConfig(chipConfig);\nconst Chip = component(mergedConfig);\n\n// NOTE: Необходимое переопределение токенов из компонента Chip т.к. используются его части\nexport const StyledChip = styled(Chip)`\n    ${chipTokens.color}: var(${tokens.chipColor});\n    ${chipTokens.background}: var(${tokens.chipBackground});\n    ${chipTokens.colorHover}: var(${tokens.chipColorHover});\n    ${chipTokens.backgroundHover}: var(${tokens.chipBackgroundHover});\n    ${chipTokens.colorActive}: var(${tokens.chipColorActive});\n    ${chipTokens.backgroundActive}: var(${tokens.chipBackgroundActive});\n    ${chipTokens.backgroundReadOnly}: var(${tokens.chipBackgroundReadOnly});\n    ${chipTokens.colorReadOnly}: var(${tokens.chipColorReadOnly});\n    ${chipTokens.backgroundReadOnlyHover}: var(${tokens.chipBackgroundReadOnlyHover});\n    ${chipTokens.colorReadOnlyHover}: var(${tokens.chipColorReadOnlyHover});\n    ${chipTokens.borderRadius}: var(${tokens.chipBorderRadius});\n    ${chipTokens.width}: var(${tokens.chipWidth});\n    ${chipTokens.height}: var(${tokens.chipHeight});\n    ${chipTokens.paddingRight}: var(${tokens.chipPaddingRight});\n    ${chipTokens.paddingLeft}: var(${tokens.chipPaddingLeft});\n    ${chipTokens.fontFamily}: var(${tokens.chipFontFamily});\n    ${chipTokens.fontSize}: var(${tokens.chipFontSize});\n    ${chipTokens.fontStyle}: var(${tokens.chipFontStyle});\n    ${chipTokens.fontWeight}: var(${tokens.chipFontWeight});\n    ${chipTokens.letterSpacing}: var(${tokens.chipLetterSpacing});\n    ${chipTokens.lineHeight}: var(${tokens.chipLineHeight});\n    ${chipTokens.clearContentMarginLeft}: var(${tokens.chipClearContentMarginLeft});\n    ${chipTokens.clearContentMarginRight}: var(${tokens.chipClearContentMarginRight});\n    ${chipTokens.scaleHover}: var(${tokens.chipScaleHover});\n    ${chipTokens.scaleActive}: var(${tokens.chipScaleActive});\n    ${chipTokens.closeIconSize}: var(${tokens.chipCloseIconSize});\n    ${chipTokens.closeIconColor}: var(${tokens.chipCloseIconColor});\n    ${chipTokens.focusColor}: var(${tokens.focusColor});\n\n    ${addFocus({\n        outlineOffset: '0.125rem',\n        outlineSize: '0.0625rem',\n        outlineRadius: `calc(var(${tokens.chipBorderRadius}) - 0.1rem)`,\n        outlineColor: `var(${tokens.focusColor})`,\n    })}\n\n    &[readonly] {\n        opacity: var(${tokens.chipOpacityReadonly});\n    }\n`;\n"],"names":["mergedConfig","mergeConfig","chipConfig","Chip","component","_exp","StyledChip","styled","name","class","propsAsIs"],"mappings":";;;;;;;;;AAOA;AACA,IAAMA,YAAY,gBAAGC,kBAAW,CAACC,iBAAU,CAAC,CAAA;AAC5C,IAAMC,IAAI,gBAAGC,gBAAS,CAACJ,YAAY,CAAC,CAAA;;AAEpC;AAAA,IAAAK,IAAA,GAVkBA,SAUlBA,IAAAA,GAAA;AAAA,EAAA,OACiCF,IAAI,CAAA;AAAA,CAAA,CAAA;AAA9B,IAAMG,UAAU,gBAAGC,YAAM,CAAAF,IAAA,EAAA,CAAA,CAAA;AAAAG,EAAAA,IAAA,EAAA,YAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,IAAA;AAAA,CAwC/B;;;;"}