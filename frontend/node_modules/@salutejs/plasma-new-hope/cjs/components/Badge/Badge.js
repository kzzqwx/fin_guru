'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index = require('../../utils/index.js');
var base = require('./variations/_view/base.js');
var base$1 = require('./variations/_size/base.js');
var base$2 = require('./variations/_pilled/base.js');
var base$3 = require('./variations/_transparent/base.js');
var Badge_styles = require('./Badge.styles.js');
var Badge_tokens = require('./Badge.tokens.js');

var _excluded = ["children", "className", "text", "contentLeft", "contentRight", "size", "view", "pilled", "transparent"];
var badgeRoot = function badgeRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (props, ref) {
    var children = props.children,
      className = props.className,
      text = props.text,
      contentLeft = props.contentLeft,
      contentRight = props.contentRight,
      size = props.size,
      view = props.view,
      _props$pilled = props.pilled,
      pilled = _props$pilled === void 0 ? false : _props$pilled,
      _props$transparent = props.transparent,
      transparent = _props$transparent === void 0 ? false : _props$transparent,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);
    var pilledClass = pilled ? Badge_tokens.classes.badgePilled : undefined;
    var transparentClass = transparent ? Badge_tokens.classes.badgeTransparent : undefined;
    var txt = !text && typeof children === 'string' ? children : text;
    return /*#__PURE__*/React.createElement(Root, _rollupPluginBabelHelpers.extends({
      ref: ref,
      className: index.cx(pilledClass, transparentClass, className),
      view: view,
      size: size,
      pilled: pilled,
      transparent: transparent
    }, rest), contentLeft && /*#__PURE__*/React.createElement(Badge_styles.StyledContentLeft, null, contentLeft), txt ? /*#__PURE__*/React.createElement(Badge_styles.StyledContentMain, null, txt) : children, contentRight && /*#__PURE__*/React.createElement(Badge_styles.StyledContentRight, null, contentRight));
  });
};
var badgeConfig = {
  name: 'Badge',
  tag: 'div',
  layout: badgeRoot,
  base: Badge_styles.base,
  variations: {
    view: {
      css: base.base
    },
    size: {
      css: base$1.base
    },
    pilled: {
      css: base$2.base,
      attrs: true
    },
    transparent: {
      css: base$3.base,
      attrs: true
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};

exports.badgeConfig = badgeConfig;
exports.badgeRoot = badgeRoot;
//# sourceMappingURL=Badge.js.map
