'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index = require('../../utils/index.js');
var base = require('./variations/_view/base.js');
var base$1 = require('./variations/_size/base.js');
var base$2 = require('./variations/_orientation/base.js');
var Divider_tokens = require('./Divider.tokens.js');
var getSizeValueFromProp = require('../../utils/getSizeValueFromProp.js');

var _excluded = ["view", "className", "style", "orientation", "length"];
var dividerRoot = function dividerRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (_ref, ref) {
    var view = _ref.view,
      className = _ref.className,
      style = _ref.style,
      _ref$orientation = _ref.orientation,
      orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,
      _ref$length = _ref.length,
      length = _ref$length === void 0 ? '100%' : _ref$length,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);
    var orientationClass = Divider_tokens.classes[orientation];
    var scaleToken = {
      '--plasma_private-divider-scale': getSizeValueFromProp.getSizeValueFromProp(length, '%')
    };
    return /*#__PURE__*/React.createElement(Root, _rollupPluginBabelHelpers.extends({
      ref: ref,
      className: index.cx(orientationClass, Divider_tokens.classes.divider, className),
      orientation: orientation,
      view: view,
      style: _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, style), scaleToken)
    }, rest));
  });
};
var dividerConfig = {
  name: 'Divider',
  tag: 'div',
  layout: dividerRoot,
  base: '',
  variations: {
    view: {
      css: base.base
    },
    size: {
      css: base$1.base
    },
    orientation: {
      css: base$2.base
    }
  },
  defaults: {
    view: 'default',
    size: 'm',
    orientation: 'horizontal'
  }
};

exports.dividerConfig = dividerConfig;
exports.dividerRoot = dividerRoot;
//# sourceMappingURL=Divider.js.map
