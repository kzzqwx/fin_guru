{"version":3,"file":"Notification.js","sources":["../../../src/components/Notification/Notification.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\n\nimport { RootProps } from '../../engines';\nimport { cx } from '../../utils';\nimport { IconCross } from '../_Icon/Icons/IconCross';\n\nimport { classes } from './Notification.tokens';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as layoutCSS } from './variations/_layout/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { NotificationLayout, NotificationProps, layouts } from './Notification.types';\nimport {\n    ButtonsWrapper,\n    CloseIconWrapper,\n    ContentBox,\n    IconWrapper,\n    StyledContent,\n    StyledNotification,\n    StyledTitle,\n    TextBox,\n    Wrapper,\n} from './Notification.styles';\nimport { getLayoutClass } from './utils';\n\n/**\n * Компонент для небольших уведомлений пользователя\n */\nexport const notificationRoot = (Root: RootProps<HTMLDivElement, NotificationProps>) =>\n    forwardRef<HTMLDivElement, NotificationProps>((props, ref) => {\n        const {\n            role = 'status',\n            title,\n            children: content,\n            actions,\n            view,\n            size,\n            iconPlacement,\n            showCloseIcon = true,\n            layout = layouts.vertical as NotificationLayout,\n            icon,\n            onCloseButtonClick,\n            ...rest\n        } = props;\n\n        let ariaLive: 'assertive' | 'polite' = 'polite';\n        let ariaAtomic = false;\n\n        if (role === 'alert') {\n            ariaLive = 'assertive';\n        } else if (role === 'status') {\n            ariaAtomic = true;\n        }\n\n        const isOneLine = !content || !title;\n        const oneLineClass = isOneLine ? classes.oneLine : undefined;\n        const withoutIconClass = icon ? undefined : classes.withoutIcon;\n        const withoutCloseIconClass = showCloseIcon ? undefined : classes.withoutCloseIcon;\n\n        const IconPlacementInternal = useMemo(() => (icon ? iconPlacement : undefined), [icon, iconPlacement]);\n\n        return (\n            <Root\n                view={view}\n                size={size}\n                layout={layout}\n                ref={ref}\n                role={role}\n                aria-live={ariaLive}\n                aria-atomic={ariaAtomic}\n                {...rest}\n            >\n                <Wrapper className={cx(classes.wrapper, getLayoutClass(layout), oneLineClass, withoutCloseIconClass)}>\n                    <ContentBox\n                        iconPlacement={IconPlacementInternal}\n                        className={cx(classes.contentBox, getLayoutClass(layout), withoutIconClass)}\n                    >\n                        {icon && (\n                            <IconWrapper\n                                iconPlacement={IconPlacementInternal}\n                                className={cx(classes.icon, getLayoutClass(layout))}\n                            >\n                                {icon}\n                            </IconWrapper>\n                        )}\n                        <TextBox\n                            iconPlacement={IconPlacementInternal}\n                            showCloseIcon={showCloseIcon}\n                            className={cx(classes.textbox, getLayoutClass(layout))}\n                        >\n                            {title && <StyledTitle className={classes.title}>{title}</StyledTitle>}\n                            {content && <StyledContent className={classes.text}>{content}</StyledContent>}\n                        </TextBox>\n                    </ContentBox>\n                    {actions && (\n                        <ButtonsWrapper\n                            iconPlacement={IconPlacementInternal}\n                            className={cx(classes.buttonsWrapper, getLayoutClass(layout))}\n                        >\n                            {actions}\n                        </ButtonsWrapper>\n                    )}\n\n                    {showCloseIcon && (\n                        <CloseIconWrapper\n                            view=\"clear\"\n                            size=\"s\"\n                            onClick={onCloseButtonClick}\n                            className={cx(classes.closeIcon, getLayoutClass(layout))}\n                        >\n                            <IconCross size=\"s\" color=\"inherit\" />\n                        </CloseIconWrapper>\n                    )}\n                </Wrapper>\n            </Root>\n        );\n    });\n\nexport const noticationConfig = {\n    name: 'Notification',\n    tag: 'div',\n    layout: notificationRoot,\n    base: StyledNotification,\n    variations: {\n        layout: {\n            css: layoutCSS,\n        },\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n    },\n    defaults: {\n        view: 'default',\n        layout: layouts.vertical,\n        size: 'xs',\n    },\n};\n"],"names":["notificationRoot","Root","forwardRef","props","ref","_props$role","role","title","content","children","actions","view","size","iconPlacement","_props$showCloseIcon","showCloseIcon","_props$layout","layout","layouts","vertical","icon","onCloseButtonClick","rest","_objectWithoutProperties","_excluded","ariaLive","ariaAtomic","isOneLine","oneLineClass","classes","oneLine","undefined","withoutIconClass","withoutIcon","withoutCloseIconClass","withoutCloseIcon","IconPlacementInternal","useMemo","React","createElement","_extends","Wrapper","className","cx","wrapper","getLayoutClass","ContentBox","contentBox","IconWrapper","TextBox","textbox","StyledTitle","StyledContent","text","ButtonsWrapper","buttonsWrapper","CloseIconWrapper","onClick","closeIcon","_IconCross","IconCross","color","noticationConfig","name","tag","base","StyledNotification","variations","css","layoutCSS","viewCSS","sizeCSS","defaults"],"mappings":"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"}