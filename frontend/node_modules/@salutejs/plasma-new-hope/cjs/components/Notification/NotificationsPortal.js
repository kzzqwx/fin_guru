'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var react = require('storeon/react');
var PopupContext = require('../Popup/PopupContext.js');
var Popup$1 = require('../Popup/Popup.js');
require('@linaria/core');
var common = require('../../engines/common.js');
var index = require('../../utils/index.js');
var NotificationsStore = require('./NotificationsStore.js');
var Notification_styles = require('./Notification.styles.js');
var Notification_tokens = require('./Notification.tokens.js');

var _excluded = ["id", "isHidden"];

// issue #823
var Popup = /*#__PURE__*/common.component(Popup$1.popupConfig);

/**
 * Обертка для визуального представления уведомлений.
 */
var NotificationsPortal = function NotificationsPortal(_ref) {
  var config = _ref.config,
    frame = _ref.frame;
  var _useStoreon = react.useStoreon('notifications'),
    notifications = _useStoreon.notifications;
  var Notification = React.useMemo(function () {
    return common.component(config);
  }, []);
  return /*#__PURE__*/React.createElement(PopupContext.PopupProvider, null, notifications.length > 0 && /*#__PURE__*/React.createElement(Popup, {
    isOpen: true,
    frame: frame,
    placement: "bottom-right",
    zIndex: "9100"
  }, /*#__PURE__*/React.createElement(Notification_styles.StyledRoot, null, notifications.map(function (_ref2) {
    var id = _ref2.id,
      isHidden = _ref2.isHidden,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref2, _excluded);
    return /*#__PURE__*/React.createElement(Notification_styles.StyledItemWrapper, {
      key: id,
      className: index.cx(isHidden ? Notification_tokens.classes.notificationItemHidden : Notification_tokens.classes.notificationItemOpened),
      isHidden: isHidden || false
    }, /*#__PURE__*/React.createElement(Notification, _rollupPluginBabelHelpers.extends({
      key: id,
      id: id,
      onCloseButtonClick: function onCloseButtonClick() {
        return NotificationsStore.closeNotification(id);
      }
    }, rest)));
  }))));
};

exports.NotificationsPortal = NotificationsPortal;
//# sourceMappingURL=NotificationsPortal.js.map
