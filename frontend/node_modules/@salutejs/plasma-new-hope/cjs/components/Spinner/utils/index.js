'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../../_virtual/_rollupPluginBabelHelpers.js');

var sizeFormatting = function sizeFormatting(size) {
  var deviceScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var scalingPixelBasis = 16;
  if (typeof size === 'number' || !size.endsWith('rem') && !size.endsWith('px')) {
    return "".concat(Number(size) / (scalingPixelBasis * deviceScale), "rem");
  }
  return size;
};

// TODO: удалить после обновления API компонента
var getFallbackProps = function getFallbackProps(props, initialInnerProps) {
  var size = props.size;
  var color = props.color || initialInnerProps.color;
  if (typeof size === 'number' || size && !Number.isNaN(parseInt(size, 10))) {
    var wrapperSize = sizeFormatting(size);
    return {
      wrapperWidth: wrapperSize,
      wrapperHeight: wrapperSize,
      svgWidth: size,
      svgHeight: size,
      color: color
    };
  }
  return _rollupPluginBabelHelpers.objectSpread2(_rollupPluginBabelHelpers.objectSpread2({}, initialInnerProps), {}, {
    color: color
  });
};

exports.getFallbackProps = getFallbackProps;
exports.sizeFormatting = sizeFormatting;
//# sourceMappingURL=index.js.map
