'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var plasmaCore = require('@salutejs/plasma-core');
require('@linaria/core');
var common = require('../../engines/common.js');
var PopupContext = require('../Popup/PopupContext.js');
var Popup$1 = require('../Popup/Popup.js');
var Overlay = require('../Overlay/Overlay.js');
var index = require('../Popup/utils/index.js');
var Modal_tokens = require('./Modal.tokens.js');
var useModal = require('./hooks/useModal.js');
var base = require('./variations/_view/base.js');
var ModalContext = require('./ModalContext.js');

var _excluded = ["id", "withAnimation", "onClose", "onOverlayClick", "onEscKeyDown", "closeOnEsc", "closeOnOverlayClick", "withBlur", "initialFocusRef", "focusAfterRef", "zIndex", "popupInfo", "children", "view", "isOpen"];

// issue #823
var Popup = /*#__PURE__*/common.component(Popup$1.popupConfig);

/**
 * Modal.
 * Управляет показом/скрытием, подложкой и анимацией визуальной части модального окна.
 */
var modalRoot = function modalRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (_ref, outerRootRef) {
    var id = _ref.id,
      withAnimation = _ref.withAnimation,
      onClose = _ref.onClose,
      onOverlayClick = _ref.onOverlayClick,
      onEscKeyDown = _ref.onEscKeyDown,
      _ref$closeOnEsc = _ref.closeOnEsc,
      closeOnEsc = _ref$closeOnEsc === void 0 ? true : _ref$closeOnEsc,
      _ref$closeOnOverlayCl = _ref.closeOnOverlayClick,
      closeOnOverlayClick = _ref$closeOnOverlayCl === void 0 ? true : _ref$closeOnOverlayCl,
      withBlur = _ref.withBlur,
      initialFocusRef = _ref.initialFocusRef,
      focusAfterRef = _ref.focusAfterRef,
      zIndex = _ref.zIndex,
      popupInfo = _ref.popupInfo,
      children = _ref.children,
      view = _ref.view,
      isOpen = _ref.isOpen,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);
    var trapRef = plasmaCore.useFocusTrap(true, initialFocusRef, focusAfterRef);
    var popupController = PopupContext.usePopupContext();
    var innerRef = plasmaCore.useForkRef(trapRef, outerRootRef);
    var uniqId = plasmaCore.safeUseId();
    var innerId = id || uniqId;
    var overlayBackgroundToken = withBlur ? "var(".concat(Modal_tokens.tokens.modalOverlayWithBlurColor, ")") : "var(".concat(Modal_tokens.tokens.modalOverlayColor, ")");
    var _useModal = useModal.useModal({
        id: innerId,
        isOpen: isOpen,
        closeOnEsc: closeOnEsc,
        onEscKeyDown: onEscKeyDown,
        onClose: onClose,
        popupInfo: popupInfo
      }),
      modalInfo = _useModal.modalInfo;
    var transparent = React.useMemo(function () {
      return ModalContext.getIdLastModal(popupController.items) !== innerId;
    }, [innerId, popupController.items]);
    var onModalOverlayKeyDown = React.useCallback(function (event) {
      if (onOverlayClick) {
        onOverlayClick(event);
        return;
      }
      if (onClose) {
        onClose();
      }
    }, [closeOnOverlayClick, onOverlayClick, onClose]);
    return /*#__PURE__*/React.createElement(Popup, _rollupPluginBabelHelpers.extends({
      id: innerId,
      isOpen: isOpen,
      ref: innerRef,
      popupInfo: modalInfo,
      withAnimation: withAnimation,
      zIndex: zIndex,
      overlay: /*#__PURE__*/React.createElement(Root, {
        view: view
      }, /*#__PURE__*/React.createElement(Overlay.Overlay, {
        className: Modal_tokens.classes.overlay,
        zIndex: zIndex || index.DEFAULT_Z_INDEX,
        backgroundColorProperty: overlayBackgroundToken,
        withBlur: withBlur,
        transparent: transparent,
        isClickable: closeOnOverlayClick,
        onOverlayClick: onModalOverlayKeyDown
      }))
    }, rest), children);
  });
};
var modalConfig = {
  name: 'Modal',
  tag: 'div',
  layout: modalRoot,
  base: '',
  variations: {
    view: {
      css: base.base
    }
  },
  defaults: {
    view: 'default'
  }
};

exports.modalConfig = modalConfig;
exports.modalRoot = modalRoot;
//# sourceMappingURL=Modal.js.map
