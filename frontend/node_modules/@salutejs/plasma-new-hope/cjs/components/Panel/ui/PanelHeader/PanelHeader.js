'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index = require('../../../../utils/index.js');
require('@linaria/react');
var IconClose = require('../../../_Icon/Icons/IconClose.js');
var Panel_tokens = require('../../Panel.tokens.js');
var PanelHeader_types = require('./PanelHeader.types.js');
var PanelHeader_styles = require('./PanelHeader.styles.js');
var base = require('./variations/_view/base.js');

var _IconClose;
var _excluded = ["children", "actions", "view", "className", "onClose", "hasClose", "closePlacement"];
var panelHeaderRoot = function panelHeaderRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (_ref, outerRef) {
    var children = _ref.children,
      actions = _ref.actions,
      view = _ref.view,
      className = _ref.className,
      onClose = _ref.onClose,
      _ref$hasClose = _ref.hasClose,
      hasClose = _ref$hasClose === void 0 ? 'true' : _ref$hasClose,
      _ref$closePlacement = _ref.closePlacement,
      closePlacement = _ref$closePlacement === void 0 ? 'right' : _ref$closePlacement,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(_ref, _excluded);
    var hasHeaderClass = children ? undefined : Panel_tokens.classes.hasHeader;
    var isRightCloseClass = closePlacement === PanelHeader_types.placements.right ? Panel_tokens.classes.isRightClose : undefined;
    return /*#__PURE__*/React.createElement(Root, _rollupPluginBabelHelpers.extends({
      ref: outerRef,
      view: view,
      className: index.cx(className, hasHeaderClass, isRightCloseClass)
    }, rest), children && /*#__PURE__*/React.createElement(PanelHeader_styles.StyledHeader, null, children), actions && /*#__PURE__*/React.createElement(PanelHeader_styles.ButtonWrapper, null, actions), hasClose && /*#__PURE__*/React.createElement(PanelHeader_styles.ButtonWrapper, {
      placement: closePlacement
    }, /*#__PURE__*/React.createElement(PanelHeader_styles.CloseIconWrapper, {
      view: "clear",
      size: "s",
      onClick: onClose
    }, _IconClose || (_IconClose = /*#__PURE__*/React.createElement(IconClose.IconClose, {
      size: "s",
      color: "inherit"
    })))));
  });
};
var panelHeaderConfig = {
  name: 'PanelHeader',
  tag: 'div',
  layout: panelHeaderRoot,
  base: '',
  variations: {
    view: {
      css: base.base
    }
  },
  defaults: {
    view: 'default'
  }
};

exports.panelHeaderConfig = panelHeaderConfig;
exports.panelHeaderRoot = panelHeaderRoot;
//# sourceMappingURL=PanelHeader.js.map
