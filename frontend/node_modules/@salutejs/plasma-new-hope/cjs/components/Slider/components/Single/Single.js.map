{"version":3,"file":"Single.js","sources":["../../../../../src/components/Slider/components/Single/Single.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport type { FC } from 'react';\n\nimport { SliderBase } from '../SliderBase/SliderBase';\nimport { Handler } from '../../ui';\nimport { sizeData } from '../../utils';\nimport type { HandlerProps } from '../../ui';\nimport { cx, isNumber } from '../../../../utils';\nimport { classes } from '../../Slider.tokens';\n\nimport type { SingleSliderProps } from './Single.types';\nimport {\n    Label,\n    LabelContentLeft,\n    LabelWrapper,\n    SingleWrapper,\n    SliderBaseWrapper,\n    StyledRangeValue,\n} from './Single.styles';\n\nexport const SingleSlider: FC<SingleSliderProps> = ({\n    min,\n    max,\n    value,\n    disabled,\n    onChangeCommitted,\n    onChange,\n    ariaLabel,\n    label,\n    labelContentLeft,\n    showRangeValues,\n    showCurrentValue,\n    hideMinValueDiff,\n    hideMaxValueDiff,\n    labelPlacement = 'outer',\n    rangeValuesPlacement = 'outer',\n    multipleStepSize = 10,\n    size = 'm',\n    ...rest\n}) => {\n    const [state, setState] = useState({\n        xHandle: 0,\n        stepSize: 0,\n        railFillWidth: 0,\n    });\n\n    const [startOffset, setStartOffset] = useState(0);\n    const [endOffset, setEndOffset] = useState(0);\n\n    const [dragValue, setDragValue] = useState(value);\n\n    const { stepSize } = state;\n\n    const hasLabelContent = label || labelContentLeft;\n    const labelPlacementClass = labelPlacement === 'outer' ? classes.labelPlacementOuter : classes.labelPlacementInner;\n    const rangeValuesPlacementClass =\n        rangeValuesPlacement === 'outer' ? classes.rangeValuesPlacementOuter : classes.rangeValuesPlacementInner;\n    const hideMinValueDiffClass = hideMinValueDiff && value - min <= hideMinValueDiff ? classes.hideMinValue : '';\n    const hideMaxValueDiffClass = hideMaxValueDiff && max - value <= hideMaxValueDiff ? classes.hideMaxValue : '';\n\n    const startLabelRef = useRef<HTMLDivElement>(null);\n    const endLabelRef = useRef<HTMLDivElement>(null);\n\n    const activeFirstValue = dragValue === min ? classes.activeRangeValue : undefined;\n    const activeSecondValue = dragValue === max ? classes.activeRangeValue : undefined;\n\n    useEffect(() => {\n        const localValue = Math.min(Math.max(value, min), max) - min;\n\n        if (rangeValuesPlacement === 'outer') {\n            const startWidth = startLabelRef.current?.offsetWidth;\n            if (isNumber(startWidth)) {\n                setStartOffset(Number(startWidth));\n            }\n\n            const endWidth = endLabelRef.current?.offsetWidth;\n            if (isNumber(endWidth)) {\n                setEndOffset(Number(endWidth));\n            }\n        } else {\n            setStartOffset(1);\n            setEndOffset(1);\n        }\n\n        setState((prevState) => ({\n            ...prevState,\n            xHandle: stepSize * localValue,\n            railFillWidth: stepSize * localValue,\n        }));\n    }, [value, labelPlacement, stepSize, rangeValuesPlacement, min, max, setStartOffset, setEndOffset]);\n\n    const setStepSize = useCallback(\n        (newStepSize: number) => {\n            setState((prevState) => ({\n                ...prevState,\n                stepSize: newStepSize,\n            }));\n        },\n        [setState],\n    );\n\n    const onHandleChange: NonNullable<HandlerProps['onChange']> = (handleValue, data) => {\n        const newHandleXPosition = data.x;\n        const newValue = Math.round(handleValue);\n\n        setState((prevState) => ({\n            ...prevState,\n            railFillWidth: newHandleXPosition,\n        }));\n\n        if (onChange) {\n            onChange(newValue);\n        }\n\n        setDragValue(newValue);\n    };\n\n    const onHandleChangeCommitted: NonNullable<HandlerProps['onChangeCommitted']> = (handleValue, data) => {\n        const newValue = Math.round(handleValue);\n\n        if (onChangeCommitted) {\n            onChangeCommitted(newValue);\n        }\n\n        setState((prevState) => ({\n            ...prevState,\n            xHandle: data.lastX,\n            railFillWidth: data.lastX,\n        }));\n\n        setDragValue(newValue);\n    };\n\n    return (\n        <SingleWrapper className={labelPlacementClass}>\n            {hasLabelContent && (\n                <LabelWrapper>\n                    {labelContentLeft && <LabelContentLeft>{labelContentLeft}</LabelContentLeft>}\n                    {label && <Label>{label}</Label>}\n                </LabelWrapper>\n            )}\n            <SliderBaseWrapper className={rangeValuesPlacementClass}>\n                {showRangeValues && (\n                    <StyledRangeValue ref={startLabelRef} className={cx(hideMinValueDiffClass, activeFirstValue)}>\n                        {min}\n                    </StyledRangeValue>\n                )}\n                <SliderBase\n                    min={min}\n                    max={max}\n                    disabled={disabled}\n                    setStepSize={setStepSize}\n                    onChange={onHandleChangeCommitted}\n                    railFillWidth={state.railFillWidth}\n                    settings={sizeData[size]}\n                    labelPlacement={labelPlacement}\n                    rangeValuesPlacement={rangeValuesPlacement}\n                    {...rest}\n                >\n                    <Handler\n                        stepSize={state.stepSize}\n                        onChangeCommitted={onHandleChangeCommitted}\n                        onChange={onHandleChange}\n                        xPosition={state.xHandle}\n                        min={min}\n                        max={max}\n                        startOffset={startOffset}\n                        endOffset={endOffset}\n                        value={dragValue}\n                        disabled={disabled}\n                        ariaLabel={ariaLabel}\n                        multipleStepSize={multipleStepSize}\n                        showCurrentValue={showCurrentValue}\n                    />\n                </SliderBase>\n                {showRangeValues && (\n                    <StyledRangeValue\n                        ref={endLabelRef}\n                        className={cx(classes.maxRangeValue, hideMaxValueDiffClass, activeSecondValue)}\n                    >\n                        {max}\n                    </StyledRangeValue>\n                )}\n            </SliderBaseWrapper>\n        </SingleWrapper>\n    );\n};\n"],"names":["SingleSlider","_ref","min","max","value","disabled","onChangeCommitted","onChange","ariaLabel","label","labelContentLeft","showRangeValues","showCurrentValue","hideMinValueDiff","hideMaxValueDiff","_ref$labelPlacement","labelPlacement","_ref$rangeValuesPlace","rangeValuesPlacement","_ref$multipleStepSize","multipleStepSize","_ref$size","size","rest","_objectWithoutProperties","_excluded","_useState","useState","xHandle","stepSize","railFillWidth","_useState2","_slicedToArray","state","setState","_useState3","_useState4","startOffset","setStartOffset","_useState5","_useState6","endOffset","setEndOffset","_useState7","_useState8","dragValue","setDragValue","hasLabelContent","labelPlacementClass","classes","labelPlacementOuter","labelPlacementInner","rangeValuesPlacementClass","rangeValuesPlacementOuter","rangeValuesPlacementInner","hideMinValueDiffClass","hideMinValue","hideMaxValueDiffClass","hideMaxValue","startLabelRef","useRef","endLabelRef","activeFirstValue","activeRangeValue","undefined","activeSecondValue","useEffect","localValue","Math","_startLabelRef$curren","_endLabelRef$current","startWidth","current","offsetWidth","isNumber","Number","endWidth","prevState","_objectSpread","setStepSize","useCallback","newStepSize","onHandleChange","handleValue","data","newHandleXPosition","x","newValue","round","onHandleChangeCommitted","lastX","React","createElement","SingleWrapper","className","LabelWrapper","LabelContentLeft","Label","SliderBaseWrapper","StyledRangeValue","ref","cx","SliderBase","_extends","settings","sizeData","Handler","xPosition","maxRangeValue"],"mappings":"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"}