{"version":3,"file":"HeaderTitleWrapper.js","sources":["../../../../../src/components/Header/ui/HeaderTitleWrapper/HeaderTitleWrapper.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { HTMLAttributes } from 'react';\n\nimport type { RootProps } from '../../../../engines';\n\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as viewCSS } from './variations/_view/base';\nimport type { HeaderTitleWrapperProps } from './HeaderTitleWrapper.types';\nimport { BigTitle, Caption, Label, SubTitle, TextBoxRoot, Title } from './HeaderTitleWrapper.styles';\n\n/**\n * Компонент для отображения текста в скомпанованном блоке.\n */\nexport const headerTitleWrapperRoot = (Root: RootProps<HTMLDivElement, HTMLAttributes<HTMLDivElement>>) =>\n    forwardRef<HTMLDivElement, HeaderTitleWrapperProps>((props, outerRootRef) => {\n        const { label, title, subTitle, caption, withBigTitle, children, ...rest } = props;\n\n        if (children) {\n            return (\n                <Root ref={outerRootRef}>\n                    <TextBoxRoot {...rest}>{children}</TextBoxRoot>\n                </Root>\n            );\n        }\n\n        const T = withBigTitle ? BigTitle : Title;\n\n        return (\n            <Root ref={outerRootRef}>\n                <TextBoxRoot {...rest}>\n                    {label && <Label>{label}</Label>}\n                    {title && <T>{title}</T>}\n                    {subTitle && <SubTitle>{subTitle}</SubTitle>}\n                    {caption && <Caption>{caption}</Caption>}\n                </TextBoxRoot>\n            </Root>\n        );\n    });\n\nexport const headerTitleWrapperConfig = {\n    name: 'HeaderTitleWrapper',\n    tag: 'div',\n    layout: headerTitleWrapperRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n    },\n    defaults: {\n        view: 'primary',\n        size: 'm',\n    },\n};\n"],"names":["headerTitleWrapperRoot","Root","forwardRef","props","outerRootRef","label","title","subTitle","caption","withBigTitle","children","rest","_objectWithoutProperties","_excluded","React","createElement","ref","TextBoxRoot","T","BigTitle","Title","Label","SubTitle","Caption","headerTitleWrapperConfig","name","tag","layout","base","variations","view","css","viewCSS","size","sizeCSS","defaults"],"mappings":";;;;;;;;;;;;AAUA;AACA;AACA;IACaA,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,IAA+D,EAAA;AAAA,EAAA,oBAClGC,gBAAU,CAA0C,UAACC,KAAK,EAAEC,YAAY,EAAK;AACzE,IAAA,IAAQC,KAAK,GAAgEF,KAAK,CAA1EE,KAAK;MAAEC,KAAK,GAAyDH,KAAK,CAAnEG,KAAK;MAAEC,QAAQ,GAA+CJ,KAAK,CAA5DI,QAAQ;MAAEC,OAAO,GAAsCL,KAAK,CAAlDK,OAAO;MAAEC,YAAY,GAAwBN,KAAK,CAAzCM,YAAY;MAAEC,QAAQ,GAAcP,KAAK,CAA3BO,QAAQ;AAAKC,MAAAA,IAAI,GAAAC,iDAAA,CAAKT,KAAK,EAAAU,SAAA,CAAA,CAAA;AAElF,IAAA,IAAIH,QAAQ,EAAE;AACV,MAAA,oBACII,KAAA,CAAAC,aAAA,CAACd,IAAI,EAAA;AAACe,QAAAA,GAAG,EAAEZ,YAAAA;OACPU,eAAAA,KAAA,CAAAC,aAAA,CAACE,qCAAW,EAAKN,IAAI,EAAGD,QAAsB,CAC5C,CAAC,CAAA;AAEf,KAAA;AAEA,IAAA,IAAMQ,CAAC,GAAGT,YAAY,GAAGU,kCAAQ,GAAGC,+BAAK,CAAA;AAEzC,IAAA,oBACIN,KAAA,CAAAC,aAAA,CAACd,IAAI,EAAA;AAACe,MAAAA,GAAG,EAAEZ,YAAAA;KACPU,eAAAA,KAAA,CAAAC,aAAA,CAACE,qCAAW,EAAKN,IAAI,EAChBN,KAAK,iBAAIS,KAAA,CAAAC,aAAA,CAACM,+BAAK,EAAEhB,IAAAA,EAAAA,KAAa,CAAC,EAC/BC,KAAK,iBAAIQ,KAAA,CAAAC,aAAA,CAACG,CAAC,QAAEZ,KAAS,CAAC,EACvBC,QAAQ,iBAAIO,KAAA,CAAAC,aAAA,CAACO,kCAAQ,EAAA,IAAA,EAAEf,QAAmB,CAAC,EAC3CC,OAAO,iBAAIM,KAAA,CAAAC,aAAA,CAACQ,iCAAO,EAAEf,IAAAA,EAAAA,OAAiB,CAC9B,CACX,CAAC,CAAA;AAEf,GAAC,CAAC,CAAA;AAAA,EAAA;AAEC,IAAMgB,wBAAwB,GAAG;AACpCC,EAAAA,IAAI,EAAE,oBAAoB;AAC1BC,EAAAA,GAAG,EAAE,KAAK;AACVC,EAAAA,MAAM,EAAE3B,sBAAsB;AAC9B4B,EAAAA,IAAI,EAAE,EAAE;AACRC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,GAAG,EAAEC,SAAAA;KACR;AACDC,IAAAA,IAAI,EAAE;AACFF,MAAAA,GAAG,EAAEG,WAAAA;AACT,KAAA;GACH;AACDC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,IAAI,EAAE,SAAS;AACfG,IAAAA,IAAI,EAAE,GAAA;AACV,GAAA;AACJ;;;;;"}