'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
require('@linaria/core');
var common = require('../../../../engines/common.js');
var Button$1 = require('../../../Button/Button.js');
var Header_tokens = require('../../Header.tokens.js');
require('@linaria/react');
var IconChevronLeft = require('../../../_Icon/Icons/IconChevronLeft.js');
var index = require('../../../../utils/index.js');
var HeaderArrow_styles = require('./HeaderArrow.styles.js');
var base$1 = require('./variations/_size/base.js');
var base = require('./variations/_view/base.js');

var _excluded = ["arrow", "iconSize", "value"];
var mergedButtonConfig = /*#__PURE__*/common.mergeConfig(Button$1.buttonConfig);
var Button = /*#__PURE__*/common.component(mergedButtonConfig);

/**
 * Кнопка-стрелка с возможностью отображения в двух типах - "назад" или "свернуть".
 */
var headerArrowRoot = function headerArrowRoot(Root) {
  return /*#__PURE__*/React.forwardRef(function (props, outerRootRef) {
    var arrow = props.arrow,
      _props$iconSize = props.iconSize,
      iconSize = _props$iconSize === void 0 ? 's' : _props$iconSize,
      value = props.value,
      rest = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);
    var minimizeClass = arrow === 'minimize' ? Header_tokens.classes.headerArrowIconMinimize : undefined;
    return /*#__PURE__*/React.createElement(Root, {
      ref: outerRootRef
    }, /*#__PURE__*/React.createElement(Button, _rollupPluginBabelHelpers.extends({
      view: "clear",
      size: "s",
      tabIndex: -1,
      className: Header_tokens.classes.headerArrow,
      value: String(value)
    }, rest), /*#__PURE__*/React.createElement(IconChevronLeft.IconChevronLeft, _rollupPluginBabelHelpers.extends({
      size: iconSize,
      sizeCustomProperty: Header_tokens.tokens.headerArrowIconSize,
      className: index.cx(Header_tokens.classes.headerArrowIcon, minimizeClass),
      color: "inherit"
    }, props))));
  });
};
var headerArrowConfig = {
  name: 'HeaderArrow',
  tag: 'div',
  layout: headerArrowRoot,
  base: HeaderArrow_styles.base,
  variations: {
    view: {
      css: base.base
    },
    size: {
      css: base$1.base
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};

exports.headerArrowConfig = headerArrowConfig;
exports.headerArrowRoot = headerArrowRoot;
//# sourceMappingURL=HeaderArrow.js.map
