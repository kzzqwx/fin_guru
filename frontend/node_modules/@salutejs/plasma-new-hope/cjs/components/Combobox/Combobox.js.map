{"version":3,"file":"Combobox.js","sources":["../../../src/components/Combobox/Combobox.tsx"],"sourcesContent":["import React, { Children, forwardRef, useEffect, useRef, useState } from 'react';\nimport { safeUseId, useForkRef } from '@salutejs/plasma-core';\n\nimport { RootProps } from '../../engines';\nimport { cx } from '../../utils';\nimport { getPlacements } from '../Dropdown/utils';\nimport { getChildren, getNewSelected, getValues } from '../Select/utils';\nimport { useKeyNavigation } from '../Select/hooks';\nimport { useDidMountEffect, useForceUpdate } from '../../hooks';\n\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { ComboboxTarget } from './ui';\nimport { ComboboxItemNotFound, StyledPopover, StyledRoot, StyledCombobox, StyledNativeSelect } from './Combobox.styles';\nimport type { ComboboxPrimitiveValue, ComboboxProps } from './Combobox.types';\n\n/**\n * Выпадающий список без внешнего контроля видимости.\n */\nexport const comboboxRoot = (Root: RootProps<HTMLInputElement, ComboboxProps>) =>\n    forwardRef<HTMLInputElement, ComboboxProps>(\n        (\n            {\n                name,\n                form,\n                readOnly,\n                disabled,\n                label,\n                placeholder,\n                id,\n                children,\n                role,\n                view,\n                size,\n                frame,\n                usePortal,\n                negativeResultContent = 'Элементы не найдены',\n                enumerationType = 'comma',\n                opened = false,\n                placement = 'bottom',\n                onToggle,\n                onKeyDown,\n                filterFunction,\n                ...rest\n            },\n            outerRootRef,\n        ) => {\n            const forceUpdate = useForceUpdate();\n            const uniqId = safeUseId();\n            const innerId = id || uniqId;\n            const { valueType = 'single', value } = rest;\n            const offset = [0, 4] as [number, number];\n\n            const [ref, setRef] = useState<HTMLInputElement | null>(null);\n\n            const targetRef = useRef<HTMLInputElement>(null);\n            const chipsRefs = useRef<Array<HTMLButtonElement>>([]);\n            const comboboxRef = useRef<HTMLDivElement>(null);\n            const itemsRefs = useRef<Array<HTMLDivElement>>([]);\n            const inputRef = useRef<HTMLInputElement>(null);\n            const handleRef = useForkRef<HTMLInputElement>(targetRef, outerRootRef);\n            const controlledRefs = { targetRef, chipsRefs, selectRef: comboboxRef, itemsRefs, inputRef };\n\n            const [innerOpened, setInnerOpened] = useState(opened);\n            const [search, setSearch] = useState<string | undefined>('');\n            const [filterValue, setFilterValue] = useState(search);\n\n            // INFO: нужно высчитывать для корректной работы портала\n            const dynamicTargetWidth = targetRef.current?.offsetWidth;\n\n            // INFO: Из-за того, что классы передаются через ref,\n            // состояние пропсов после изменения view, size\n            // всегда предыдущее, поэтому нужно делать форс-ререндер\n            useDidMountEffect(() => {\n                forceUpdate();\n            }, [view, size]);\n\n            useEffect(() => {\n                if (disabled || readOnly) {\n                    return;\n                }\n\n                setInnerOpened(opened);\n            }, [opened, disabled, readOnly]);\n\n            useEffect(() => {\n                // INFO: Для кейсов, когда значение выбрано и нужно вывести весь список\n                if (opened) {\n                    setFilterValue('');\n                }\n            }, []);\n\n            const onInnerToggle = (openValue: boolean, event: React.SyntheticEvent | Event) => {\n                if (disabled || readOnly) {\n                    return;\n                }\n\n                // INFO: Для кейсов, когда значение выбрано и нужно вывести весь список\n                if (!innerOpened) {\n                    setFilterValue('');\n                }\n\n                if (onToggle) {\n                    onToggle(openValue, event);\n\n                    return;\n                }\n\n                setInnerOpened(openValue);\n            };\n\n            const closedWithoutChanges = useRef(true);\n\n            const updateValue = (item: HTMLElement, event: React.SyntheticEvent | Event) => {\n                const {\n                    dataset: { value: newValue },\n                } = item;\n\n                if (rest.valueType === 'multiple') {\n                    const newSelected = getNewSelected(rest.value, newValue, rest.valueType);\n                    rest.onChangeValue?.(newSelected);\n\n                    return;\n                }\n\n                const newSelected = getNewSelected(rest.value, newValue, 'single');\n\n                rest.onChangeValue?.(newSelected);\n\n                onInnerToggle?.(false, event);\n\n                closedWithoutChanges.current = false;\n            };\n\n            const onClickChildrenItem = (event: React.MouseEvent<HTMLDivElement>) => {\n                // INFO: Для корректной работы компонента Popper\n                event.stopPropagation();\n\n                const item = event.currentTarget as HTMLElement;\n\n                updateValue(item, event);\n            };\n\n            const onChangeChipValue = (newValue?: Array<ComboboxPrimitiveValue>) => {\n                if (rest.valueType !== 'multiple') {\n                    return;\n                }\n\n                rest.onChangeValue?.(newValue);\n            };\n\n            const { onKeyDownTarget, onKeyDownSelect } = useKeyNavigation({\n                controlledRefs,\n                opened: innerOpened,\n                enumerationType,\n                valueType,\n                componentType: 'combobox',\n                value,\n                search: filterValue,\n                updateOpened: onInnerToggle,\n                updateValue,\n            });\n\n            const childrenArray = Children.toArray(children) as React.ReactElement[];\n\n            const childrenMemo = getChildren(\n                childrenArray,\n                { onClick: onClickChildrenItem, childrenRefs: itemsRefs },\n                value,\n                filterValue,\n                filterFunction,\n            ).filter(Boolean);\n\n            const values = getValues(childrenArray, value);\n\n            const onSearch = (newSearch?: string, newOpened?: boolean) => {\n                setSearch(newSearch);\n                setFilterValue(newSearch);\n                setInnerOpened(newOpened ?? true);\n            };\n\n            const onKeyDownHandle = (event: React.KeyboardEvent<HTMLInputElement>) => {\n                onKeyDown?.(event);\n                onKeyDownTarget(event);\n            };\n\n            return (\n                <StyledRoot ref={comboboxRef}>\n                    <StyledNativeSelect\n                        aria-invalid=\"false\"\n                        aria-hidden=\"true\"\n                        aria-readonly={readOnly}\n                        tabIndex={-1}\n                        form={form}\n                        name={name}\n                        value={`${value}`}\n                        disabled={disabled || readOnly}\n                    />\n                    <StyledPopover\n                        role={role}\n                        isOpen={innerOpened}\n                        onToggle={onInnerToggle}\n                        target={\n                            <ComboboxTarget\n                                opened={innerOpened}\n                                values={values}\n                                label={label}\n                                placeholder={placeholder}\n                                search={search}\n                                enumerationType={enumerationType}\n                                valueType={valueType}\n                                readOnly={readOnly}\n                                disabled={disabled}\n                                size={size}\n                                closedWithoutChanges={closedWithoutChanges}\n                                ref={handleRef}\n                                chipsRefs={chipsRefs}\n                                inputRef={inputRef}\n                                id={innerId}\n                                onChange={onChangeChipValue}\n                                onSearch={onSearch}\n                                onKeyDown={onKeyDownHandle}\n                                {...rest}\n                            />\n                        }\n                        className={cx(ref?.classList.toString())} // INFO: Прокидываем стили для Popover\n                        id={innerId}\n                        offset={offset}\n                        placement={getPlacements(placement)}\n                        usePortal={usePortal}\n                        selectWidth={dynamicTargetWidth}\n                        frame={frame}\n                        trigger=\"click\"\n                        isFocusTrapped={false}\n                        preventOverflow={false}\n                        closeOnEsc={false}\n                        closeOnOverlayClick\n                    >\n                        <Root ref={setRef} view={view} size={size}>\n                            <StyledCombobox onKeyDown={onKeyDownSelect}>\n                                {childrenMemo.length ? (\n                                    childrenMemo\n                                ) : (\n                                    <ComboboxItemNotFound>{negativeResultContent}</ComboboxItemNotFound>\n                                )}\n                            </StyledCombobox>\n                        </Root>\n                    </StyledPopover>\n                </StyledRoot>\n            );\n        },\n    );\n\nexport const comboboxConfig = {\n    name: 'Combobox',\n    tag: 'div',\n    layout: comboboxRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n    },\n    defaults: {\n        view: 'default',\n        size: 'm',\n    },\n};\n"],"names":["comboboxRoot","Root","forwardRef","_ref","outerRootRef","_targetRef$current","name","form","readOnly","disabled","label","placeholder","id","children","role","view","size","frame","usePortal","_ref$negativeResultCo","negativeResultContent","_ref$enumerationType","enumerationType","_ref$opened","opened","_ref$placement","placement","onToggle","onKeyDown","filterFunction","rest","_objectWithoutProperties","_excluded","forceUpdate","useForceUpdate","uniqId","safeUseId","innerId","_rest$valueType","valueType","value","offset","_useState","useState","_useState2","_slicedToArray","ref","setRef","targetRef","useRef","chipsRefs","comboboxRef","itemsRefs","inputRef","handleRef","useForkRef","controlledRefs","selectRef","_useState3","_useState4","innerOpened","setInnerOpened","_useState5","_useState6","search","setSearch","_useState7","_useState8","filterValue","setFilterValue","dynamicTargetWidth","current","offsetWidth","useDidMountEffect","useEffect","onInnerToggle","openValue","event","closedWithoutChanges","updateValue","item","_rest$onChangeValue2","newValue","dataset","_rest$onChangeValue","newSelected","getNewSelected","onChangeValue","call","onClickChildrenItem","stopPropagation","currentTarget","onChangeChipValue","_rest$onChangeValue3","_useKeyNavigation","useKeyNavigation","componentType","updateOpened","onKeyDownTarget","onKeyDownSelect","childrenArray","Children","toArray","childrenMemo","getChildren","onClick","childrenRefs","filter","Boolean","values","getValues","onSearch","newSearch","newOpened","onKeyDownHandle","React","createElement","StyledRoot","StyledNativeSelect","tabIndex","concat","StyledPopover","isOpen","target","ComboboxTarget","_extends","onChange","className","cx","classList","toString","getPlacements","selectWidth","trigger","isFocusTrapped","preventOverflow","closeOnEsc","closeOnOverlayClick","StyledCombobox","length","ComboboxItemNotFound","comboboxConfig","tag","layout","base","variations","css","viewCSS","sizeCSS","defaults"],"mappings":"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"}