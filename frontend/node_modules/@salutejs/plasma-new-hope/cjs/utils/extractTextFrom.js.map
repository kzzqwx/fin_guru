{"version":3,"file":"extractTextFrom.js","sources":["../../src/utils/extractTextFrom.ts"],"sourcesContent":["import { isValidElement, Children, ReactChild } from 'react';\nimport type { ReactNode } from 'react';\n\nexport const extractTextFrom = (textSource?: string | number | null | ReactNode): string => {\n    switch (typeof textSource) {\n        case 'string':\n            return textSource;\n        case 'number':\n            return textSource.toString();\n        case 'object': {\n            if (!isValidElement(textSource) || !textSource.props || !textSource.props.children) {\n                return '';\n            }\n            return Children.map<string, ReactChild>(textSource.props.children, (child) => {\n                return extractTextFrom(child);\n            }).join('');\n        }\n        default:\n            return '';\n    }\n};\n"],"names":["extractTextFrom","textSource","_typeof","toString","isValidElement","props","children","Children","map","child","join"],"mappings":";;;;;;;IAGaA,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,UAA+C,EAAa;EACxF,QAAAC,gCAAA,CAAeD,UAAU,CAAA;AACrB,IAAA,KAAK,QAAQ;AACT,MAAA,OAAOA,UAAU,CAAA;AACrB,IAAA,KAAK,QAAQ;AACT,MAAA,OAAOA,UAAU,CAACE,QAAQ,EAAE,CAAA;AAChC,IAAA,KAAK,QAAQ;AAAE,MAAA;AACX,QAAA,IAAI,eAACC,oBAAc,CAACH,UAAU,CAAC,IAAI,CAACA,UAAU,CAACI,KAAK,IAAI,CAACJ,UAAU,CAACI,KAAK,CAACC,QAAQ,EAAE;AAChF,UAAA,OAAO,EAAE,CAAA;AACb,SAAA;AACA,QAAA,OAAOC,cAAQ,CAACC,GAAG,CAAqBP,UAAU,CAACI,KAAK,CAACC,QAAQ,EAAE,UAACG,KAAK,EAAK;UAC1E,OAAOT,eAAe,CAACS,KAAK,CAAC,CAAA;AACjC,SAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAA;AACf,OAAA;AACA,IAAA;AACI,MAAA,OAAO,EAAE,CAAA;AACjB,GAAA;AACJ;;;;"}