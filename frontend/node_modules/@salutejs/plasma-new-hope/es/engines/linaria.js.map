{"version":3,"file":"linaria.js","sources":["../../src/engines/linaria.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { cx } from '@linaria/core';\n\n// TODO: #1008 Избавиться от импортов и переделать addFocus\nimport 'focus-visible';\nimport { getStaticVariants, getDynamicVariants } from './common';\nimport type { ComponentConfig, HTMLAnyAttributes } from './types';\n\n/* eslint-disable no-underscore-dangle */\nexport const _component = (componentConfig: ComponentConfig) => {\n    const { tag, base, name } = componentConfig;\n    const staticVariants = getStaticVariants(componentConfig);\n    const dynamicVariants = getDynamicVariants(componentConfig);\n    const Root = tag as React.ElementType;\n\n    const component = forwardRef<HTMLElement, HTMLAnyAttributes>((props, ref) => {\n        const { className, ...rest } = props;\n        const variants = dynamicVariants(rest);\n        const cls = cx(className, base, ...staticVariants, ...variants);\n\n        // styled-components do it inside\n        // filter props\n        const baseProps: HTMLAnyAttributes = {};\n        for (const key in rest) {\n            if (!(key in componentConfig.variations)) {\n                baseProps[key] = rest[key];\n            }\n        }\n\n        baseProps.ref = ref;\n\n        // styled-components do it inside\n        // add props that should be attr( disabled for example)\n        const htmlAttrs: HTMLAnyAttributes = {};\n        for (const key in componentConfig.variations || {}) {\n            if (key in rest) {\n                const variant = componentConfig.variations[key];\n\n                const { attrs } = variant;\n                if (typeof attrs === 'boolean') {\n                    htmlAttrs[key] = rest[key];\n                }\n            }\n        }\n\n        return <Root className={cls} {...htmlAttrs} {...baseProps} />;\n    });\n    if (name) {\n        component.displayName = name;\n    }\n    return component;\n};\n"],"names":["_component","componentConfig","tag","base","name","staticVariants","getStaticVariants","dynamicVariants","getDynamicVariants","Root","component","forwardRef","props","ref","className","rest","_objectWithoutProperties","_excluded","variants","cls","cx","apply","concat","_toConsumableArray","baseProps","key","variations","htmlAttrs","variant","attrs","React","createElement","_extends","displayName"],"mappings":";;;;;;;AAQA;IACaA,UAAU,GAAG,SAAbA,UAAUA,CAAIC,eAAgC,EAAK;AAC5D,EAAA,IAAQC,GAAG,GAAiBD,eAAe,CAAnCC,GAAG;IAAEC,IAAI,GAAWF,eAAe,CAA9BE,IAAI;IAAEC,IAAI,GAAKH,eAAe,CAAxBG,IAAI,CAAA;AACvB,EAAA,IAAMC,cAAc,GAAGC,iBAAiB,CAACL,eAAe,CAAC,CAAA;AACzD,EAAA,IAAMM,eAAe,GAAGC,kBAAkB,CAACP,eAAe,CAAC,CAAA;EAC3D,IAAMQ,IAAI,GAAGP,GAAwB,CAAA;EAErC,IAAMQ,SAAS,gBAAGC,UAAU,CAAiC,UAACC,KAAK,EAAEC,GAAG,EAAK;AACzE,IAAA,IAAQC,SAAS,GAAcF,KAAK,CAA5BE,SAAS;AAAKC,MAAAA,IAAI,GAAAC,wBAAA,CAAKJ,KAAK,EAAAK,SAAA,CAAA,CAAA;AACpC,IAAA,IAAMC,QAAQ,GAAGX,eAAe,CAACQ,IAAI,CAAC,CAAA;AACtC,IAAA,IAAMI,GAAG,GAAGC,EAAE,CAAAC,KAAA,CAAA,KAAA,CAAA,EAAA,CAACP,SAAS,EAAEX,IAAI,EAAAmB,MAAA,CAAAC,kBAAA,CAAKlB,cAAc,GAAAkB,kBAAA,CAAKL,QAAQ,CAAC,CAAA,CAAA,CAAA;;AAE/D;AACA;IACA,IAAMM,SAA4B,GAAG,EAAE,CAAA;AACvC,IAAA,KAAK,IAAMC,GAAG,IAAIV,IAAI,EAAE;AACpB,MAAA,IAAI,EAAEU,GAAG,IAAIxB,eAAe,CAACyB,UAAU,CAAC,EAAE;AACtCF,QAAAA,SAAS,CAACC,GAAG,CAAC,GAAGV,IAAI,CAACU,GAAG,CAAC,CAAA;AAC9B,OAAA;AACJ,KAAA;IAEAD,SAAS,CAACX,GAAG,GAAGA,GAAG,CAAA;;AAEnB;AACA;IACA,IAAMc,SAA4B,GAAG,EAAE,CAAA;IACvC,KAAK,IAAMF,IAAG,IAAIxB,eAAe,CAACyB,UAAU,IAAI,EAAE,EAAE;MAChD,IAAID,IAAG,IAAIV,IAAI,EAAE;AACb,QAAA,IAAMa,OAAO,GAAG3B,eAAe,CAACyB,UAAU,CAACD,IAAG,CAAC,CAAA;AAE/C,QAAA,IAAQI,KAAK,GAAKD,OAAO,CAAjBC,KAAK,CAAA;AACb,QAAA,IAAI,OAAOA,KAAK,KAAK,SAAS,EAAE;AAC5BF,UAAAA,SAAS,CAACF,IAAG,CAAC,GAAGV,IAAI,CAACU,IAAG,CAAC,CAAA;AAC9B,SAAA;AACJ,OAAA;AACJ,KAAA;AAEA,IAAA,oBAAOK,KAAA,CAAAC,aAAA,CAACtB,IAAI,EAAAuB,QAAA,CAAA;AAAClB,MAAAA,SAAS,EAAEK,GAAAA;AAAI,KAAA,EAAKQ,SAAS,EAAMH,SAAS,CAAG,CAAC,CAAA;AACjE,GAAC,CAAC,CAAA;AACF,EAAA,IAAIpB,IAAI,EAAE;IACNM,SAAS,CAACuB,WAAW,GAAG7B,IAAI,CAAA;AAChC,GAAA;AACA,EAAA,OAAOM,SAAS,CAAA;AACpB;;;;"}