{"version":3,"file":"Pagination.styles.js","sources":["../../../src/components/Pagination/Pagination.styles.ts"],"sourcesContent":["import { styled } from '@linaria/react';\n\nimport { buttonConfig, buttonTokens } from '../Button';\nimport { buttonGroupConfig, buttonGroupTokens } from '../ButtonGroup';\nimport { component, mergeConfig } from '../../engines';\nimport { addFocus } from '../../mixins';\n\nimport { classes, tokens } from './Pagination.tokens';\n\nconst mergedButtonConfig = mergeConfig(buttonConfig);\nconst Button = component(mergedButtonConfig);\n\nconst mergedButtonGroupConfig = mergeConfig(buttonGroupConfig);\nconst ButtonGroup = component(mergedButtonGroupConfig);\n\nexport const PaginationRoot = styled.div`\n    display: flex;\n    color: var(${tokens.paginationColor});\n\n    &.${classes.compactType} {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n    &.${classes.defaultType} {\n        display: flex;\n        justify-content: space-between;\n        flex: 0 0 100%;\n        gap: 1rem;\n        flex-wrap: wrap;\n    }\n`;\n\nexport const PaginationPages = styled.div`\n    display: flex;\n    align-items: center;\n    gap: 0.25rem;\n    margin: 0 auto;\n`;\n\nexport const PaginationActions = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-grow: 1;\n    gap: 0.625rem;\n    &.${classes.compactType} {\n        flex-direction: row;\n    }\n\n    &.${classes.withHasPerPageSelect} {\n        flex-direction: row-reverse;\n    }\n\n    &.${classes.withHasQuickJump} {\n        flex-direction: row;\n    }\n`;\n\nexport const PaginationSection = styled.div`\n    display: flex;\n    gap: 0.125rem;\n`;\n\nexport const PaginationButtonGroup = styled(ButtonGroup)`\n    ${buttonGroupTokens.buttonColor}: var(${tokens.buttonColor});\n    ${buttonGroupTokens.buttonBackgroundColor}: var(${tokens.buttonBackgroundColor});\n\n    ${buttonGroupTokens.buttonColorHover}: var(${tokens.buttonHoverColor});\n    ${buttonGroupTokens.buttonBackgroundColorHover}: var(${tokens.buttonHoverBackgroundColor});\n\n    ${buttonGroupTokens.buttonColorActive}: var(${tokens.buttonActiveColor});\n    ${buttonGroupTokens.buttonBackgroundColorActive}: var(${tokens.buttonActiveBackgroundColor});\n\n    ${buttonGroupTokens.buttonFontFamily}: var(${tokens.paginationFontFamily});\n    ${buttonGroupTokens.buttonFontSize}: var(${tokens.paginationFontSize});\n    ${buttonGroupTokens.buttonFontStyle}: var(${tokens.paginationFontStyle});\n    ${buttonGroupTokens.buttonFontWeight}:var(${tokens.paginationFontWeight});\n    ${buttonGroupTokens.buttonLetterSpacing}: var(${tokens.paginationLetterSpacing});\n    ${buttonGroupTokens.buttonLineHeight}: var(${tokens.paginationLineHeight});\n\n    ${buttonGroupTokens.buttonWidth}: var(${tokens.buttonWidth});\n    ${buttonGroupTokens.buttonHeight}: var(${tokens.buttonHeight});\n\n    ${buttonGroupTokens.buttonDefaultRadius}: var(${tokens.buttonRadius});\n    ${buttonGroupTokens.buttonSideRadius}: var(${tokens.buttonRadius});\n    ${buttonGroupTokens.buttonSegmentedRadius}: var(${tokens.buttonRadius});\n    ${buttonGroupTokens.buttonRadiusCircle}: var(${tokens.buttonRadius});\n`;\n\nexport const PaginationButton = styled(Button)`\n    ${buttonTokens.buttonColor}: var(${tokens.buttonColor});\n    ${buttonTokens.buttonBackgroundColor}: var(${tokens.buttonBackgroundColor});\n\n    ${buttonTokens.buttonColorHover}: var(${tokens.buttonHoverColor});\n    ${buttonTokens.buttonBackgroundColorHover}: var(${tokens.buttonHoverBackgroundColor});\n\n    ${buttonTokens.buttonColorActive}: var(${tokens.buttonActiveColor});\n    ${buttonTokens.buttonBackgroundColorActive}: var(${tokens.buttonActiveBackgroundColor});\n\n\n    ${buttonTokens.buttonFontFamily}: var(${tokens.paginationFontFamily});\n    ${buttonTokens.buttonFontSize}: var(${tokens.paginationFontSize});\n    ${buttonTokens.buttonFontStyle}: var(${tokens.paginationFontStyle});\n    ${buttonTokens.buttonFontWeight}:var(${tokens.paginationFontWeight});\n    ${buttonTokens.buttonLetterSpacing}: var(${tokens.paginationLetterSpacing});\n    ${buttonTokens.buttonLineHeight}: var(${tokens.paginationLineHeight});\n\n    ${buttonTokens.buttonWidth}: var(${tokens.buttonWidth});\n    ${buttonTokens.buttonHeight}: var(${tokens.buttonHeight});\n    ${buttonTokens.buttonRadius}: var(${tokens.buttonRadius});\n\n    ${buttonTokens.buttonDisabledOpacity}: var(${tokens.buttonDisabledOpacity});\n    ${buttonTokens.buttonFocusColor}: var(${tokens.buttonFocusColor});\n\n    &.${classes.paginationPageButtonActive} {\n        ${buttonTokens.buttonColor}: var(${tokens.paginationCurrentButtonColor});\n        ${buttonTokens.buttonBackgroundColor}: var(${tokens.paginationCurrentButtonBackgroundColor});\n\n        ${buttonTokens.buttonColorHover}: var(${tokens.paginationCurrentButtonHoverColor});\n        ${buttonTokens.buttonBackgroundColorHover}: var(${tokens.paginationCurrentButtonHoverBackgroundColor});\n\n        ${buttonTokens.buttonColorActive}: var(${tokens.paginationCurrentButtonActiveColor});\n        ${buttonTokens.buttonBackgroundColorActive}: var(${tokens.paginationCurrentButtonActiveBackgroundColor});\n    }\n\n    :focus {\n        outline: none;\n    }\n\n    ${addFocus({\n        outlineOffset: 'calc(-1 * var(--plasma_private-btn-outline-size))',\n        outlineSize: 'var(--plasma_private-btn-outline-size)',\n        outlineRadius: 'var(--plasma_private-btn-br)',\n        outlineColor: `var(${tokens.buttonFocusColor})`,\n    })}\n`;\n\nexport const PaginationShorter = styled(PaginationButton)`\n    ${buttonTokens.buttonWidth}: var(${tokens.buttonWidthShorter});\n    ${buttonTokens.buttonPadding}: 0;\n`;\n"],"names":["mergedButtonConfig","mergeConfig","buttonConfig","Button","component","mergedButtonGroupConfig","buttonGroupConfig","ButtonGroup","PaginationRoot","styled","name","class","propsAsIs","PaginationPages","PaginationActions","PaginationSection","_exp7","PaginationButtonGroup","_exp44","PaginationButton","_exp93","PaginationShorter"],"mappings":";;;;;;AASA,IAAMA,kBAAkB,gBAAGC,WAAW,CAACC,YAAY,CAAC,CAAA;AACpD,IAAMC,MAAM,gBAAGC,SAAS,CAACJ,kBAAkB,CAAC,CAAA;AAE5C,IAAMK,uBAAuB,gBAAGJ,WAAW,CAACK,iBAAiB,CAAC,CAAA;AAC9D,IAAMC,WAAW,gBAAGH,SAAS,CAACC,uBAAuB,CAAC,CAAA;AAE/C,IAAMG,cAAc,gBAAGC,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,gBAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAgBnC,EAAA;AAEM,IAAMC,eAAe,gBAAGJ,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,iBAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAKpC,EAAA;AAEM,IAAME,iBAAiB,gBAAGL,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,mBAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAgBtC,EAAA;AAEM,IAAMG,iBAAiB,gBAAGN,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,mBAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAGtC,EAAA;AAAC,IAAAI,KAAA,GA5DgBA,SA4DhBA,KAAAA,GAAA;AAAA,EAAA,OAE0CT,WAAW,CAAA;AAAA,CAAA,CAAA;AAAhD,IAAMU,qBAAqB,gBAAGR,MAAM,CAAAO,KAAA,EAAA,CAAA,CAAA;AAAAN,EAAAA,IAAA,EAAA,uBAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,IAAA;AAAA,CAwB1C,EAAA;AAAC,IAAAM,MAAA,GAtFgBA,SAsFhBA,MAAAA,GAAA;AAAA,EAAA,OAEqCf,MAAM,CAAA;AAAA,CAAA,CAAA;AAAtC,IAAMgB,gBAAgB,gBAAGV,MAAM,CAAAS,MAAA,EAAA,CAAA,CAAA;AAAAR,EAAAA,IAAA,EAAA,kBAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,IAAA;AAAA,CA8CrC,EAAA;AAAC,IAAAQ,MAAA,GAtIgBA,SAsIhBA,MAAAA,GAAA;AAAA,EAAA,OAEsCD,gBAAgB,CAAA;AAAA,CAAA,CAAA;AAAjD,IAAME,iBAAiB,gBAAGZ,MAAM,CAAAW,MAAA,EAAA,CAAA,CAAA;AAAAV,EAAAA,IAAA,EAAA,mBAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,IAAA;AAAA,CAGtC;;;;"}