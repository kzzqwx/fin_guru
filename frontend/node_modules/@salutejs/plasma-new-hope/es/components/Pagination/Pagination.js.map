{"version":3,"file":"Pagination.js","sources":["../../../src/components/Pagination/Pagination.tsx"],"sourcesContent":["import React, { useEffect, useState, forwardRef } from 'react';\n\nimport { cx, isNumber } from '../../utils';\nimport { RootProps } from '../../engines';\n\nimport {\n    PaginationPages,\n    PaginationActions,\n    PaginationButton,\n    PaginationSection,\n    PaginationButtonGroup,\n    PaginationRoot,\n    PaginationShorter,\n} from './Pagination.styles';\nimport type { PaginationProps } from './Pagination.types';\nimport { getSections, defaultValues } from './utils';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as typeCSS } from './variations/_type/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { classes } from './Pagination.tokens';\nimport { PaginationQuickJumpToPage } from './ui/PaginationQuickJumpToPage/PaginationQuickJumpToPage';\nimport { PaginationSelectPerPage } from './ui/PaginationSelectPerPage/PaginationSelectPerPage';\n\nexport const paginationRoot = (Root: RootProps<HTMLDivElement, PaginationProps>) =>\n    forwardRef<HTMLDivElement, PaginationProps>(\n        (\n            {\n                value = defaultValues.value,\n                perPage,\n                slots = defaultValues.slots,\n\n                view,\n                viewCurrentPage,\n                type = defaultValues.type,\n                size,\n                pilled = defaultValues.pilled,\n                square = defaultValues.square,\n                disabledPages = defaultValues.disabledPages,\n\n                count = defaultValues.value,\n\n                hasQuickJump = defaultValues.hasQuickJump,\n                hasPerPage = defaultValues.hasPerPage,\n                perPageList = defaultValues.perPageList,\n                isCommonButtonStyles = defaultValues.isCommonButtonStyles,\n\n                placeholderQuickJump = defaultValues.placeholderQuickJump,\n                textQuickJump = defaultValues.textQuickJump,\n                textPerPage = defaultValues.textPerPage,\n\n                leftContent,\n                rightContent,\n\n                onChangePageValue,\n                onChangePerPageValue,\n                ...rest\n            },\n            ref,\n        ) => {\n            const [page, setPageValue] = useState<number>(1);\n            const [perPageValue, setPerPageValue] = useState(perPage);\n            const [pages, setPagesValue] = useState<number>(value);\n            const [sections, setSections] = useState<number[][] | null>(null);\n\n            const typeClass = classes[`${type}Type` as keyof typeof classes];\n            const roundedClass = pilled ? 'circle-circle' : 'square-square';\n\n            const withHasPerPageSelect = hasPerPage ? classes.withHasPerPageSelect : undefined;\n            const withHasQuickJump = hasQuickJump ? classes.withHasQuickJump : undefined;\n\n            const disabled = disabledPages.map((el) => (isNumber(el) ? Number(el) : null));\n\n            const handlerSetPages = (newPerPage?: number) => {\n                setPagesValue(Math.ceil(count / (newPerPage || (hasPerPage ? defaultValues.perPage : 1))));\n            };\n\n            const handlerSetPage = (newPageValue?: number) => {\n                let pageValue = newPageValue ?? defaultValues.value;\n                if (pageValue > pages) {\n                    pageValue = pages;\n                }\n                if (pageValue < 1) {\n                    pageValue = 1;\n                }\n                if (disabled.includes(pageValue)) {\n                    return;\n                }\n                setPageValue(pageValue);\n                onChangePageValue?.(pageValue);\n            };\n\n            const handlerSetPerPage = (newPerPageValue?: number) => {\n                handlerSetPage(1);\n                setPerPageValue(newPerPageValue);\n                onChangePerPageValue?.(newPerPageValue);\n\n                handlerSetPages(newPerPageValue);\n            };\n\n            const isActiveButton = (checkPage: number) => {\n                return page === checkPage ? classes.paginationPageButtonActive : '';\n            };\n\n            useEffect(() => {\n                handlerSetPages(perPage);\n            }, [perPage, count, handlerSetPages]);\n\n            useEffect(() => {\n                handlerSetPage(value);\n            }, [value]);\n\n            useEffect(() => {\n                setSections(getSections(page, pages, slots));\n            }, [page, slots, pages, setSections, getSections]);\n\n            return (\n                <Root\n                    size={size}\n                    view={view}\n                    viewCurrentPage={viewCurrentPage}\n                    className={cx(classes.wrapper, typeClass)}\n                    ref={ref}\n                    {...rest}\n                >\n                    <PaginationRoot className={typeClass}>\n                        <PaginationPages>\n                            {leftContent && (\n                                <PaginationButtonGroup isCommonButtonStyles={isCommonButtonStyles}>\n                                    {leftContent}\n                                </PaginationButtonGroup>\n                            )}\n                            {sections &&\n                                sections.map((section, indexSection) => (\n                                    <>\n                                        {indexSection !== 0 && (\n                                            <PaginationShorter stretching=\"fixed\" disabled>\n                                                ...\n                                            </PaginationShorter>\n                                        )}\n                                        <PaginationSection key={indexSection}>\n                                            {section.map((pageValue) => (\n                                                <PaginationButton\n                                                    square={square}\n                                                    pin={roundedClass}\n                                                    key={pageValue}\n                                                    onClick={() => handlerSetPage(pageValue)}\n                                                    disabled={disabled.includes(pageValue)}\n                                                    className={cx(\n                                                        classes.paginationPageButton,\n                                                        isActiveButton(pageValue),\n                                                    )}\n                                                >\n                                                    {pageValue}\n                                                </PaginationButton>\n                                            ))}\n                                        </PaginationSection>\n                                    </>\n                                ))}\n                            {rightContent && (\n                                <PaginationButtonGroup isCommonButtonStyles={isCommonButtonStyles}>\n                                    {rightContent}\n                                </PaginationButtonGroup>\n                            )}\n                        </PaginationPages>\n                        <PaginationActions\n                            className={cx(classes.actions, typeClass, withHasPerPageSelect, withHasQuickJump)}\n                        >\n                            {hasQuickJump && (\n                                <PaginationQuickJumpToPage\n                                    placeholderQuickJump={placeholderQuickJump}\n                                    textQuickJump={textQuickJump}\n                                    onChangeValue={handlerSetPage}\n                                />\n                            )}\n                            {hasPerPage && (\n                                <PaginationSelectPerPage\n                                    textPerPage={textPerPage}\n                                    value={perPageValue}\n                                    valuesList={perPageList}\n                                    onChangeValue={handlerSetPerPage}\n                                />\n                            )}\n                        </PaginationActions>\n                    </PaginationRoot>\n                </Root>\n            );\n        },\n    );\n\nexport const paginationConfig = {\n    name: 'Pagination',\n    tag: 'div',\n    layout: paginationRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n        type: {\n            css: typeCSS,\n        },\n    },\n    defaults: {\n        view: 'clear',\n        size: 'm',\n    },\n};\n"],"names":["paginationRoot","Root","forwardRef","_ref","ref","_ref$value","value","defaultValues","perPage","_ref$slots","slots","view","viewCurrentPage","_ref$type","type","size","_ref$pilled","pilled","_ref$square","square","_ref$disabledPages","disabledPages","_ref$count","count","_ref$hasQuickJump","hasQuickJump","_ref$hasPerPage","hasPerPage","_ref$perPageList","perPageList","_ref$isCommonButtonSt","isCommonButtonStyles","_ref$placeholderQuick","placeholderQuickJump","_ref$textQuickJump","textQuickJump","_ref$textPerPage","textPerPage","leftContent","rightContent","onChangePageValue","onChangePerPageValue","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","page","setPageValue","_useState3","_useState4","perPageValue","setPerPageValue","_useState5","_useState6","pages","setPagesValue","_useState7","_useState8","sections","setSections","typeClass","classes","concat","roundedClass","withHasPerPageSelect","undefined","withHasQuickJump","disabled","map","el","isNumber","Number","handlerSetPages","newPerPage","Math","ceil","handlerSetPage","newPageValue","pageValue","includes","handlerSetPerPage","newPerPageValue","isActiveButton","checkPage","paginationPageButtonActive","useEffect","getSections","React","createElement","_extends","className","cx","wrapper","PaginationRoot","PaginationPages","PaginationButtonGroup","section","indexSection","Fragment","_PaginationShorter","PaginationShorter","stretching","PaginationSection","key","PaginationButton","pin","onClick","paginationPageButton","PaginationActions","actions","PaginationQuickJumpToPage","onChangeValue","PaginationSelectPerPage","valuesList","paginationConfig","name","tag","layout","base","variations","css","viewCSS","sizeCSS","typeCSS","defaults"],"mappings":"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"}