{"version":3,"file":"PaginationQuickJumpToPage.js","sources":["../../../../../src/components/Pagination/ui/PaginationQuickJumpToPage/PaginationQuickJumpToPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { defaultValues } from '../../utils';\n\nimport type { PaginationQuickJumpToPageProps } from './PaginationQuickJumpToPage.types';\nimport {\n    QuickJumpToPageRoot,\n    QuickJumpToPageTypography,\n    QuickJumpToPageInput,\n} from './PaginationQuickJumpToPage.styles';\n\nexport const PaginationQuickJumpToPage: React.FC<PaginationQuickJumpToPageProps> = ({\n    placeholderQuickJump = defaultValues.placeholderQuickJump,\n    textQuickJump = defaultValues.textQuickJump,\n    onChangeValue,\n    ...rest\n}) => {\n    const [pageValue, setPageValue] = useState<number | string | undefined>();\n\n    const handleKeyPress = (event: React.KeyboardEvent<HTMLElement>) => {\n        if (event.key === 'Enter') {\n            onChangeValue?.(Number(pageValue));\n            setPageValue('');\n        }\n    };\n\n    const handleChangeInput = (event: React.FormEvent<HTMLInputElement>) => {\n        const result = event.currentTarget.value.replace(/\\D/g, '');\n        if (result === '') return setPageValue('');\n        setPageValue(Number(result));\n    };\n\n    return (\n        <QuickJumpToPageRoot {...rest}>\n            <QuickJumpToPageTypography>{textQuickJump}</QuickJumpToPageTypography>\n            <QuickJumpToPageInput\n                value={pageValue}\n                placeholder={placeholderQuickJump}\n                onKeyUp={handleKeyPress}\n                onChange={handleChangeInput}\n            />\n        </QuickJumpToPageRoot>\n    );\n};\n"],"names":["PaginationQuickJumpToPage","_ref","_ref$placeholderQuick","placeholderQuickJump","defaultValues","_ref$textQuickJump","textQuickJump","onChangeValue","rest","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","pageValue","setPageValue","handleKeyPress","event","key","Number","handleChangeInput","result","currentTarget","value","replace","React","createElement","QuickJumpToPageRoot","QuickJumpToPageTypography","QuickJumpToPageInput","placeholder","onKeyUp","onChange"],"mappings":";;;;;;IAWaA,yBAAmE,GAAG,SAAtEA,yBAAmEA,CAAAC,IAAA,EAK1E;AAAA,EAAA,IAAAC,qBAAA,GAAAD,IAAA,CAJFE,oBAAoB;AAApBA,IAAAA,oBAAoB,GAAAD,qBAAA,KAAA,KAAA,CAAA,GAAGE,aAAa,CAACD,oBAAoB,GAAAD,qBAAA;IAAAG,kBAAA,GAAAJ,IAAA,CACzDK,aAAa;AAAbA,IAAAA,aAAa,GAAAD,kBAAA,KAAA,KAAA,CAAA,GAAGD,aAAa,CAACE,aAAa,GAAAD,kBAAA;IAC3CE,aAAa,GAAAN,IAAA,CAAbM,aAAa;AACVC,IAAAA,IAAI,GAAAC,wBAAA,CAAAR,IAAA,EAAAS,SAAA,CAAA,CAAA;AAEP,EAAA,IAAAC,SAAA,GAAkCC,QAAQ,EAA+B;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAAlEI,IAAAA,SAAS,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,YAAY,GAAAH,UAAA,CAAA,CAAA,CAAA,CAAA;AAE9B,EAAA,IAAMI,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAuC,EAAK;AAChE,IAAA,IAAIA,KAAK,CAACC,GAAG,KAAK,OAAO,EAAE;MACvBZ,aAAa,KAAA,IAAA,IAAbA,aAAa,KAAbA,KAAAA,CAAAA,IAAAA,aAAa,CAAGa,MAAM,CAACL,SAAS,CAAC,CAAC,CAAA;MAClCC,YAAY,CAAC,EAAE,CAAC,CAAA;AACpB,KAAA;GACH,CAAA;AAED,EAAA,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIH,KAAwC,EAAK;AACpE,IAAA,IAAMI,MAAM,GAAGJ,KAAK,CAACK,aAAa,CAACC,KAAK,CAACC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;IAC3D,IAAIH,MAAM,KAAK,EAAE,EAAE,OAAON,YAAY,CAAC,EAAE,CAAC,CAAA;AAC1CA,IAAAA,YAAY,CAACI,MAAM,CAACE,MAAM,CAAC,CAAC,CAAA;GAC/B,CAAA;EAED,oBACII,KAAA,CAAAC,aAAA,CAACC,mBAAmB,EAAKpB,IAAI,eACzBkB,KAAA,CAAAC,aAAA,CAACE,yBAAyB,QAAEvB,aAAyC,CAAC,eACtEoB,KAAA,CAAAC,aAAA,CAACG,oBAAoB,EAAA;AACjBN,IAAAA,KAAK,EAAET,SAAU;AACjBgB,IAAAA,WAAW,EAAE5B,oBAAqB;AAClC6B,IAAAA,OAAO,EAAEf,cAAe;AACxBgB,IAAAA,QAAQ,EAAEZ,iBAAAA;AAAkB,GAC/B,CACgB,CAAC,CAAA;AAE9B;;;;"}