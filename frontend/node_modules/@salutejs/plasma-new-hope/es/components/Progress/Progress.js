import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { StyledTrack, StyledProgress, StyledValue, base } from './Progress.styles.js';
import { base as base$1 } from './variations/_view/base.js';
import { base as base$2 } from './variations/_size/base.js';

var _excluded = ["view", "status", "value", "displayValue"];
var progressRoot = function progressRoot(Root) {
  return /*#__PURE__*/forwardRef(function (_ref, ref) {
    var view = _ref.view,
      status = _ref.status,
      value = _ref.value,
      _ref$displayValue = _ref.displayValue,
      displayValue = _ref$displayValue === void 0 ? true : _ref$displayValue,
      rest = _objectWithoutProperties(_ref, _excluded);
    var min = 0;
    var max = 100;
    var normalizedValue = Math.max(Math.min(value, max), min);
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: ref,
      view: status || view,
      value: normalizedValue
    }, rest), /*#__PURE__*/React.createElement(StyledTrack, null, /*#__PURE__*/React.createElement(StyledProgress, {
      value: normalizedValue
    })), displayValue && /*#__PURE__*/React.createElement(StyledValue, null, normalizedValue, "%"));
  });
};
var progressConfig = {
  name: 'Progress',
  tag: 'div',
  layout: progressRoot,
  base: base,
  variations: {
    view: {
      css: base$1
    },
    size: {
      css: base$2
    }
  },
  defaults: {
    view: 'default',
    size: 'm'
  }
};

export { progressConfig, progressRoot };
//# sourceMappingURL=Progress.js.map
