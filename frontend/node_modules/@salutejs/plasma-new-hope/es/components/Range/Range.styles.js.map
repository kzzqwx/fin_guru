{"version":3,"file":"Range.styles.js","sources":["../../../src/components/Range/Range.styles.ts"],"sourcesContent":["import { styled } from '@linaria/react';\nimport { css } from '@linaria/core';\n\nimport { component, mergeConfig } from '../../engines';\nimport { textFieldConfig, textFieldTokens } from '../TextField';\n\nimport { classes, tokens } from './Range.tokens';\n\nconst mergedConfig = mergeConfig(textFieldConfig);\nconst TextField = component(mergedConfig);\n\n// NOTE: переопределение токенов TextField\nexport const StyledInput = styled(TextField)`\n    flex: 1;\n        \n    ${textFieldTokens.color}: var(${tokens.textFieldColor});\n    ${textFieldTokens.placeholderColor}: var(${tokens.textFieldPlaceholderColor});\n    ${textFieldTokens.caretColor}: var(${tokens.textFieldCaretColor});\n    ${textFieldTokens.focusColor}: var(${tokens.textFieldFocusColor});\n\n    ${textFieldTokens.backgroundColor}: var(${tokens.textFieldBackgroundColor});\n    ${textFieldTokens.backgroundColorHover}: var(${tokens.textFieldBackgroundColorHover});\n    ${textFieldTokens.backgroundColorFocus}: var(${tokens.textFieldBackgroundColorFocus});\n\n    ${textFieldTokens.borderColor}: var(${tokens.textFieldBorderColor});\n    ${textFieldTokens.borderColorHover}: var(${tokens.textFieldBorderColorHover});\n    ${textFieldTokens.borderColorFocus}: var(${tokens.textFieldBorderColorFocus});\n\n    ${textFieldTokens.colorReadOnly}: var(${tokens.textFieldColorReadOnly});\n    ${textFieldTokens.backgroundColorReadOnly}: var(${tokens.textFieldBackgroundColorReadOnly});\n    ${textFieldTokens.borderColorReadOnly}: var(${tokens.textFieldBorderColorReadOnly});\n    ${textFieldTokens.placeholderColorReadOnly}: var(${tokens.textFieldPlaceholderColorReadOnly});\n\n    ${textFieldTokens.height}: var(${tokens.textFieldHeight});\n    ${textFieldTokens.borderWidth}: var(${tokens.textFieldBorderWidth});\n    ${textFieldTokens.borderRadius}: var(${tokens.textFieldBorderRadius});\n\n    ${textFieldTokens.padding}: var(${tokens.textFieldPadding});\n\n    ${textFieldTokens.leftContentMargin}: var(${tokens.textFieldLeftContentMargin});\n    ${textFieldTokens.rightContentMargin}: var(${tokens.textFieldRightContentMargin});\n\n    ${textFieldTokens.fontFamily}: var(${tokens.textFieldFontFamily});\n    ${textFieldTokens.fontSize}: var(${tokens.textFieldFontSize});\n    ${textFieldTokens.fontStyle}: var(${tokens.textFieldFontStyle});\n    ${textFieldTokens.fontWeight}: var(${tokens.textFieldFontWeight});\n    ${textFieldTokens.letterSpacing}: var(${tokens.textFieldLetterSpacing});\n    ${textFieldTokens.lineHeight}: var(${tokens.textFieldLineHeight});\n\n    ${textFieldTokens.disabledOpacity}: var(${tokens.disabledOpacity});\n    \n    ${textFieldTokens.textBeforeColor}: var(${tokens.textFieldTextBeforeColor});\n    ${textFieldTokens.textAfterColor}: var(${tokens.textFieldTextAfterColor});\n    ${textFieldTokens.textBeforeMargin}: var(${tokens.textFieldTextBeforeMargin});\n    ${textFieldTokens.textAfterMargin}: var(${tokens.textFieldTextAfterMargin});\n\n    &.${classes.rangeValueError} {\n        ${textFieldTokens.backgroundColor}: var(${tokens.textFieldBackgroundErrorColor});\n        ${textFieldTokens.backgroundColorHover}: var(${tokens.textFieldBackgroundErrorColorHover});\n        ${textFieldTokens.backgroundColorFocus}: var(${tokens.textFieldBackgroundErrorColorFocus});\n        \n        ${textFieldTokens.borderColor}: var(${tokens.textFieldBorderColorError});\n        ${textFieldTokens.borderColorHover}: var(${tokens.textFieldBorderColorErrorHover});\n        ${textFieldTokens.borderColorFocus}: var(${tokens.textFieldBorderColorErrorFocus});\n    }\n\n    &.${classes.rangeValueSuccess} {\n        ${textFieldTokens.backgroundColor}: var(${tokens.textFieldBackgroundSuccessColor});\n        ${textFieldTokens.backgroundColorHover}: var(${tokens.textFieldBackgroundSuccessColorHover});\n        ${textFieldTokens.backgroundColorFocus}: var(${tokens.textFieldBackgroundSuccessColorFocus});\n        \n        ${textFieldTokens.borderColor}: var(${tokens.textFieldBorderColorSuccess});\n        ${textFieldTokens.borderColorHover}: var(${tokens.textFieldBorderColorSuccessHover});\n        ${textFieldTokens.borderColorFocus}: var(${tokens.textFieldBorderColorSuccessFocus});\n    }\n`;\n\nexport const base = css``;\n\nexport const StyledLabel = styled.label``;\n\nexport const LeftHelper = styled.div``;\n\nexport const ContentWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const StyledDivider = styled.div``;\n\nexport const StyledContentLeft = styled.div``;\n\nexport const StyledContentRight = styled.div``;\n"],"names":["mergedConfig","mergeConfig","textFieldConfig","TextField","component","_exp","StyledInput","styled","name","class","propsAsIs","base","StyledLabel","LeftHelper","ContentWrapper","StyledDivider","StyledContentLeft","StyledContentRight"],"mappings":";;;;;AAQA,IAAMA,YAAY,gBAAGC,WAAW,CAACC,eAAe,CAAC,CAAA;AACjD,IAAMC,SAAS,gBAAGC,SAAS,CAACJ,YAAY,CAAC,CAAA;;AAEzC;AAAA,IAAAK,IAAA,GAVkBA,SAUlBA,IAAAA,GAAA;AAAA,EAAA,OACkCF,SAAS,CAAA;AAAA,CAAA,CAAA;AAApC,IAAMG,WAAW,gBAAGC,MAAM,CAAAF,IAAA,EAAA,CAAA,CAAA;AAAAG,EAAAA,IAAA,EAAA,aAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,IAAA;AAAA,CA+DhC,EAAA;AAEM,IAAMC,IAAI,GAAQ,WAAA;AAElB,IAAMC,WAAW,gBAAGL,MAAM,CAAA,OAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,aAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAAQ,EAAA;AAElC,IAAMG,UAAU,gBAAGN,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,YAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAAM,EAAA;AAE/B,IAAMI,cAAc,gBAAGP,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,gBAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAGnC,EAAA;AAEM,IAAMK,aAAa,gBAAGR,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,eAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAAM,EAAA;AAElC,IAAMM,iBAAiB,gBAAGT,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,mBAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAAM,EAAA;AAEtC,IAAMO,kBAAkB,gBAAGV,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,oBAAA;AAAAC,EAAAA,OAAAA,EAAA,UAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAA,CAAM;;;;"}