{"version":3,"file":"Range.js","sources":["../../../src/components/Range/Range.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\n\nimport type { RootProps } from '../../engines';\nimport { cx } from '../../utils';\n\nimport type { RangeProps } from './Range.types';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as disabledCSS } from './variations/_disabled/base';\nimport { base as readOnlyCSS } from './variations/_readonly/base';\nimport { getChangeHandler, getSearchHandler } from './utils';\nimport {\n    ContentWrapper,\n    LeftHelper,\n    StyledContentLeft,\n    StyledContentRight,\n    StyledDivider,\n    StyledInput,\n    StyledLabel,\n    base,\n} from './Range.styles';\nimport { classes } from './Range.tokens';\n\nexport const rangeRoot = (Root: RootProps<HTMLDivElement, RangeProps>) =>\n    forwardRef<HTMLInputElement, RangeProps>(\n        (\n            {\n                label,\n                leftHelper,\n                contentLeft,\n                contentRight,\n                view,\n                size,\n                readOnly = false,\n                disabled = false,\n\n                dividerVariant = 'dash',\n                dividerIcon,\n\n                firstValue,\n                secondValue,\n                firstValueError,\n                secondValueError,\n                firstValueSuccess,\n                secondValueSuccess,\n                firstPlaceholder,\n                secondPlaceholder,\n                firstTextfieldContentLeft,\n                firstTextfieldContentRight,\n                secondTextfieldContentLeft,\n                secondTextfieldContentRight,\n                firstTextfieldTextBefore,\n                secondTextfieldTextBefore,\n                firstTextfieldTextAfter,\n                secondTextfieldTextAfter,\n\n                onChangeFirstValue,\n                onChangeSecondValue,\n                onSearchFirstValue,\n                onSearchSecondValue,\n                onFocusFirstTextfield,\n                onFocusSecondTextfield,\n                onBlurFirstTextfield,\n                onBlurSecondTextfield,\n\n                ...rest\n            },\n            ref,\n        ) => {\n            const rangeErrorClass = firstValueError && secondValueError ? classes.rangeError : undefined;\n            const firstValueErrorClass = !rangeErrorClass && firstValueError ? classes.rangeValueError : undefined;\n            const secondValueErrorClass = !rangeErrorClass && secondValueError ? classes.rangeValueError : undefined;\n            const rangeSuccessClass = firstValueSuccess && secondValueSuccess ? classes.rangeSuccess : undefined;\n            const firstValueSuccessClass =\n                !rangeSuccessClass && firstValueSuccess ? classes.rangeValueSuccess : undefined;\n            const secondValueSuccessClass =\n                !rangeSuccessClass && secondValueSuccess ? classes.rangeValueSuccess : undefined;\n\n            const handleChangeFirstValue = getChangeHandler(onChangeFirstValue, disabled, readOnly);\n            const handleChangeSecondValue = getChangeHandler(onChangeSecondValue, disabled, readOnly);\n            const handleSearchFirstValue = getSearchHandler(onSearchFirstValue, disabled, readOnly);\n            const handleSearchSecondValue = getSearchHandler(onSearchSecondValue, disabled, readOnly);\n\n            const Divider = useMemo(() => {\n                if (dividerVariant === 'none') {\n                    return null;\n                }\n\n                if (dividerVariant === 'dash') {\n                    return <StyledDivider>â€“</StyledDivider>;\n                }\n\n                return <StyledDivider>{dividerIcon}</StyledDivider>;\n            }, [dividerVariant, dividerIcon]);\n\n            return (\n                <Root view={view} size={size} disabled={disabled} readOnly={!disabled && readOnly} ref={ref} {...rest}>\n                    {label && <StyledLabel>{label}</StyledLabel>}\n                    <ContentWrapper className={cx(rangeErrorClass, rangeSuccessClass)}>\n                        {contentLeft && <StyledContentLeft>{contentLeft}</StyledContentLeft>}\n                        <StyledInput\n                            className={cx(firstValueErrorClass, firstValueSuccessClass)}\n                            value={firstValue}\n                            readOnly={readOnly}\n                            disabled={disabled}\n                            placeholder={firstPlaceholder}\n                            contentLeft={firstTextfieldContentLeft}\n                            contentRight={firstTextfieldContentRight}\n                            textBefore={firstTextfieldTextBefore}\n                            textAfter={firstTextfieldTextAfter}\n                            onChange={handleChangeFirstValue}\n                            onSearch={handleSearchFirstValue}\n                            onFocus={onFocusFirstTextfield}\n                            onBlur={onBlurFirstTextfield}\n                        />\n                        {Divider}\n                        <StyledInput\n                            className={cx(secondValueErrorClass, secondValueSuccessClass)}\n                            value={secondValue}\n                            readOnly={readOnly}\n                            disabled={disabled}\n                            placeholder={secondPlaceholder}\n                            contentLeft={secondTextfieldContentLeft}\n                            contentRight={secondTextfieldContentRight}\n                            textBefore={secondTextfieldTextBefore}\n                            textAfter={secondTextfieldTextAfter}\n                            onChange={handleChangeSecondValue}\n                            onSearch={handleSearchSecondValue}\n                            onFocus={onFocusSecondTextfield}\n                            onBlur={onBlurSecondTextfield}\n                        />\n                        {contentRight && <StyledContentRight>{contentRight}</StyledContentRight>}\n                    </ContentWrapper>\n                    {leftHelper && <LeftHelper>{leftHelper}</LeftHelper>}\n                </Root>\n            );\n        },\n    );\n\nexport const rangeConfig = {\n    name: 'Range',\n    tag: 'div',\n    layout: rangeRoot,\n    base,\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n        disabled: {\n            css: disabledCSS,\n            attrs: true,\n        },\n        readOnly: {\n            css: readOnlyCSS,\n            attrs: true,\n        },\n    },\n    defaults: {\n        size: 'm',\n        view: 'default',\n    },\n};\n"],"names":["rangeRoot","Root","forwardRef","_ref","ref","_StyledDivider2","label","leftHelper","contentLeft","contentRight","view","size","_ref$readOnly","readOnly","_ref$disabled","disabled","_ref$dividerVariant","dividerVariant","dividerIcon","firstValue","secondValue","firstValueError","secondValueError","firstValueSuccess","secondValueSuccess","firstPlaceholder","secondPlaceholder","firstTextfieldContentLeft","firstTextfieldContentRight","secondTextfieldContentLeft","secondTextfieldContentRight","firstTextfieldTextBefore","secondTextfieldTextBefore","firstTextfieldTextAfter","secondTextfieldTextAfter","onChangeFirstValue","onChangeSecondValue","onSearchFirstValue","onSearchSecondValue","onFocusFirstTextfield","onFocusSecondTextfield","onBlurFirstTextfield","onBlurSecondTextfield","rest","_objectWithoutProperties","_excluded","rangeErrorClass","classes","rangeError","undefined","firstValueErrorClass","rangeValueError","secondValueErrorClass","rangeSuccessClass","rangeSuccess","firstValueSuccessClass","rangeValueSuccess","secondValueSuccessClass","handleChangeFirstValue","getChangeHandler","handleChangeSecondValue","handleSearchFirstValue","getSearchHandler","handleSearchSecondValue","Divider","useMemo","_StyledDivider","React","createElement","StyledDivider","_extends","StyledLabel","ContentWrapper","className","cx","StyledContentLeft","StyledInput","value","placeholder","textBefore","textAfter","onChange","onSearch","onFocus","onBlur","StyledContentRight","LeftHelper","rangeConfig","name","tag","layout","base","variations","css","viewCSS","sizeCSS","disabledCSS","attrs","readOnlyCSS","defaults"],"mappings":"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"}