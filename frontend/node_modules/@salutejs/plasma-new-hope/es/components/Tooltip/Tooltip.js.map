{"version":3,"file":"Tooltip.js","sources":["../../../src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["import React, { useEffect, forwardRef, useState } from 'react';\nimport { styled } from '@linaria/react';\n\nimport { RootProps, component } from '../../engines';\nimport { popoverClasses, popoverConfig, popoverTokens } from '../Popover';\nimport { cx } from '../../utils';\n\nimport { TooltipProps } from './Tooltip.types';\nimport { StyledContentLeft, TooltipRoot } from './Tooltip.styles';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { classes, tokens } from './Tooltip.tokens';\n\nconst ESCAPE_KEYCODE = 27;\n\nconst getStringValue = (value?: number | string) => {\n    return typeof value === 'number' ? `${value}rem` : value;\n};\n\nconst Popover = component(popoverConfig);\n\nconst StyledPopover = styled(Popover)`\n    ${popoverTokens.arrowMaskWidth}: var(${tokens.arrowMaskWidth});\n    ${popoverTokens.arrowMaskHeight}: var(${tokens.arrowMaskHeight});\n    ${popoverTokens.arrowMaskImage}: var(${tokens.arrowMaskImage});\n    ${popoverTokens.arrowBackground}: var(${tokens.arrowBackground});\n    ${popoverTokens.arrowHeight}: var(${tokens.arrowHeight});\n    ${popoverTokens.arrowEdgeMargin}: var(${tokens.arrowEdgeMargin});\n\n    &.${classes.animated} .${popoverClasses.root} {\n        transition: opacity 200ms ease-in-out, visibility 200ms ease-in-out;\n    }\n`;\n\n/**\n * Компонент для текстовых подсказок. Основное предназначение — подписи к блокам.\n */\n\nexport const tooltipRoot = (Root: RootProps<HTMLDivElement, Omit<TooltipProps, 'isOpen' | 'text'>>) =>\n    forwardRef<HTMLDivElement, TooltipProps>(\n        (\n            {\n                id,\n                text,\n                isOpen,\n                isVisible,\n                hasArrow = true,\n                arrow,\n                animated,\n                offset = [0, 8],\n                minWidth,\n                maxWidth,\n                placement = 'bottom',\n                usePortal = true,\n                target,\n                children,\n                onDismiss,\n                view,\n                size,\n                contentLeft,\n                zIndex = '9200',\n                className,\n                ...rest\n            },\n            outerRef,\n        ) => {\n            const [ref, setRef] = useState<HTMLDivElement | null>(null);\n\n            // TODO убрать после отказа от старого API\n            const innerIsOpen = isVisible || isOpen;\n            const innerHasArrow = arrow || hasArrow;\n            const showTooltip = innerIsOpen && Boolean(text?.length);\n\n            const animatedClass = animated ? classes.animated : undefined;\n\n            useEffect(() => {\n                const onKeyDown = (event: KeyboardEvent) => {\n                    if (event.keyCode === ESCAPE_KEYCODE) {\n                        onDismiss?.();\n                    }\n                };\n\n                window.addEventListener('keydown', onKeyDown);\n\n                return () => {\n                    window.removeEventListener('keydown', onKeyDown);\n                };\n            }, []);\n\n            const withContentLeft = contentLeft ? classes.hasContentLeft : undefined;\n\n            return (\n                <StyledPopover\n                    isOpen={showTooltip}\n                    placement={placement}\n                    offset={offset}\n                    zIndex={zIndex}\n                    target={target || children}\n                    usePortal={usePortal}\n                    hasArrow={innerHasArrow}\n                    aria-hidden={!innerIsOpen}\n                    aria-live=\"polite\"\n                    role=\"tooltip\"\n                    className={cx(ref?.classList.toString(), animatedClass, className)}\n                    // INFO: Прокидываем стили для Popover из Root Tooltip-а\n\n                    {...rest}\n                >\n                    <Root view={view} size={size} ref={setRef}>\n                        <TooltipRoot\n                            ref={outerRef}\n                            id={id}\n                            className={cx(withContentLeft)}\n                            maxWidth={getStringValue(maxWidth)}\n                            minWidth={getStringValue(minWidth)}\n                        >\n                            {contentLeft && <StyledContentLeft>{contentLeft}</StyledContentLeft>}\n                            {text}\n                        </TooltipRoot>\n                    </Root>\n                </StyledPopover>\n            );\n        },\n    );\n\nexport const tooltipConfig = {\n    name: 'Tooltip',\n    tag: 'div',\n    layout: tooltipRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n    },\n    defaults: {\n        view: 'default',\n        size: 'm',\n    },\n};\n"],"names":["ESCAPE_KEYCODE","getStringValue","value","concat","Popover","component","popoverConfig","_exp","StyledPopover","styled","name","class","propsAsIs","tooltipRoot","Root","forwardRef","_ref","outerRef","id","text","isOpen","isVisible","_ref$hasArrow","hasArrow","arrow","animated","_ref$offset","offset","minWidth","maxWidth","_ref$placement","placement","_ref$usePortal","usePortal","target","children","onDismiss","view","size","contentLeft","_ref$zIndex","zIndex","className","rest","_useState","useState","_useState2","_slicedToArray","ref","setRef","innerIsOpen","innerHasArrow","showTooltip","Boolean","length","animatedClass","classes","undefined","useEffect","onKeyDown","event","keyCode","window","addEventListener","removeEventListener","withContentLeft","hasContentLeft","React","createElement","_extends","role","cx","classList","toString","TooltipRoot","StyledContentLeft","tooltipConfig","tag","layout","base","variations","css","viewCSS","sizeCSS","defaults"],"mappings":"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"}