import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { applySpacing } from '../../../mixins/applySpacing.js';
import { classes } from '../tokens.js';
import { cx } from '../../../utils/index.js';

var _excluded = ["size", "children", "breakWord", "className", "style"];
var typographyOldRoot = function typographyOldRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var size = props.size,
      children = props.children,
      breakWord = props.breakWord,
      className = props.className,
      style = props.style,
      rest = _objectWithoutProperties(props, _excluded);
    var withBreakWord = breakWord ? classes.typoWithBreakWord : undefined;
    return /*#__PURE__*/React.createElement(Root, _extends({
      size: size,
      ref: ref,
      className: cx(withBreakWord, className),
      style: _objectSpread2(_objectSpread2({}, style), applySpacing(rest))
    }, rest), children);
  });
};

export { typographyOldRoot };
//# sourceMappingURL=TypographyOld.js.map
