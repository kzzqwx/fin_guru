import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { classes } from '../Header.tokens.js';
import { cx } from '../../../utils/index.js';
import { base } from './variations/_size/base.js';
import { StyledHeaderRoot, StyledInner } from './HeaderRoot.styles.js';

var _excluded = ["children", "size", "view", "gradientColor"];

/**
 * Корневой узел для шапки.
 */
var headerRoot = function headerRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, outerRootRef) {
    var children = props.children,
      size = props.size,
      view = props.view,
      gradientColor = props.gradientColor,
      rest = _objectWithoutProperties(props, _excluded);
    var gradientColorClass = gradientColor ? classes.headerWithGradient : undefined;
    return /*#__PURE__*/React.createElement(Root, {
      ref: outerRootRef,
      size: size,
      view: view
    }, /*#__PURE__*/React.createElement(StyledHeaderRoot, _extends({
      className: cx(classes.headerRoot, gradientColorClass)
    }, rest, {
      $gradientColor: gradientColor
    }), /*#__PURE__*/React.createElement(StyledInner, null, children)));
  });
};
var headerRootConfig = {
  name: 'HeaderRoot',
  tag: 'div',
  layout: headerRoot,
  base: '',
  variations: {
    size: {
      css: base
    }
  },
  defaults: {
    size: 'm'
  }
};

export { headerRoot, headerRootConfig };
//# sourceMappingURL=HeaderRoot.js.map
