import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import '@linaria/core';
import { component, mergeConfig } from '../../../../engines/common.js';
import { buttonConfig } from '../../../Button/Button.js';
import { classes, tokens } from '../../Header.tokens.js';
import '@linaria/react';
import { IconChevronLeft } from '../../../_Icon/Icons/IconChevronLeft.js';
import { cx } from '../../../../utils/index.js';
import { base } from './HeaderArrow.styles.js';
import { base as base$2 } from './variations/_size/base.js';
import { base as base$1 } from './variations/_view/base.js';

var _excluded = ["arrow", "iconSize", "value"];
var mergedButtonConfig = /*#__PURE__*/mergeConfig(buttonConfig);
var Button = /*#__PURE__*/component(mergedButtonConfig);

/**
 * Кнопка-стрелка с возможностью отображения в двух типах - "назад" или "свернуть".
 */
var headerArrowRoot = function headerArrowRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, outerRootRef) {
    var arrow = props.arrow,
      _props$iconSize = props.iconSize,
      iconSize = _props$iconSize === void 0 ? 's' : _props$iconSize,
      value = props.value,
      rest = _objectWithoutProperties(props, _excluded);
    var minimizeClass = arrow === 'minimize' ? classes.headerArrowIconMinimize : undefined;
    return /*#__PURE__*/React.createElement(Root, {
      ref: outerRootRef
    }, /*#__PURE__*/React.createElement(Button, _extends({
      view: "clear",
      size: "s",
      tabIndex: -1,
      className: classes.headerArrow,
      value: String(value)
    }, rest), /*#__PURE__*/React.createElement(IconChevronLeft, _extends({
      size: iconSize,
      sizeCustomProperty: tokens.headerArrowIconSize,
      className: cx(classes.headerArrowIcon, minimizeClass),
      color: "inherit"
    }, props))));
  });
};
var headerArrowConfig = {
  name: 'HeaderArrow',
  tag: 'div',
  layout: headerArrowRoot,
  base: base,
  variations: {
    view: {
      css: base$1
    },
    size: {
      css: base$2
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};

export { headerArrowConfig, headerArrowRoot };
//# sourceMappingURL=HeaderArrow.js.map
