import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { cx } from '../../utils/index.js';
import { IconCross } from '../_Icon/Icons/IconCross.js';
import { classes } from './Toast.tokens.js';
import { base as base$1 } from './variations/_view/base.js';
import { base as base$2 } from './variations/_size/base.js';
import { base as base$3 } from './variations/_pilled/base.js';
import { StyledContentLeft, StyledContent, CloseIconWrapper, base } from './Toast.styles.js';

var _IconCross;
var _excluded = ["role", "width", "text", "hasClose", "contentLeft", "view", "size", "pilled", "className", "style", "onCloseButtonClick"];

// TODO https://github.com/salute-developers/plasma/issues/1015
var toastRoot = function toastRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var _props$role = props.role,
      role = _props$role === void 0 ? 'status' : _props$role,
      width = props.width,
      text = props.text,
      hasClose = props.hasClose,
      contentLeft = props.contentLeft,
      view = props.view,
      size = props.size,
      pilled = props.pilled,
      className = props.className,
      style = props.style,
      onCloseButtonClick = props.onCloseButtonClick,
      rest = _objectWithoutProperties(props, _excluded);
    var pilledClass = pilled ? classes.toastPilled : undefined;
    var fixedWidth = !Number.isNaN(Number(width)) ? "".concat(width, "%") : width;
    var ariaLive = 'polite';
    var ariaAtomic = false;
    if (role === 'alert') {
      ariaLive = 'assertive';
    } else if (role === 'status') {
      ariaAtomic = true;
    }
    return /*#__PURE__*/React.createElement(Root, _extends({
      view: view,
      size: size,
      pilled: pilled,
      className: cx(pilledClass, className),
      style: _objectSpread2({
        width: width ? fixedWidth : 'unset'
      }, style),
      ref: ref,
      role: role,
      "aria-live": ariaLive,
      "aria-atomic": ariaAtomic
    }, rest), contentLeft && /*#__PURE__*/React.createElement(StyledContentLeft, null, contentLeft), /*#__PURE__*/React.createElement(StyledContent, null, text), hasClose && /*#__PURE__*/React.createElement(CloseIconWrapper, {
      view: "clear",
      size: "s",
      onClick: onCloseButtonClick,
      className: cx(classes.closeIcon),
      stretching: "fixed"
    }, _IconCross || (_IconCross = /*#__PURE__*/React.createElement(IconCross, {
      size: "s",
      color: "inherit"
    }))));
  });
};
var toastConfig = {
  name: 'Toast',
  tag: 'div',
  layout: toastRoot,
  base: base,
  variations: {
    view: {
      css: base$1
    },
    size: {
      css: base$2
    },
    pilled: {
      css: base$3,
      attrs: true
    }
  },
  defaults: {
    view: 'primary',
    size: 'm'
  }
};

export { toastConfig, toastRoot };
//# sourceMappingURL=Toast.js.map
