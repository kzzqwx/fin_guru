import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { base as base$1 } from './variations/_view/base.js';
import { base as base$2 } from './variations/_size/base.js';
import { base } from './Counter.styles.js';

var _excluded = ["count", "maxCount", "size", "view"];
var counterRoot = function counterRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var count = props.count,
      maxCount = props.maxCount,
      size = props.size,
      view = props.view,
      rest = _objectWithoutProperties(props, _excluded);
    var content = maxCount && count > maxCount ? "".concat(maxCount, "+") : count;
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: ref,
      view: view,
      size: size,
      count: count
    }, rest), content);
  });
};
var counterConfig = {
  name: 'Counter',
  tag: 'div',
  layout: counterRoot,
  base: base,
  variations: {
    view: {
      css: base$1
    },
    size: {
      css: base$2
    }
  },
  defaults: {
    view: 'primary',
    size: 'xs'
  }
};

export { counterConfig, counterRoot };
//# sourceMappingURL=Counter.js.map
