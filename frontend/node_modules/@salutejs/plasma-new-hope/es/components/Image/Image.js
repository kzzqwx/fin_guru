import { objectWithoutProperties as _objectWithoutProperties, extends as _extends, objectSpread2 as _objectSpread2 } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { StyledImg, StyledDivImg, base } from './Image.styles.js';
import { ratios } from './Image.utils.js';

var _excluded = ["src", "srcSet", "sizes", "ratio", "customRatio", "alt", "width", "height", "base", "style"];

/**
 * Компонент для отображения картинок.
 */
var imageRoot = function imageRoot(Root) {
  return /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {
    var src = _ref.src,
      srcSet = _ref.srcSet,
      sizes = _ref.sizes,
      ratio = _ref.ratio,
      customRatio = _ref.customRatio,
      alt = _ref.alt,
      width = _ref.width,
      height = _ref.height,
      _ref$base = _ref.base,
      base = _ref$base === void 0 ? 'img' : _ref$base,
      style = _ref.style,
      rest = _objectWithoutProperties(_ref, _excluded);
    var widthToken = {
      '--plasma_private-image-width': width || '100%'
    };
    var heightToken = {
      '--plasma_private-image-height': height || '0'
    };
    var rootCustomRatio = customRatio ? "".concat(customRatio, "%") : 'unset';
    var ratioToken = {
      '--plasma_private-image-pading-bottom': ratio ? "".concat(ratios[ratio], "%") : rootCustomRatio
    };
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: outerRootRef,
      style: _objectSpread2(_objectSpread2(_objectSpread2(_objectSpread2({}, style), widthToken), heightToken), ratioToken)
    }, rest), base === 'img' && /*#__PURE__*/React.createElement(StyledImg, {
      src: src,
      srcSet: srcSet,
      sizes: sizes,
      alt: alt
    }), base === 'div' && /*#__PURE__*/React.createElement(StyledDivImg, {
      style: {
        backgroundImage: "url(".concat(src, ")")
      },
      role: "img",
      "aria-label": alt
    }));
  });
};
var imageConfig = {
  name: 'Image',
  tag: 'div',
  layout: imageRoot,
  base: base,
  variations: {},
  defaults: {}
};

export { imageConfig, imageRoot };
//# sourceMappingURL=Image.js.map
