{"version":3,"file":"Modal.js","sources":["../../../src/components/Modal/Modal.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useMemo } from 'react';\nimport { useFocusTrap, useForkRef, safeUseId } from '@salutejs/plasma-core';\n\nimport { RootProps, component } from '../../engines';\nimport { popupConfig, usePopupContext } from '../Popup';\nimport { Overlay } from '../Overlay';\nimport { DEFAULT_Z_INDEX } from '../Popup/utils';\n\nimport { classes, tokens } from './Modal.tokens';\nimport { ModalProps } from './Modal.types';\nimport { useModal } from './hooks';\nimport { base as viewCSS } from './variations/_view/base';\nimport { getIdLastModal } from './ModalContext';\n\n// issue #823\nconst Popup = component(popupConfig);\n\n/**\n * Modal.\n * Управляет показом/скрытием, подложкой и анимацией визуальной части модального окна.\n */\nexport const modalRoot = (Root: RootProps<HTMLDivElement, ModalProps>) =>\n    forwardRef<HTMLDivElement, ModalProps>(\n        (\n            {\n                id,\n                withAnimation,\n                onClose,\n                onOverlayClick,\n                onEscKeyDown,\n                closeOnEsc = true,\n                closeOnOverlayClick = true,\n                withBlur,\n                initialFocusRef,\n                focusAfterRef,\n                zIndex,\n                popupInfo,\n                children,\n                view,\n                isOpen,\n                ...rest\n            },\n            outerRootRef,\n        ) => {\n            const trapRef = useFocusTrap(true, initialFocusRef, focusAfterRef);\n            const popupController = usePopupContext();\n\n            const innerRef = useForkRef<HTMLDivElement>(trapRef, outerRootRef);\n\n            const uniqId = safeUseId();\n            const innerId = id || uniqId;\n            const overlayBackgroundToken = withBlur\n                ? `var(${tokens.modalOverlayWithBlurColor})`\n                : `var(${tokens.modalOverlayColor})`;\n\n            const { modalInfo } = useModal({ id: innerId, isOpen, closeOnEsc, onEscKeyDown, onClose, popupInfo });\n            const transparent = useMemo(() => getIdLastModal(popupController.items) !== innerId, [\n                innerId,\n                popupController.items,\n            ]);\n\n            const onModalOverlayKeyDown = useCallback(\n                (event: React.MouseEvent<HTMLDivElement>) => {\n                    if (onOverlayClick) {\n                        onOverlayClick(event);\n                        return;\n                    }\n\n                    if (onClose) {\n                        onClose();\n                    }\n                },\n                [closeOnOverlayClick, onOverlayClick, onClose],\n            );\n\n            return (\n                <Popup\n                    id={innerId}\n                    isOpen={isOpen}\n                    ref={innerRef}\n                    popupInfo={modalInfo}\n                    withAnimation={withAnimation}\n                    zIndex={zIndex}\n                    overlay={\n                        <Root view={view}>\n                            <Overlay\n                                className={classes.overlay}\n                                zIndex={zIndex || DEFAULT_Z_INDEX}\n                                backgroundColorProperty={overlayBackgroundToken}\n                                withBlur={withBlur}\n                                transparent={transparent}\n                                isClickable={closeOnOverlayClick}\n                                onOverlayClick={onModalOverlayKeyDown}\n                            />\n                        </Root>\n                    }\n                    {...rest}\n                >\n                    {children}\n                </Popup>\n            );\n        },\n    );\n\nexport const modalConfig = {\n    name: 'Modal',\n    tag: 'div',\n    layout: modalRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n    },\n    defaults: {\n        view: 'default',\n    },\n};\n"],"names":["Popup","component","popupConfig","modalRoot","Root","forwardRef","_ref","outerRootRef","id","withAnimation","onClose","onOverlayClick","onEscKeyDown","_ref$closeOnEsc","closeOnEsc","_ref$closeOnOverlayCl","closeOnOverlayClick","withBlur","initialFocusRef","focusAfterRef","zIndex","popupInfo","children","view","isOpen","rest","_objectWithoutProperties","_excluded","trapRef","useFocusTrap","popupController","usePopupContext","innerRef","useForkRef","uniqId","safeUseId","innerId","overlayBackgroundToken","concat","tokens","modalOverlayWithBlurColor","modalOverlayColor","_useModal","useModal","modalInfo","transparent","useMemo","getIdLastModal","items","onModalOverlayKeyDown","useCallback","event","React","createElement","_extends","ref","overlay","Overlay","className","classes","DEFAULT_Z_INDEX","backgroundColorProperty","isClickable","modalConfig","name","tag","layout","base","variations","css","viewCSS","defaults"],"mappings":"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"}