{"version":3,"file":"Chip.js","sources":["../../../src/components/Chip/Chip.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\n\nimport type { RootProps } from '../../engines';\nimport { IconClose } from '../_Icon/Icons/IconClose';\nimport { cx } from '../../utils';\n\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as disabledCSS } from './variations/_disabled/base';\nimport { base as readonlyCSS } from './variations/_readonly/base';\nimport { base as focusedCSS } from './variations/_focused/base';\nimport { base as pilledCSS } from './variations/_pilled/base';\nimport type { ChipProps } from './Chip.types';\nimport { StyledContentClear, StyledContentLeft, StyledContentMain, StyledContentRight, base } from './Chip.styles';\nimport { classes, tokens } from './Chip.tokens';\n\nexport const chipRoot = (Root: RootProps<HTMLButtonElement, ChipProps>) =>\n    forwardRef<HTMLButtonElement, ChipProps>((props, ref) => {\n        const {\n            children,\n            text,\n            contentLeft,\n            contentRight,\n            contentClearButton,\n            size,\n            className,\n            onClear,\n            onClick,\n            pilled = false,\n            readOnly = false,\n            disabled = false,\n            ...rest\n        } = props;\n\n        const txt = !text && typeof children === 'string' ? children : text;\n        const pilledClass = pilled ? classes.pilled : undefined;\n\n        const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n            if (disabled || readOnly) {\n                return;\n            }\n\n            onClick?.(event);\n            onClear?.();\n        };\n\n        const ClearContent = useMemo(() => {\n            return (\n                contentClearButton || (\n                    <StyledContentClear>\n                        <IconClose sizeCustomProperty={tokens.closeIconSize} color=\"inherit\" />\n                    </StyledContentClear>\n                )\n            );\n        }, [contentClearButton, tokens.closeIconSize]);\n\n        return (\n            <Root\n                type=\"button\"\n                ref={ref}\n                className={cx(pilledClass, className)}\n                tabIndex={readOnly ? -1 : 0}\n                onClick={handleClick}\n                disabled={disabled}\n                pilled={pilled}\n                readOnly={!disabled && readOnly}\n                size={size}\n                {...rest}\n            >\n                {contentLeft && <StyledContentLeft>{contentLeft}</StyledContentLeft>}\n                {txt ? <StyledContentMain>{txt}</StyledContentMain> : children}\n                {contentRight && <StyledContentRight>{contentRight}</StyledContentRight>}\n                {ClearContent}\n            </Root>\n        );\n    });\n\nexport const chipConfig = {\n    name: 'Chip',\n    tag: 'button',\n    layout: chipRoot,\n    base,\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n        disabled: {\n            css: disabledCSS,\n            attrs: true,\n        },\n        readOnly: {\n            css: readonlyCSS,\n            attrs: true,\n        },\n        focused: {\n            css: focusedCSS,\n        },\n        pilled: {\n            css: pilledCSS,\n            attrs: true,\n        },\n    },\n    defaults: {\n        view: 'default',\n        size: 'm',\n    },\n};\n"],"names":["chipRoot","Root","forwardRef","props","ref","children","text","contentLeft","contentRight","contentClearButton","size","className","onClear","onClick","_props$pilled","pilled","_props$readOnly","readOnly","_props$disabled","disabled","rest","_objectWithoutProperties","_excluded","txt","pilledClass","classes","undefined","handleClick","event","ClearContent","useMemo","React","createElement","StyledContentClear","IconClose","sizeCustomProperty","tokens","closeIconSize","color","_extends","type","cx","tabIndex","StyledContentLeft","StyledContentMain","StyledContentRight","chipConfig","name","tag","layout","base","variations","view","css","viewCSS","sizeCSS","disabledCSS","attrs","readonlyCSS","focused","focusedCSS","pilledCSS","defaults"],"mappings":";;;;;;;;;;;;;;IAgBaA,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,IAA6C,EAAA;AAAA,EAAA,oBAClEC,UAAU,CAA+B,UAACC,KAAK,EAAEC,GAAG,EAAK;AACrD,IAAA,IACIC,QAAQ,GAaRF,KAAK,CAbLE,QAAQ;MACRC,IAAI,GAYJH,KAAK,CAZLG,IAAI;MACJC,WAAW,GAWXJ,KAAK,CAXLI,WAAW;MACXC,YAAY,GAUZL,KAAK,CAVLK,YAAY;MACZC,kBAAkB,GASlBN,KAAK,CATLM,kBAAkB;MAClBC,IAAI,GAQJP,KAAK,CARLO,IAAI;MACJC,SAAS,GAOTR,KAAK,CAPLQ,SAAS;MACTC,OAAO,GAMPT,KAAK,CANLS,OAAO;MACPC,OAAO,GAKPV,KAAK,CALLU,OAAO;MAAAC,aAAA,GAKPX,KAAK,CAJLY,MAAM;AAANA,MAAAA,MAAM,GAAAD,aAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,aAAA;MAAAE,eAAA,GAIdb,KAAK,CAHLc,QAAQ;AAARA,MAAAA,QAAQ,GAAAD,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA;MAAAE,eAAA,GAGhBf,KAAK,CAFLgB,QAAQ;AAARA,MAAAA,QAAQ,GAAAD,eAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,eAAA;AACbE,MAAAA,IAAI,GAAAC,wBAAA,CACPlB,KAAK,EAAAmB,SAAA,CAAA,CAAA;AAET,IAAA,IAAMC,GAAG,GAAG,CAACjB,IAAI,IAAI,OAAOD,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGC,IAAI,CAAA;IACnE,IAAMkB,WAAW,GAAGT,MAAM,GAAGU,OAAO,CAACV,MAAM,GAAGW,SAAS,CAAA;AAEvD,IAAA,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAA0C,EAAK;MAChE,IAAIT,QAAQ,IAAIF,QAAQ,EAAE;AACtB,QAAA,OAAA;AACJ,OAAA;AAEAJ,MAAAA,OAAO,aAAPA,OAAO,KAAA,KAAA,CAAA,IAAPA,OAAO,CAAGe,KAAK,CAAC,CAAA;AAChBhB,MAAAA,OAAO,KAAPA,IAAAA,IAAAA,OAAO,KAAPA,KAAAA,CAAAA,IAAAA,OAAO,EAAI,CAAA;KACd,CAAA;AAED,IAAA,IAAMiB,YAAY,GAAGC,OAAO,CAAC,YAAM;AAC/B,MAAA,OACIrB,kBAAkB,iBACdsB,KAAA,CAAAC,aAAA,CAACC,kBAAkB,EAAA,IAAA,eACfF,KAAA,CAAAC,aAAA,CAACE,SAAS,EAAA;QAACC,kBAAkB,EAAEC,MAAM,CAACC,aAAc;AAACC,QAAAA,KAAK,EAAC,SAAA;AAAS,OAAE,CACtD,CACvB,CAAA;KAER,EAAE,CAAC7B,kBAAkB,EAAE2B,MAAM,CAACC,aAAa,CAAC,CAAC,CAAA;AAE9C,IAAA,oBACIN,KAAA,CAAAC,aAAA,CAAC/B,IAAI,EAAAsC,QAAA,CAAA;AACDC,MAAAA,IAAI,EAAC,QAAQ;AACbpC,MAAAA,GAAG,EAAEA,GAAI;AACTO,MAAAA,SAAS,EAAE8B,EAAE,CAACjB,WAAW,EAAEb,SAAS,CAAE;AACtC+B,MAAAA,QAAQ,EAAEzB,QAAQ,GAAG,CAAC,CAAC,GAAG,CAAE;AAC5BJ,MAAAA,OAAO,EAAEc,WAAY;AACrBR,MAAAA,QAAQ,EAAEA,QAAS;AACnBJ,MAAAA,MAAM,EAAEA,MAAO;AACfE,MAAAA,QAAQ,EAAE,CAACE,QAAQ,IAAIF,QAAS;AAChCP,MAAAA,IAAI,EAAEA,IAAAA;AAAK,KAAA,EACPU,IAAI,CAEPb,EAAAA,WAAW,iBAAIwB,KAAA,CAAAC,aAAA,CAACW,iBAAiB,EAAA,IAAA,EAAEpC,WAA+B,CAAC,EACnEgB,GAAG,gBAAGQ,KAAA,CAAAC,aAAA,CAACY,iBAAiB,EAAA,IAAA,EAAErB,GAAuB,CAAC,GAAGlB,QAAQ,EAC7DG,YAAY,iBAAIuB,KAAA,CAAAC,aAAA,CAACa,kBAAkB,EAAA,IAAA,EAAErC,YAAiC,CAAC,EACvEqB,YACC,CAAC,CAAA;AAEf,GAAC,CAAC,CAAA;AAAA,EAAA;AAEC,IAAMiB,UAAU,GAAG;AACtBC,EAAAA,IAAI,EAAE,MAAM;AACZC,EAAAA,GAAG,EAAE,QAAQ;AACbC,EAAAA,MAAM,EAAEjD,QAAQ;AAChBkD,EAAAA,IAAI,EAAJA,IAAI;AACJC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE;AACFC,MAAAA,GAAG,EAAEC,MAAAA;KACR;AACD5C,IAAAA,IAAI,EAAE;AACF2C,MAAAA,GAAG,EAAEE,MAAAA;KACR;AACDpC,IAAAA,QAAQ,EAAE;AACNkC,MAAAA,GAAG,EAAEG,MAAW;AAChBC,MAAAA,KAAK,EAAE,IAAA;KACV;AACDxC,IAAAA,QAAQ,EAAE;AACNoC,MAAAA,GAAG,EAAEK,MAAW;AAChBD,MAAAA,KAAK,EAAE,IAAA;KACV;AACDE,IAAAA,OAAO,EAAE;AACLN,MAAAA,GAAG,EAAEO,MAAAA;KACR;AACD7C,IAAAA,MAAM,EAAE;AACJsC,MAAAA,GAAG,EAAEQ,MAAS;AACdJ,MAAAA,KAAK,EAAE,IAAA;AACX,KAAA;GACH;AACDK,EAAAA,QAAQ,EAAE;AACNV,IAAAA,IAAI,EAAE,SAAS;AACf1C,IAAAA,IAAI,EAAE,GAAA;AACV,GAAA;AACJ;;;;"}