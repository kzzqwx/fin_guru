{"version":3,"file":"IconRoot.js","sources":["../../../src/components/_Icon/IconRoot.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@linaria/react';\n\nconst sizeMap = {\n    xxs: 1, // 16px\n    xs: 1, // 16px\n    s: 1.5, // 24px\n    m: 2.25, // 36px\n    l: 2.75, // 44px\n    xl: 3.5, // 56px\n    xxl: 6.25, // 100px\n};\n\nexport type IconSize = keyof typeof sizeMap;\n\nexport interface IconProps {\n    size?: IconSize;\n    color?: string;\n    className?: string;\n    /*\n     * Прорпс, который принимает название css-переменной.\n     * В значении токена может быть как rem, так и другая единица измерения (значение задается через конфиг).\n     * @example\n     * const token = '--plasma-icon-size';\n     * ...\n     * <Icon sizeCustomProperty={token} {...rest}/>\n     */\n    sizeCustomProperty?: string;\n}\n\ninterface IconRootProps extends IconProps {\n    size: IconSize;\n    icon: React.FC<IconProps>;\n}\n\nconst StyledRoot = styled.div<{ w: string }>`\n    display: inline-flex;\n    width: ${({ w }) => w};\n    height: ${({ w }) => w};\n    flex: 0 0 ${({ w }) => w};\n`;\n\nexport const IconRoot: React.FC<IconRootProps> = ({\n    icon: IconComponent,\n    size,\n    color,\n    className,\n    sizeCustomProperty,\n}) => {\n    const c = color || 'var(--plasma-colors-primary)';\n\n    const w = sizeCustomProperty ? `var(${sizeCustomProperty})` : `${sizeMap[size]}rem`;\n\n    return (\n        <StyledRoot aria-hidden w={w} className={className}>\n            <IconComponent color={c} size={size} />\n        </StyledRoot>\n    );\n};\n"],"names":["sizeMap","xxs","xs","s","m","l","xl","xxl","_exp3","_ref","w","StyledRoot","styled","name","class","propsAsIs","vars","IconRoot","_ref2","IconComponent","icon","size","color","className","sizeCustomProperty","c","concat","React","createElement"],"mappings":";;;AAGA,IAAMA,OAAO,GAAG;AACZC,EAAAA,GAAG,EAAE,CAAC;AAAE;AACRC,EAAAA,EAAE,EAAE,CAAC;AAAE;AACPC,EAAAA,CAAC,EAAE,GAAG;AAAE;AACRC,EAAAA,CAAC,EAAE,IAAI;AAAE;AACTC,EAAAA,CAAC,EAAE,IAAI;AAAE;AACTC,EAAAA,EAAE,EAAE,GAAG;AAAE;EACTC,GAAG,EAAE,IAAI;AACb,CAAC,CAAA;AAsBA,IAAAC,KAAA,GAhCiBA,SAgCjBA,KAAAA,GAAA;AAAA,EAAA,OAMe,UAAAC,IAAA,EAAA;AAAA,IAAA,IAAGC,CAAAA,GAAAA,IAAAA,CAAAA,CAAAA,CAAAA;AAAAA,IAAAA,OAAQA,CAAC,CAAA;AAAA,GAAA,CAAA;AAAA,CAAA,CAAA;AAJ5B,IAAMC,UAAU,gBAAGC,MAAM,CAAA,KAAA,CAAA,CAAA;AAAAC,EAAAA,IAAA,EAAA,YAAA;AAAAC,EAAAA,OAAAA,EAAA,SAAA;AAAAC,EAAAA,SAAA,EAAA,KAAA;AAAAC,EAAAA,IAAA,EAAA;AAAA,IAAA,WAAA,EAAA,cAITR,KAAY,EAAA,CAAA;AAAA,GAAA;AAAA,CAC3B,CAAA,CAAA;IAEYS,QAAiC,GAAGA,SAApCA,QAAiCA,CAAAC,KAAA,EAMxC;AAAA,EAAA,IALIC,aAAa,GAAAD,KAAA,CAAnBE,IAAI;IACJC,IAAI,GAAAH,KAAA,CAAJG,IAAI;IACJC,KAAK,GAAAJ,KAAA,CAALI,KAAK;IACLC,SAAS,GAAAL,KAAA,CAATK,SAAS;IACTC,kBAAAA,GAAAA,KAAAA,CAAAA,kBAAAA,CAAAA;AAEA,EAAA,IAAMC,CAAC,GAAGH,KAAK,IAAI,8BAA8B,CAAA;AAEjD,EAAA,IAAMZ,CAAC,GAAGc,kBAAkB,GAAA,MAAA,CAAAE,MAAA,CAAUF,kBAAmB,EAAAE,GAAAA,CAAAA,GAAAA,EAAAA,CAAAA,MAAA,CAAQ1B,OAAO,CAACqB,IAAI,CAAE,EAAI,KAAA,CAAA,CAAA;AAEnF,EAAA,oBACIM,KAAA,CAAAC,aAAA,CAACjB,UAAU,EAAA;IAAC,aAAW,EAAA,IAAA;AAACD,IAAAA,CAAC,EAAEA,CAAE;AAACa,IAAAA,SAAS,EAAEA,SAAAA;AAAU,GAAA,eAC/CI,KAAA,CAAAC,aAAA,CAACT,aAAa,EAAA;AAACG,IAAAA,KAAK,EAAEG,CAAE;AAACJ,IAAAA,IAAI,EAAEA,IAAAA;AAAK,GAAA,CAC5B,CAAC,CAAA;AAErB;;;;"}