{"version":3,"file":"CalendarDays.js","sources":["../../../../../src/components/Calendar/ui/CalendarDays/CalendarDays.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from 'react';\n\nimport { useDays } from '../../hooks';\nimport {\n    canSelectDate,\n    FULL_DAY_NAMES,\n    getInRange,\n    getSideInRange,\n    isSameDay,\n    isSelectProcess,\n    ROW_STEP,\n    SHORT_DAY_NAMES,\n} from '../../utils';\nimport { CalendarDayItem } from '../CalendarDayItem/CalendarDayItem';\nimport { DateItem } from '../../Calendar.types';\n\nimport { StyledCalendarDays, StyledCalendarDaysHint, StyledFlex } from './CalendarDays.styles';\nimport type { CalendarDaysProps } from './CalendarDays.types';\n\n/**\n * Компонент дней в календаре.\n */\nexport const CalendarDays: React.FC<CalendarDaysProps> = ({\n    date: currentDate,\n    value,\n    eventList,\n    disabledList,\n    min,\n    max,\n    includeEdgeDates,\n    hoveredDay,\n    selectIndexes,\n    isDouble,\n    isSecond,\n    outerRefs,\n    onChangeDay,\n    onHoverDay,\n    onSetSelected,\n    onKeyDown,\n}) => {\n    const [days, selected] = useDays(currentDate, value, eventList, disabledList, min, max, includeEdgeDates);\n    const selectedRef = useRef(selected);\n    const onSetSelectedRef = useRef(onSetSelected);\n\n    const offset = isSecond ? ROW_STEP : 0;\n\n    const getSelectedDate = useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            const { day, monthIndex, year } = event.currentTarget.dataset;\n\n            const selectedDate = {\n                day: Number(day),\n                monthIndex: Number(monthIndex),\n                year: Number(year),\n            };\n\n            if (!canSelectDate(selectedDate, value, disabledList)) {\n                return;\n            }\n\n            return selectedDate;\n        },\n        [disabledList, value],\n    );\n\n    const handleOnChangeDay = useCallback(\n        (i: number, j: number) => (event: React.MouseEvent<HTMLDivElement>) => {\n            const selectedDate = getSelectedDate(event);\n\n            if (!selectedDate) {\n                return;\n            }\n\n            onChangeDay(selectedDate, [i + offset, j]);\n\n            if (isSelectProcess(value)) {\n                onHoverDay?.(undefined);\n            }\n        },\n        [getSelectedDate, onChangeDay, offset, value, onHoverDay],\n    );\n\n    const handleOnHoverDay = useCallback(\n        (event: React.MouseEvent<HTMLDivElement>) => {\n            const selectedDate = getSelectedDate(event);\n            const isSelectedDone = Array.isArray(value) && value[0] && value[1];\n\n            if (!selectedDate || !Array.isArray(value) || isSelectedDone) {\n                return;\n            }\n\n            onHoverDay?.(selectedDate);\n        },\n        [getSelectedDate, onHoverDay, value],\n    );\n\n    const handleOnFocusDay = useCallback(() => {\n        // заглушка будет убрана при реализации доступности\n    }, []);\n\n    const getRefs = useCallback(\n        (element: HTMLDivElement, isDayInCurrentMonth: boolean, i: number, j: number) => {\n            if (isDayInCurrentMonth) {\n                outerRefs.current[i + offset][j] = element;\n            }\n        },\n        [offset, outerRefs],\n    );\n\n    useEffect(() => {\n        if (selectedRef.current) {\n            onSetSelectedRef.current?.(selectedRef.current);\n        }\n    }, []);\n\n    return (\n        <StyledCalendarDays role=\"grid\" aria-labelledby=\"id-grid-label\" onKeyDown={onKeyDown}>\n            <StyledCalendarDaysHint id=\"withShift\">\n                Для навигации только по доступным датам удерживайте клавишу Shift.\n            </StyledCalendarDaysHint>\n            <StyledFlex role=\"row\">\n                {SHORT_DAY_NAMES.map((name) => (\n                    <CalendarDayItem\n                        role=\"columnheader\"\n                        aria-label={FULL_DAY_NAMES[name]}\n                        key={name}\n                        dayOfWeek\n                        day={name}\n                    />\n                ))}\n            </StyledFlex>\n            {days.map((day: DateItem[], i) => (\n                <StyledFlex role=\"row\" key={i}>\n                    {day.map(\n                        (\n                            {\n                                date,\n                                events,\n                                disabled,\n                                isSelected,\n                                isCurrent,\n                                isDayInCurrentMonth,\n                                inRange,\n                                isOutOfMinMaxRange = false,\n                                disabledArrowKey,\n                                disabledMonths,\n                            },\n                            j,\n                        ) => (\n                            <CalendarDayItem\n                                ref={(element: HTMLDivElement) => getRefs(element, isDayInCurrentMonth, i, j)}\n                                eventList={events}\n                                disabled={disabled}\n                                day={date.day}\n                                year={date.year}\n                                monthIndex={date.monthIndex}\n                                isFocused={\n                                    i + offset === selectIndexes?.[0] && j === selectIndexes?.[1] && !isOutOfMinMaxRange\n                                }\n                                isSelected={isSelected}\n                                isCurrent={isCurrent}\n                                isDayInCurrentMonth={isDayInCurrentMonth}\n                                isDouble={isDouble}\n                                isHovered={isSameDay(date, hoveredDay)}\n                                inRange={getInRange(value, date, hoveredDay, inRange)}\n                                sideInRange={getSideInRange(value, date, hoveredDay, isSelected)}\n                                onClick={disabled ? undefined : handleOnChangeDay(i, j)}\n                                onMouseOver={disabled ? undefined : handleOnHoverDay}\n                                onFocus={handleOnFocusDay}\n                                key={`StyledDay-${j}`}\n                                role=\"gridcell\"\n                                disabledArrowKey={disabledArrowKey}\n                                disabledMonths={disabledMonths}\n                            />\n                        ),\n                    )}\n                </StyledFlex>\n            ))}\n        </StyledCalendarDays>\n    );\n};\n"],"names":["CalendarDays","_ref","currentDate","date","value","eventList","disabledList","min","max","includeEdgeDates","hoveredDay","selectIndexes","isDouble","isSecond","outerRefs","onChangeDay","onHoverDay","onSetSelected","onKeyDown","_useDays","useDays","_useDays2","_slicedToArray","days","selected","selectedRef","useRef","onSetSelectedRef","offset","ROW_STEP","getSelectedDate","useCallback","event","_event$currentTarget$","currentTarget","dataset","day","monthIndex","year","selectedDate","Number","canSelectDate","handleOnChangeDay","i","j","isSelectProcess","undefined","handleOnHoverDay","isSelectedDone","Array","isArray","handleOnFocusDay","getRefs","element","isDayInCurrentMonth","current","useEffect","_onSetSelectedRef$cur","call","React","createElement","StyledCalendarDays","role","_StyledCalendarDaysHi","StyledCalendarDaysHint","id","StyledFlex","SHORT_DAY_NAMES","map","name","CalendarDayItem","FULL_DAY_NAMES","key","dayOfWeek","_ref2","events","disabled","isSelected","isCurrent","inRange","_ref2$isOutOfMinMaxRa","isOutOfMinMaxRange","disabledArrowKey","disabledMonths","ref","isFocused","isHovered","isSameDay","getInRange","sideInRange","getSideInRange","onClick","onMouseOver","onFocus","concat"],"mappings":"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"}