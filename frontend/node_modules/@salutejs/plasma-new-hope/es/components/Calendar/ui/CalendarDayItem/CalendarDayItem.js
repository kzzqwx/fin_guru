import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { memo, forwardRef } from 'react';
import { cx } from '../../../../utils/index.js';
import { classes } from '../../Calendar.tokens.js';
import { StyledDayRoot, StyledDay, StyledEvents, StyledEvent } from './CalendarDayItem.styles.js';

var _excluded = ["isFocused", "dayOfWeek", "disabled", "isCurrent", "isSelected", "isDayInCurrentMonth", "isDouble", "inRange", "isHovered", "sideInRange", "eventList", "day", "monthIndex", "year", "onClick", "onMouseOver", "onFocus", "disabledArrowKey", "disabledMonths"];

/**
 * Компонент дня в календаре.
 */
var CalendarDayItem = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, outerRef) {
  var isFocused = _ref.isFocused,
    dayOfWeek = _ref.dayOfWeek,
    disabled = _ref.disabled,
    isCurrent = _ref.isCurrent,
    isSelected = _ref.isSelected,
    isDayInCurrentMonth = _ref.isDayInCurrentMonth,
    isDouble = _ref.isDouble,
    inRange = _ref.inRange,
    isHovered = _ref.isHovered,
    sideInRange = _ref.sideInRange,
    _ref$eventList = _ref.eventList,
    eventList = _ref$eventList === void 0 ? [] : _ref$eventList,
    day = _ref.day,
    monthIndex = _ref.monthIndex,
    year = _ref.year,
    onClick = _ref.onClick,
    onMouseOver = _ref.onMouseOver,
    onFocus = _ref.onFocus,
    disabledArrowKey = _ref.disabledArrowKey,
    disabledMonths = _ref.disabledMonths,
    rest = _objectWithoutProperties(_ref, _excluded);
  var selectableClass = !dayOfWeek && !disabled ? classes.selectableItem : undefined;
  var selectedClass = isSelected ? classes.selectedItem : undefined;
  var currentClass = isCurrent ? classes.currentItem : undefined;
  var hoveredClass = isHovered ? classes.hoveredItem : undefined;
  var dayOfWeekClass = dayOfWeek ? classes.dayOfWeek : undefined;
  var disabledClass = disabled && !isCurrent ? classes.dayDisabled : undefined;
  var disabledCurrentClass = disabled && isCurrent ? classes.dayDisabledCurrent : undefined;
  var sideInRangeLeft = sideInRange === 'left' ? classes.daySideLeft : undefined;
  var sideInRangeRight = sideInRange === 'right' ? classes.daySideRight : undefined;
  var sideInRangeClass = sideInRange ? classes.daySideInRange : undefined;
  var inRangeStyle = inRange ? classes.dayInRange : undefined;
  var sideOffset = !isSelected && isCurrent ? -1 : 0;
  return /*#__PURE__*/React.createElement(StyledDayRoot, _extends({
    ref: outerRef,
    className: cx(dayOfWeekClass, selectableClass, selectedClass, currentClass, disabledClass, disabledCurrentClass, hoveredClass),
    tabIndex: isFocused ? 0 : -1,
    dayOfWeek: dayOfWeek,
    isCurrent: isCurrent,
    isSelected: isSelected,
    isDayInCurrentMonth: isDayInCurrentMonth,
    isDouble: isDouble,
    isHovered: isHovered,
    sideInRange: sideInRange,
    onClick: disabled ? undefined : onClick,
    onMouseOver: onMouseOver,
    onFocus: onFocus,
    "data-day": day,
    "data-month-index": monthIndex,
    "data-year": year,
    "data-disabled-arrow-key": disabledArrowKey || undefined,
    "data-disabled-months": disabledMonths || undefined,
    "aria-selected": isSelected,
    "aria-disabled": disabled,
    "aria-describedby": disabled ? 'withShift' : undefined
  }, rest), /*#__PURE__*/React.createElement(StyledDay, {
    className: cx(sideInRangeClass, sideInRangeLeft, sideInRangeRight, inRangeStyle),
    offset: sideOffset
  }, day), /*#__PURE__*/React.createElement(StyledEvents, {
    "aria-hidden": true
  }, [eventList[0], eventList[1], eventList[2]].map(function (event, i) {
    return event && /*#__PURE__*/React.createElement(StyledEvent, _extends({
      key: "".concat(event.date, "-").concat(i)
    }, event));
  })));
}));

export { CalendarDayItem };
//# sourceMappingURL=CalendarDayItem.js.map
