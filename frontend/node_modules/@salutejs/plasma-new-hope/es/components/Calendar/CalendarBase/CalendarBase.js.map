{"version":3,"file":"CalendarBase.js","sources":["../../../../src/components/Calendar/CalendarBase/CalendarBase.tsx"],"sourcesContent":["import React, { useCallback, useMemo, useReducer, useState, KeyboardEvent, HTMLAttributes, forwardRef } from 'react';\n\nimport type { Calendar, DateObject, UseKeyNavigationProps } from '../Calendar.types';\nimport type { CalendarStateType } from '../store/types';\nimport { getInitialState, reducer } from '../store/reducer';\nimport { ActionType, CalendarState } from '../store/types';\nimport { isValueUpdate, YEAR_RENDER_COUNT } from '../utils';\nimport { useKeyNavigation } from '../hooks';\nimport { CalendarDays, CalendarHeader, CalendarMonths, CalendarYears } from '../ui';\nimport { RootProps } from '../../../engines';\n\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { IsOutOfRange, StyledCalendar } from './CalendarBase.styles';\n\nexport type CalendarBaseProps = HTMLAttributes<HTMLDivElement> &\n    Calendar & {\n        /**\n         * Тип отображения календаря: дни, месяца, года.\n         */\n        type?: CalendarStateType;\n    };\n\n/**\n * Компонент календаря.\n */\nexport const calendarBaseRoot = (Root: RootProps<HTMLDivElement, HTMLAttributes<HTMLDivElement>>) =>\n    forwardRef<HTMLDivElement, CalendarBaseProps>(\n        (\n            {\n                value: externalValue,\n                min,\n                max,\n                includeEdgeDates,\n                type = 'Days',\n                eventList,\n                disabledList,\n                onChangeValue,\n                ...rest\n            },\n            outerRootRef,\n        ) => {\n            const [firstValue, secondValue] = useMemo(\n                () => (Array.isArray(externalValue) ? externalValue : [externalValue]),\n                [externalValue],\n            );\n            const value = secondValue || firstValue;\n            const [hoveredDay, setHoveredDay] = useState<DateObject | undefined>();\n            const [prevType, setPrevType] = useState(type);\n            const [prevValue, setPrevValue] = useState(value);\n            const [outOfRangeKey, setOutOfRangeKey] = useState<number>(0);\n\n            const [state, dispatch] = useReducer(reducer, getInitialState(value, [5, 6], type));\n\n            const { date, calendarState, startYear, size } = state;\n\n            const handlePrev = useCallback<UseKeyNavigationProps['onPrev']>(\n                (withShift = false) => {\n                    if (calendarState === CalendarState.Days) {\n                        if (withShift) {\n                            dispatch({\n                                type: ActionType.PREVIOUS_YEAR,\n                                payload: { step: 1 },\n                            });\n\n                            return;\n                        }\n\n                        dispatch({\n                            type: ActionType.PREVIOUS_MONTH,\n                            payload: { monthIndex: date.monthIndex, year: date.year },\n                        });\n\n                        return;\n                    }\n\n                    if (calendarState === CalendarState.Months) {\n                        dispatch({ type: ActionType.PREVIOUS_YEAR, payload: { step: 1 } });\n\n                        return;\n                    }\n\n                    if (calendarState === CalendarState.Years) {\n                        dispatch({ type: ActionType.PREVIOUS_START_YEAR, payload: { yearsCount: YEAR_RENDER_COUNT } });\n                    }\n                },\n                [date, calendarState],\n            );\n\n            const handleNext = useCallback<UseKeyNavigationProps['onNext']>(\n                (withShift = false) => {\n                    if (calendarState === CalendarState.Days) {\n                        if (withShift) {\n                            dispatch({\n                                type: ActionType.NEXT_YEAR,\n                                payload: { step: 1 },\n                            });\n\n                            return;\n                        }\n\n                        dispatch({\n                            type: ActionType.NEXT_MONTH,\n                            payload: { monthIndex: date.monthIndex, year: date.year },\n                        });\n\n                        return;\n                    }\n\n                    if (calendarState === CalendarState.Months) {\n                        dispatch({ type: ActionType.NEXT_YEAR, payload: { step: 1 } });\n\n                        return;\n                    }\n\n                    if (calendarState === CalendarState.Years) {\n                        dispatch({ type: ActionType.NEXT_START_YEAR, payload: { yearsCount: YEAR_RENDER_COUNT } });\n                    }\n                },\n                [date, calendarState],\n            );\n\n            const [selectIndexes, onKeyDown, onSelectIndexes, outerRefs, isOutOfRange] = useKeyNavigation({\n                size,\n                onNext: handleNext,\n                onPrev: handlePrev,\n            });\n\n            const handleOnChangeDay = useCallback(\n                (newDate: DateObject, coord: number[]) => {\n                    const newDay = new Date(newDate.year, newDate.monthIndex, newDate.day);\n                    onChangeValue?.(newDay);\n\n                    onSelectIndexes(coord);\n                },\n                [onChangeValue, onSelectIndexes],\n            );\n\n            const handleOnChangeMonth = useCallback((monthIndex: number) => {\n                dispatch({\n                    type: ActionType.UPDATE_MONTH,\n                    payload: { calendarState: CalendarState.Days, monthIndex, size: [5, 6] },\n                });\n            }, []);\n\n            const handleOnChangeYear = useCallback((year: number) => {\n                dispatch({\n                    type: ActionType.UPDATE_YEAR,\n                    payload: { calendarState: CalendarState.Months, year },\n                });\n            }, []);\n\n            const handleUpdateCalendarState = useCallback(\n                (newCalendarState: CalendarStateType, newSize: [number, number]) => {\n                    dispatch({\n                        type: ActionType.UPDATE_CALENDAR_STATE,\n                        payload: { calendarState: newCalendarState, size: newSize },\n                    });\n                },\n                [],\n            );\n\n            if (value && prevValue && isValueUpdate(value, prevValue)) {\n                dispatch({\n                    type: ActionType.UPDATE_DATE,\n                    payload: { value },\n                });\n\n                setPrevValue(value);\n            }\n\n            if (prevType !== type) {\n                dispatch({\n                    type: ActionType.UPDATE_CALENDAR_STATE,\n                    payload: { calendarState: type },\n                });\n\n                setPrevType(type);\n            }\n\n            // Изменяем ключ каждый раз как пытаемся перейти на даты которые находятся за пределами min/max ограничений.\n            // Это необходимо для того чтобы screen-reader корректно озвучивал уведомление aria-live=\"assertive\"\n            // о том что нет доступных дат\n            const handleKeyDown = useCallback(\n                (event: KeyboardEvent<HTMLDivElement>) => {\n                    setOutOfRangeKey((previousState) => Number(!previousState));\n\n                    onKeyDown(event);\n                },\n                [onKeyDown],\n            );\n\n            return (\n                <Root ref={outerRootRef} aria-label=\"Выбор даты\" {...rest}>\n                    {isOutOfRange && (\n                        <IsOutOfRange\n                            key={outOfRangeKey}\n                            aria-atomic=\"true\"\n                            role=\"alert\"\n                            aria-live=\"assertive\"\n                            aria-relevant=\"additions\"\n                        >\n                            Далее нет доступных дат.\n                        </IsOutOfRange>\n                    )}\n                    <CalendarHeader\n                        firstDate={date}\n                        startYear={startYear}\n                        type={calendarState}\n                        onPrev={handlePrev}\n                        onNext={handleNext}\n                        onUpdateCalendarState={handleUpdateCalendarState}\n                    />\n                    {calendarState === CalendarState.Days && (\n                        <CalendarDays\n                            eventList={eventList}\n                            disabledList={disabledList}\n                            min={min}\n                            max={max}\n                            includeEdgeDates={includeEdgeDates}\n                            value={externalValue}\n                            date={date}\n                            hoveredDay={hoveredDay}\n                            selectIndexes={selectIndexes}\n                            onChangeDay={handleOnChangeDay}\n                            onHoverDay={setHoveredDay}\n                            onSetSelected={onSelectIndexes}\n                            onKeyDown={handleKeyDown}\n                            outerRefs={outerRefs}\n                        />\n                    )}\n                    {calendarState === CalendarState.Months && (\n                        <CalendarMonths\n                            date={date}\n                            selectIndexes={selectIndexes}\n                            onChangeMonth={handleOnChangeMonth}\n                            onSetSelected={onSelectIndexes}\n                            onKeyDown={onKeyDown}\n                            outerRefs={outerRefs}\n                        />\n                    )}\n                    {calendarState === CalendarState.Years && (\n                        <CalendarYears\n                            date={date}\n                            startYear={startYear}\n                            selectIndexes={selectIndexes}\n                            onChangeYear={handleOnChangeYear}\n                            onSetSelected={onSelectIndexes}\n                            onKeyDown={onKeyDown}\n                            outerRefs={outerRefs}\n                        />\n                    )}\n                </Root>\n            );\n        },\n    );\n\nexport const calendarBaseConfig = {\n    name: 'CalendarBase',\n    tag: 'div',\n    layout: calendarBaseRoot,\n    base: StyledCalendar,\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n    },\n    defaults: {\n        view: 'primary',\n        size: 'm',\n    },\n};\n"],"names":["calendarBaseRoot","Root","forwardRef","_ref","outerRootRef","externalValue","value","min","max","includeEdgeDates","_ref$type","type","eventList","disabledList","onChangeValue","rest","_objectWithoutProperties","_excluded","_useMemo","useMemo","Array","isArray","_useMemo2","_slicedToArray","firstValue","secondValue","_useState","useState","_useState2","hoveredDay","setHoveredDay","_useState3","_useState4","prevType","setPrevType","_useState5","_useState6","prevValue","setPrevValue","_useState7","_useState8","outOfRangeKey","setOutOfRangeKey","_useReducer","useReducer","reducer","getInitialState","_useReducer2","state","dispatch","date","calendarState","startYear","size","handlePrev","useCallback","withShift","arguments","length","undefined","CalendarState","Days","ActionType","PREVIOUS_YEAR","payload","step","PREVIOUS_MONTH","monthIndex","year","Months","Years","PREVIOUS_START_YEAR","yearsCount","YEAR_RENDER_COUNT","handleNext","NEXT_YEAR","NEXT_MONTH","NEXT_START_YEAR","_useKeyNavigation","useKeyNavigation","onNext","onPrev","_useKeyNavigation2","selectIndexes","onKeyDown","onSelectIndexes","outerRefs","isOutOfRange","handleOnChangeDay","newDate","coord","newDay","Date","day","handleOnChangeMonth","UPDATE_MONTH","handleOnChangeYear","UPDATE_YEAR","handleUpdateCalendarState","newCalendarState","newSize","UPDATE_CALENDAR_STATE","isValueUpdate","UPDATE_DATE","handleKeyDown","event","previousState","Number","React","createElement","_extends","ref","IsOutOfRange","key","role","CalendarHeader","firstDate","onUpdateCalendarState","CalendarDays","onChangeDay","onHoverDay","onSetSelected","CalendarMonths","onChangeMonth","CalendarYears","onChangeYear","calendarBaseConfig","name","tag","layout","base","StyledCalendar","variations","view","css","viewCSS","sizeCSS","defaults"],"mappings":"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"}