{"version":3,"file":"types.js","sources":["../../../../src/components/Calendar/store/types.ts"],"sourcesContent":["import type { DateObject } from '../Calendar.types';\n\nexport enum CalendarState {\n    Days = 'Days',\n    Months = 'Months',\n    Years = 'Years',\n}\n\nexport const enum ActionType {\n    NEXT_MONTH = 'next_month',\n    PREVIOUS_MONTH = 'previous_month',\n    NEXT_YEAR = 'next_year',\n    PREVIOUS_YEAR = 'previous_year',\n    PREVIOUS_START_YEAR = 'previous_start_year',\n    NEXT_START_YEAR = 'next_start_year',\n    UPDATE_DATE = 'update_date',\n    UPDATE_MONTH = 'update_month',\n    UPDATE_YEAR = 'update_year',\n    UPDATE_CALENDAR_STATE = 'update_calendar_state',\n}\n\nexport type CalendarStateType = keyof typeof CalendarState;\n\nexport interface InitialState {\n    date: DateObject;\n    calendarState: CalendarStateType;\n    startYear: number;\n    size: [number, number];\n}\n\nexport type PreviousMonthAction = { type: ActionType.PREVIOUS_MONTH; payload: { monthIndex: number; year: number } };\n\nexport type NextMonthAction = { type: ActionType.NEXT_MONTH; payload: { monthIndex: number; year: number } };\n\nexport type PreviousYearAction = { type: ActionType.PREVIOUS_YEAR; payload: { step: number } };\n\nexport type NextYearAction = { type: ActionType.NEXT_YEAR; payload: { step: number } };\n\nexport type PreviousStartYearAction = { type: ActionType.PREVIOUS_START_YEAR; payload: { yearsCount: number } };\n\nexport type NextStartYearAction = { type: ActionType.NEXT_START_YEAR; payload: { yearsCount: number } };\n\nexport type UpdateDateAction = { type: ActionType.UPDATE_DATE; payload: { value: Date } };\n\nexport type UpdateMonthAction = {\n    type: ActionType.UPDATE_MONTH;\n    payload: { calendarState: CalendarStateType; monthIndex: number; size: [number, number] };\n};\n\nexport type UpdateYearAction = {\n    type: ActionType.UPDATE_YEAR;\n    payload: { calendarState: CalendarStateType; year: number };\n};\n\nexport type UpdateCalendarStateAction = {\n    type: ActionType.UPDATE_CALENDAR_STATE;\n    payload: { calendarState: CalendarStateType; size?: [number, number] };\n};\n\nexport type Action =\n    | NextMonthAction\n    | PreviousMonthAction\n    | NextYearAction\n    | PreviousYearAction\n    | PreviousStartYearAction\n    | NextStartYearAction\n    | UpdateDateAction\n    | UpdateMonthAction\n    | UpdateYearAction\n    | UpdateCalendarStateAction;\n"],"names":["CalendarState","ActionType"],"mappings":"AAEYA,IAAAA,aAAa,0BAAbA,aAAa,EAAA;EAAbA,aAAa,CAAA,MAAA,CAAA,GAAA,MAAA,CAAA;EAAbA,aAAa,CAAA,QAAA,CAAA,GAAA,QAAA,CAAA;EAAbA,aAAa,CAAA,OAAA,CAAA,GAAA,OAAA,CAAA;AAAA,EAAA,OAAbA,aAAa,CAAA;AAAA,CAAA,CAAA,EAAA,EAAA;AAMPC,IAAAA,UAAU,0BAAVA,UAAU,EAAA;EAAVA,UAAU,CAAA,YAAA,CAAA,GAAA,YAAA,CAAA;EAAVA,UAAU,CAAA,gBAAA,CAAA,GAAA,gBAAA,CAAA;EAAVA,UAAU,CAAA,WAAA,CAAA,GAAA,WAAA,CAAA;EAAVA,UAAU,CAAA,eAAA,CAAA,GAAA,eAAA,CAAA;EAAVA,UAAU,CAAA,qBAAA,CAAA,GAAA,qBAAA,CAAA;EAAVA,UAAU,CAAA,iBAAA,CAAA,GAAA,iBAAA,CAAA;EAAVA,UAAU,CAAA,aAAA,CAAA,GAAA,aAAA,CAAA;EAAVA,UAAU,CAAA,cAAA,CAAA,GAAA,cAAA,CAAA;EAAVA,UAAU,CAAA,aAAA,CAAA,GAAA,aAAA,CAAA;EAAVA,UAAU,CAAA,uBAAA,CAAA,GAAA,uBAAA,CAAA;AAAA,EAAA,OAAVA,UAAU,CAAA;AAAA,CAAA,CAAA,EAAA;;;;"}