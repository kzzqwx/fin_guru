import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import { cx } from '../../utils/index.js';
import { base as base$1 } from './variations/_view/base.js';
import { base as base$2 } from './variations/_size/base.js';
import { base as base$3 } from './variations/_gap/base.js';
import { base as base$5 } from './variations/_shape/base.js';
import { base as base$4 } from './variations/_orientation/base.js';
import { base as base$6 } from './variations/_stretching/base.js';
import { base } from './ButtonGroup.styles.js';
import { classes } from './ButtonGroup.tokens.js';

var _excluded = ["children", "view", "size", "className", "stretching", "gap", "orientation", "shape", "isCommonButtonStyles"];
var buttonGroupRoot = function buttonGroupRoot(Root) {
  return /*#__PURE__*/forwardRef(function (props, ref) {
    var children = props.children,
      view = props.view,
      size = props.size,
      className = props.className,
      _props$stretching = props.stretching,
      stretching = _props$stretching === void 0 ? 'auto' : _props$stretching,
      _props$gap = props.gap,
      gap = _props$gap === void 0 ? 'dense' : _props$gap,
      _props$orientation = props.orientation,
      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,
      _props$shape = props.shape,
      shape = _props$shape === void 0 ? 'default' : _props$shape,
      _props$isCommonButton = props.isCommonButtonStyles,
      isCommonButtonStyles = _props$isCommonButton === void 0 ? true : _props$isCommonButton,
      rest = _objectWithoutProperties(props, _excluded);
    var orientationClass = classes[orientation];
    var gapClass = classes[gap];
    var shapeClass = classes[shape];
    var stretchingClass = classes["".concat(stretching, "Stretching")];
    var overrideStylesClass = isCommonButtonStyles ? classes.buttonGroupOverrideStyles : undefined;
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: ref,
      view: view,
      size: size,
      gap: gap,
      orientation: orientation,
      shape: shape,
      className: cx(overrideStylesClass, orientationClass, gapClass, shapeClass, stretchingClass, className)
    }, rest), children);
  });
};
var buttonGroupConfig = {
  name: 'ButtonGroup',
  tag: 'div',
  layout: buttonGroupRoot,
  base: base,
  variations: {
    view: {
      css: base$1
    },
    size: {
      css: base$2
    },
    gap: {
      css: base$3
    },
    orientation: {
      css: base$4
    },
    shape: {
      css: base$5
    },
    stretching: {
      css: base$6
    }
  },
  defaults: {
    view: 'primary',
    size: 'm',
    gap: 'dense',
    orientation: 'horizontal',
    shape: 'default',
    stretching: 'auto'
  }
};

export { buttonGroupConfig, buttonGroupRoot };
//# sourceMappingURL=ButtonGroup.js.map
