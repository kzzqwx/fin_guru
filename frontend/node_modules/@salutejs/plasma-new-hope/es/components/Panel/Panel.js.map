{"version":3,"file":"Panel.js","sources":["../../../src/components/Panel/Panel.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport type { CSSProperties } from 'react';\n\nimport type { RootProps } from '../../engines';\nimport { cx, getSizeValueFromProp } from '../../utils';\n\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as borderRadiusCSS } from './variations/_borderRadius/base';\nimport type { PanelProps } from './Panel.types';\nimport { classes } from './Panel.tokens';\nimport { StyledWrapper } from './Panel.styles';\n\nexport const panelRoot = (Root: RootProps<HTMLDivElement, PanelProps>) =>\n    forwardRef<HTMLDivElement, PanelProps>(\n        ({ children, view, size, width, height, className, style, ...rest }, outerRef) => {\n            const innerWidth = width ? getSizeValueFromProp(width) : '100%';\n            const innerHeight = height ? getSizeValueFromProp(height) : '100%';\n\n            return (\n                <Root\n                    ref={outerRef}\n                    view={view}\n                    size={size}\n                    className={cx(classes.root, className)}\n                    style={\n                        {\n                            ...style,\n                            '--plasma_private-panel-width': innerWidth,\n                            '--plasma_private-panel-height': innerHeight,\n                        } as CSSProperties\n                    }\n                    {...rest}\n                >\n                    <StyledWrapper>{children}</StyledWrapper>\n                </Root>\n            );\n        },\n    );\n\nexport const panelConfig = {\n    name: 'Panel',\n    tag: 'div',\n    layout: panelRoot,\n    base: '',\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n        borderRadius: {\n            css: borderRadiusCSS,\n        },\n    },\n    defaults: {\n        view: 'default',\n        size: 'm',\n        borderRadius: 'none',\n    },\n};\n"],"names":["panelRoot","Root","forwardRef","_ref","outerRef","children","view","size","width","height","className","style","rest","_objectWithoutProperties","_excluded","innerWidth","getSizeValueFromProp","innerHeight","React","createElement","_extends","ref","cx","classes","root","_objectSpread","StyledWrapper","panelConfig","name","tag","layout","base","variations","css","viewCSS","sizeCSS","borderRadius","borderRadiusCSS","defaults"],"mappings":";;;;;;;;;;;IAaaA,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAA2C,EAAA;AAAA,EAAA,oBACjEC,UAAU,CACN,UAAAC,IAAA,EAAqEC,QAAQ,EAAK;AAAA,IAAA,IAA/EC,QAAQ,GAAAF,IAAA,CAARE,QAAQ;MAAEC,IAAI,GAAAH,IAAA,CAAJG,IAAI;MAAEC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;MAAEC,KAAK,GAAAL,IAAA,CAALK,KAAK;MAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;MAAEC,SAAS,GAAAP,IAAA,CAATO,SAAS;MAAEC,KAAK,GAAAR,IAAA,CAALQ,KAAK;AAAKC,MAAAA,IAAI,GAAAC,wBAAA,CAAAV,IAAA,EAAAW,SAAA,CAAA,CAAA;IAC7D,IAAMC,UAAU,GAAGP,KAAK,GAAGQ,oBAAoB,CAACR,KAAK,CAAC,GAAG,MAAM,CAAA;IAC/D,IAAMS,WAAW,GAAGR,MAAM,GAAGO,oBAAoB,CAACP,MAAM,CAAC,GAAG,MAAM,CAAA;AAElE,IAAA,oBACIS,KAAA,CAAAC,aAAA,CAAClB,IAAI,EAAAmB,QAAA,CAAA;AACDC,MAAAA,GAAG,EAAEjB,QAAS;AACdE,MAAAA,IAAI,EAAEA,IAAK;AACXC,MAAAA,IAAI,EAAEA,IAAK;MACXG,SAAS,EAAEY,EAAE,CAACC,OAAO,CAACC,IAAI,EAAEd,SAAS,CAAE;AACvCC,MAAAA,KAAK,EAAAc,cAAA,CAAAA,cAAA,KAEMd,KAAK,CAAA,EAAA,EAAA,EAAA;AACR,QAAA,8BAA8B,EAAEI,UAAU;AAC1C,QAAA,+BAA+B,EAAEE,WAAAA;AAAW,OAAA,CAAA;KAGhDL,EAAAA,IAAI,CAERM,eAAAA,KAAA,CAAAC,aAAA,CAACO,aAAa,EAAA,IAAA,EAAErB,QAAwB,CACtC,CAAC,CAAA;AAEf,GACJ,CAAC,CAAA;AAAA,EAAA;AAEE,IAAMsB,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAE,OAAO;AACbC,EAAAA,GAAG,EAAE,KAAK;AACVC,EAAAA,MAAM,EAAE9B,SAAS;AACjB+B,EAAAA,IAAI,EAAE,EAAE;AACRC,EAAAA,UAAU,EAAE;AACR1B,IAAAA,IAAI,EAAE;AACF2B,MAAAA,GAAG,EAAEC,IAAAA;KACR;AACD3B,IAAAA,IAAI,EAAE;AACF0B,MAAAA,GAAG,EAAEE,MAAAA;KACR;AACDC,IAAAA,YAAY,EAAE;AACVH,MAAAA,GAAG,EAAEI,MAAAA;AACT,KAAA;GACH;AACDC,EAAAA,QAAQ,EAAE;AACNhC,IAAAA,IAAI,EAAE,SAAS;AACfC,IAAAA,IAAI,EAAE,GAAG;AACT6B,IAAAA,YAAY,EAAE,MAAA;AAClB,GAAA;AACJ;;;;"}