import './SelectTarget.styles_hb1tns.css';
import { styled } from '@linaria/react';
import 'react';
import { IconChevronDown } from '../../../_Icon/Icons/IconChevronDown.js';
import '@linaria/core';
import { component, mergeConfig } from '../../../../engines/common.js';
import { buttonConfig } from '../../../Button/Button.js';
import { tokens } from '../../Select.tokens.js';

var mergedButtonConfig = /*#__PURE__*/mergeConfig(buttonConfig);
var Button = /*#__PURE__*/component(mergedButtonConfig);

// NOTE: Необходимое переопределение токенов из компонента Button т.к. используются его части
var _exp = function _exp() {
  return Button;
};
var _exp7 = function _exp7() {
  return function (_ref) {
    var opened = _ref.opened;
    return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColor, ")");
  };
};
var _exp9 = function _exp9() {
  return function (_ref2) {
    var opened = _ref2.opened;
    return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColorHover, ")");
  };
};
var _exp11 = function _exp11() {
  return function (_ref3) {
    var opened = _ref3.opened;
    return opened ? "var(".concat(tokens.targetBackgroundColorOpen, ")") : "var(".concat(tokens.targetBackgroundColorActive, ")");
  };
};
var _exp32 = function _exp32() {
  return function (_ref4) {
    var opened = _ref4.opened;
    return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColor, ")");
  };
};
var _exp33 = function _exp33() {
  return function (_ref5) {
    var opened = _ref5.opened;
    return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColorHover, ")");
  };
};
var _exp34 = function _exp34() {
  return function (_ref6) {
    var opened = _ref6.opened;
    return opened ? "var(".concat(tokens.targetBorderColorOpen, ")") : "var(".concat(tokens.targetBorderColorActive, ")");
  };
};
var _exp35 = function _exp35() {
  return function (_ref7) {
    var target = _ref7.target;
    return target === 'textField-like' ? "var(".concat(tokens.targetPaddingWithInput, ")") : "var(".concat(tokens.targetPadding, ")");
  };
};
var StyledSelectTarget = /*#__PURE__*/styled(_exp())({
  name: "StyledSelectTarget",
  "class": "su9kdfl",
  propsAsIs: true,
  vars: {
    "su9kdfl-0": [/*#__PURE__*/_exp7()],
    "su9kdfl-1": [/*#__PURE__*/_exp9()],
    "su9kdfl-2": [/*#__PURE__*/_exp11()],
    "su9kdfl-3": [/*#__PURE__*/_exp32()],
    "su9kdfl-4": [/*#__PURE__*/_exp33()],
    "su9kdfl-5": [/*#__PURE__*/_exp34()],
    "su9kdfl-6": [/*#__PURE__*/_exp35()]
  }
});
var _exp53 = function _exp53() {
  return IconChevronDown;
};
var StyledArrow = /*#__PURE__*/styled(_exp53())({
  name: "StyledArrow",
  "class": "s1wmzhh1",
  propsAsIs: true
});
var StyledText = /*#__PURE__*/styled('span')({
  name: "StyledText",
  "class": "sr2fcv2",
  propsAsIs: false
});
var StyledChipsWrapper = /*#__PURE__*/styled('div')({
  name: "StyledChipsWrapper",
  "class": "s9qj25q",
  propsAsIs: false
});
var StyledChips = /*#__PURE__*/styled('div')({
  name: "StyledChips",
  "class": "s11wt6x2",
  propsAsIs: false
});
var StyledLabel = /*#__PURE__*/styled('label')({
  name: "StyledLabel",
  "class": "s1xu52l7",
  propsAsIs: false
});

export { StyledArrow, StyledChips, StyledChipsWrapper, StyledLabel, StyledSelectTarget, StyledText };
//# sourceMappingURL=SelectTarget.styles.js.map
