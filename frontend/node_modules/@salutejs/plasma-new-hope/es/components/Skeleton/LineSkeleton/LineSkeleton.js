import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import 'focus-visible';
import { getRoundness } from '../../../mixins/applyRoundness.js';
import { getSkeletonColor } from '../../../mixins/applySkeletonGradient.js';
import 'styled-components';
import { base as base$1 } from './variations/_size/base.js';
import { StyledVisibleLine, base } from './LineSkeleton.styles.js';

var _excluded = ["size", "lighter", "customGradientColor", "roundness"];
/**
 * Копонент-составляющая Скелетона
 */
var lineSkeletonRoot = function lineSkeletonRoot(Root) {
  return /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {
    var size = _ref.size,
      lighter = _ref.lighter,
      customGradientColor = _ref.customGradientColor,
      _ref$roundness = _ref.roundness,
      roundness = _ref$roundness === void 0 ? '16' : _ref$roundness,
      rest = _objectWithoutProperties(_ref, _excluded);
    var roundnessValue = getRoundness({
      roundness: roundness
    });
    var skeletonGradientColor = getSkeletonColor({
      lighter: lighter,
      customGradientColor: customGradientColor
    });
    return /*#__PURE__*/React.createElement(Root, _extends({
      ref: outerRootRef,
      size: size
    }, rest), /*#__PURE__*/React.createElement(StyledVisibleLine, {
      roundness: roundnessValue,
      gradientColor: skeletonGradientColor
    }));
  });
};
var lineSkeletonConfig = {
  name: 'LineSkeleton',
  tag: 'div',
  layout: lineSkeletonRoot,
  base: base,
  variations: {
    size: {
      css: base$1
    }
  },
  defaults: {}
};

export { lineSkeletonConfig, lineSkeletonRoot };
//# sourceMappingURL=LineSkeleton.js.map
