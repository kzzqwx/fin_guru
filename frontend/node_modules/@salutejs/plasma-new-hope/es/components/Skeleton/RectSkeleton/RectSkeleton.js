import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import React, { forwardRef } from 'react';
import 'focus-visible';
import { getRoundness } from '../../../mixins/applyRoundness.js';
import { getSkeletonColor } from '../../../mixins/applySkeletonGradient.js';
import 'styled-components';
import { StyledRectSkeleton } from './RectSkeleton.styles.js';

var _excluded = ["width", "height", "lighter", "customGradientColor", "roundness"];
/**
 * Компонент для создания прямоугольного плейсхолдера.
 */
var RectSkeleton = /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {
  var width = _ref.width,
    height = _ref.height,
    lighter = _ref.lighter,
    customGradientColor = _ref.customGradientColor,
    _ref$roundness = _ref.roundness,
    roundness = _ref$roundness === void 0 ? '16' : _ref$roundness,
    rest = _objectWithoutProperties(_ref, _excluded);
  var roundnessValue = getRoundness({
    roundness: roundness
  });
  var skeletonGradientColor = getSkeletonColor({
    lighter: lighter,
    customGradientColor: customGradientColor
  });
  return /*#__PURE__*/React.createElement(StyledRectSkeleton, _extends({
    ref: outerRootRef,
    roundness: roundnessValue,
    gradientColor: skeletonGradientColor,
    width: Number.isNaN(Number(width)) ? String(width) : "".concat(width, "px"),
    height: Number.isNaN(Number(height)) ? String(height) : "".concat(height, "px")
  }, rest));
});

export { RectSkeleton };
//# sourceMappingURL=RectSkeleton.js.map
