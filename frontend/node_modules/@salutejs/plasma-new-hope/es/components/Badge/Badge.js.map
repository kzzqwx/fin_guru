{"version":3,"file":"Badge.js","sources":["../../../src/components/Badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\n\nimport type { RootProps } from '../../engines';\nimport { cx } from '../../utils';\n\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as pilledCSS } from './variations/_pilled/base';\nimport { base as transparentCSS } from './variations/_transparent/base';\nimport type { BadgeProps } from './Badge.types';\nimport { StyledContentLeft, StyledContentMain, StyledContentRight, base } from './Badge.styles';\nimport { classes } from './Badge.tokens';\n\nexport const badgeRoot = (Root: RootProps<HTMLDivElement, BadgeProps>) =>\n    forwardRef<HTMLDivElement, BadgeProps>((props, ref) => {\n        const {\n            children,\n            className,\n            text,\n            contentLeft,\n            contentRight,\n            size,\n            view,\n            pilled = false,\n            transparent = false,\n            ...rest\n        } = props;\n\n        const pilledClass = pilled ? classes.badgePilled : undefined;\n        const transparentClass = transparent ? classes.badgeTransparent : undefined;\n        const txt = !text && typeof children === 'string' ? children : text;\n\n        return (\n            <Root\n                ref={ref}\n                className={cx(pilledClass, transparentClass, className)}\n                view={view}\n                size={size}\n                pilled={pilled}\n                transparent={transparent}\n                {...rest}\n            >\n                {contentLeft && <StyledContentLeft>{contentLeft}</StyledContentLeft>}\n                {txt ? <StyledContentMain>{txt}</StyledContentMain> : children}\n                {contentRight && <StyledContentRight>{contentRight}</StyledContentRight>}\n            </Root>\n        );\n    });\n\nexport const badgeConfig = {\n    name: 'Badge',\n    tag: 'div',\n    layout: badgeRoot,\n    base,\n    variations: {\n        view: {\n            css: viewCSS,\n        },\n        size: {\n            css: sizeCSS,\n        },\n        pilled: {\n            css: pilledCSS,\n            attrs: true,\n        },\n        transparent: {\n            css: transparentCSS,\n            attrs: true,\n        },\n    },\n    defaults: {\n        view: 'primary',\n        size: 'm',\n    },\n};\n"],"names":["badgeRoot","Root","forwardRef","props","ref","children","className","text","contentLeft","contentRight","size","view","_props$pilled","pilled","_props$transparent","transparent","rest","_objectWithoutProperties","_excluded","pilledClass","classes","badgePilled","undefined","transparentClass","badgeTransparent","txt","React","createElement","_extends","cx","StyledContentLeft","StyledContentMain","StyledContentRight","badgeConfig","name","tag","layout","base","variations","css","viewCSS","sizeCSS","pilledCSS","attrs","transparentCSS","defaults"],"mappings":";;;;;;;;;;;IAaaA,SAAS,GAAG,SAAZA,SAASA,CAAIC,IAA2C,EAAA;AAAA,EAAA,oBACjEC,UAAU,CAA6B,UAACC,KAAK,EAAEC,GAAG,EAAK;AACnD,IAAA,IACIC,QAAQ,GAURF,KAAK,CAVLE,QAAQ;MACRC,SAAS,GASTH,KAAK,CATLG,SAAS;MACTC,IAAI,GAQJJ,KAAK,CARLI,IAAI;MACJC,WAAW,GAOXL,KAAK,CAPLK,WAAW;MACXC,YAAY,GAMZN,KAAK,CANLM,YAAY;MACZC,IAAI,GAKJP,KAAK,CALLO,IAAI;MACJC,IAAI,GAIJR,KAAK,CAJLQ,IAAI;MAAAC,aAAA,GAIJT,KAAK,CAHLU,MAAM;AAANA,MAAAA,MAAM,GAAAD,aAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,aAAA;MAAAE,kBAAA,GAGdX,KAAK,CAFLY,WAAW;AAAXA,MAAAA,WAAW,GAAAD,kBAAA,KAAG,KAAA,CAAA,GAAA,KAAK,GAAAA,kBAAA;AAChBE,MAAAA,IAAI,GAAAC,wBAAA,CACPd,KAAK,EAAAe,SAAA,CAAA,CAAA;IAET,IAAMC,WAAW,GAAGN,MAAM,GAAGO,OAAO,CAACC,WAAW,GAAGC,SAAS,CAAA;IAC5D,IAAMC,gBAAgB,GAAGR,WAAW,GAAGK,OAAO,CAACI,gBAAgB,GAAGF,SAAS,CAAA;AAC3E,IAAA,IAAMG,GAAG,GAAG,CAAClB,IAAI,IAAI,OAAOF,QAAQ,KAAK,QAAQ,GAAGA,QAAQ,GAAGE,IAAI,CAAA;AAEnE,IAAA,oBACImB,KAAA,CAAAC,aAAA,CAAC1B,IAAI,EAAA2B,QAAA,CAAA;AACDxB,MAAAA,GAAG,EAAEA,GAAI;MACTE,SAAS,EAAEuB,EAAE,CAACV,WAAW,EAAEI,gBAAgB,EAAEjB,SAAS,CAAE;AACxDK,MAAAA,IAAI,EAAEA,IAAK;AACXD,MAAAA,IAAI,EAAEA,IAAK;AACXG,MAAAA,MAAM,EAAEA,MAAO;AACfE,MAAAA,WAAW,EAAEA,WAAAA;AAAY,KAAA,EACrBC,IAAI,CAEPR,EAAAA,WAAW,iBAAIkB,KAAA,CAAAC,aAAA,CAACG,iBAAiB,EAAA,IAAA,EAAEtB,WAA+B,CAAC,EACnEiB,GAAG,gBAAGC,KAAA,CAAAC,aAAA,CAACI,iBAAiB,QAAEN,GAAuB,CAAC,GAAGpB,QAAQ,EAC7DI,YAAY,iBAAIiB,KAAA,CAAAC,aAAA,CAACK,kBAAkB,EAAEvB,IAAAA,EAAAA,YAAiC,CACrE,CAAC,CAAA;AAEf,GAAC,CAAC,CAAA;AAAA,EAAA;AAEC,IAAMwB,WAAW,GAAG;AACvBC,EAAAA,IAAI,EAAE,OAAO;AACbC,EAAAA,GAAG,EAAE,KAAK;AACVC,EAAAA,MAAM,EAAEpC,SAAS;AACjBqC,EAAAA,IAAI,EAAJA,IAAI;AACJC,EAAAA,UAAU,EAAE;AACR3B,IAAAA,IAAI,EAAE;AACF4B,MAAAA,GAAG,EAAEC,MAAAA;KACR;AACD9B,IAAAA,IAAI,EAAE;AACF6B,MAAAA,GAAG,EAAEE,MAAAA;KACR;AACD5B,IAAAA,MAAM,EAAE;AACJ0B,MAAAA,GAAG,EAAEG,MAAS;AACdC,MAAAA,KAAK,EAAE,IAAA;KACV;AACD5B,IAAAA,WAAW,EAAE;AACTwB,MAAAA,GAAG,EAAEK,MAAc;AACnBD,MAAAA,KAAK,EAAE,IAAA;AACX,KAAA;GACH;AACDE,EAAAA,QAAQ,EAAE;AACNlC,IAAAA,IAAI,EAAE,SAAS;AACfD,IAAAA,IAAI,EAAE,GAAA;AACV,GAAA;AACJ;;;;"}