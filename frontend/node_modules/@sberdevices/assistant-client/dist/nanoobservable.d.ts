export declare type ObserverFunc<T> = (data: T) => void;
export interface Observer<T extends {}> {
    next: ObserverFunc<T>;
}
export interface Observable<T extends {}> {
    subscribe: (observer: Observer<T>) => {
        unsubscribe: () => void;
    };
}
export declare const createNanoObservable: <T extends {}>(observerFunc: (observer: Observer<T>) => void) => Observable<T>;
//# sourceMappingURL=nanoobservable.d.ts.map