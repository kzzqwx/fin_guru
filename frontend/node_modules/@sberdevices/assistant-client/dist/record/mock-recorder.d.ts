import { ClientLogger } from '../typings';
import { Message } from '../proto';
import { Recorder } from './recorder';
export interface MockRecorderRecord {
    midToRequestKey: Record<string, string | undefined>;
    requestKeyToMessages: Record<string, Message[] | undefined>;
}
declare type MockRecorderRecordGetter = () => MockRecorderRecord;
interface MockRecorder extends Recorder<MockRecorderRecord> {
    handler: ClientLogger;
    getRecord: MockRecorderRecordGetter;
    start: () => void;
    stop: () => void;
}
export declare type MockRecorderCreator = (defaultActive?: boolean) => MockRecorder;
export declare const createAnswerFromMockByMessageGetter: (record: MockRecorderRecord) => (message: Message) => Message[] | undefined;
export declare const createMockRecorder: MockRecorderCreator;
export {};
//# sourceMappingURL=mock-recorder.d.ts.map