export interface VoicePlayerSettings {
    startVoiceDelay?: number;
    sampleRate?: number;
    numberOfChannels?: number;
}
export declare type EventsType = {
    play: (trackId: string) => void;
    end: (trackId: string) => void;
};
export declare const createVoicePlayer: (actx: AudioContext, { startVoiceDelay, sampleRate, numberOfChannels }?: VoicePlayerSettings) => {
    append: (data: Uint8Array, trackId: string, last?: boolean) => void;
    setActive(value: boolean): void;
    on: <K extends "play" | "end">(event: K, cb: EventsType[K]) => () => void;
    stop: () => void;
};
//# sourceMappingURL=voicePlayer.d.ts.map