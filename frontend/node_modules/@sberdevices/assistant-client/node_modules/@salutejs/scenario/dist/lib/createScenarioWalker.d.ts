import { createUserScenario } from './createUserScenario';
import { SystemScenario } from './createSystemScenario';
import { IntentsDict, Recognizer, SaluteRequest, SaluteRequestVariable, SaluteResponse, SaluteSession } from './types/salute';
import { AppState } from './types/systemMessage';
interface ScenarioWalkerOptions {
    intents?: IntentsDict;
    recognizer?: Recognizer;
    systemScenario: SystemScenario;
    userScenario?: ReturnType<typeof createUserScenario>;
    slotFillingConfidence?: number;
}
export declare const createScenarioWalker: ({ intents, recognizer, systemScenario, userScenario, slotFillingConfidence, }: ScenarioWalkerOptions) => ({ req, res, session, }: {
    req: SaluteRequest<SaluteRequestVariable, AppState, {
        action_id?: string;
        type: string;
        payload: unknown;
    }>;
    res: SaluteResponse;
    session: SaluteSession;
}) => Promise<void>;
export {};
//# sourceMappingURL=createScenarioWalker.d.ts.map