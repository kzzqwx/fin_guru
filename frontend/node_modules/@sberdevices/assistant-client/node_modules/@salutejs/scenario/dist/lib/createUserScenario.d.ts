import { SaluteRequest, ScenarioSchema } from './types/salute';
export declare function createUserScenario<R extends SaluteRequest = SaluteRequest>(scenarioSchema: ScenarioSchema): {
    getByPath: (path: string[]) => {
        match: (req: SaluteRequest<Record<string, string | string[] | undefined>, import("..").AppState, {
            payload: unknown;
            type: string;
        }>) => boolean;
        schema?: string | undefined;
        handle: import("./types/salute").SaluteHandler<SaluteRequest<Record<string, string | string[] | undefined>, import("..").AppState, {
            payload: unknown;
            type: string;
        }>, Record<string, unknown>, import("./types/salute").SaluteResponse, Record<string, unknown>>;
        children?: Record<string, any> | undefined;
    } | undefined;
    resolve: (path: string[], req: R) => {
        path: string[];
        state: ScenarioSchema['string'];
    } | null;
};
//# sourceMappingURL=createUserScenario.d.ts.map