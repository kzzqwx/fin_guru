import { I18nOptions, IPluralForms, KeysetDictionary } from './types/i18n';
import { CharacterId } from './types/systemMessage';
export declare type PluralFunction = (count: number, params: IPluralForms) => string;
declare const pluralMap: {
    ru: (count: number, params: IPluralForms) => string;
};
export declare type I18nRaw = Array<string | Record<string, unknown> | number | undefined>;
/**
 * Поддерживаемые персонажи.
 */
export declare type Character = CharacterId;
/**
 * Поддерживаемые языки.
 */
export declare type Language = keyof typeof pluralMap;
/**
 * Локализация ключей по словарю.
 *
 * @param character текущий персонаж
 * @param keyset словарь с переводами
 * @param key ключ для кейсета
 * @param options динамические параметры ключа
 */
export declare const i18n: (character?: Character) => (keyset: KeysetDictionary) => (key: string, options?: I18nOptions) => string;
export {};
//# sourceMappingURL=i18n.d.ts.map