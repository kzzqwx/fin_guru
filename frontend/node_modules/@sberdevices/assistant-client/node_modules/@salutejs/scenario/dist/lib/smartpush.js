"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSmartPushSender = void 0;
var node_fetch_1 = __importDefault(require("node-fetch"));
var URL = 'https://salute.online.sberbank.ru:9443/api/v2/smartpush/apprequest';
var TOKEN_URL = 'https://salute.online.sberbank.ru:9443/api/v2/oauth';
var uuidv4 = function () {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
        // eslint-disable-next-line no-bitwise
        var r = (Math.random() * 16) | 0;
        // eslint-disable-next-line no-bitwise
        var v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
    });
};
var requestAccesToken = function (_a) {
    var clientId = _a.clientId, secret = _a.secret, scope = _a.scope, requestId = _a.requestId;
    return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_b) {
            return [2 /*return*/, node_fetch_1.default(TOKEN_URL, {
                    headers: {
                        Authorization: "Basic " + Buffer.from(clientId + ":" + secret).toString('base64'),
                        'Content-Type': 'application/x-www-form-urlencoded',
                        Rquid: requestId,
                    },
                    method: 'POST',
                    body: "scope=" + scope,
                }).then(function (res) { return res.json(); })];
        });
    });
};
var sendPush = function (accessToken, requestId, messageId, _a) {
    var projectId = _a.projectId, clientIdSub = _a.clientIdSub, deliveryConfig = _a.deliveryConfig;
    return __awaiter(void 0, void 0, void 0, function () {
        var destinations, delivery, body, answer;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0:
                    destinations = deliveryConfig.destinations, delivery = __rest(deliveryConfig, ["destinations"]);
                    body = {
                        protocolVersion: 'V1',
                        messageName: 'SEND_PUSH',
                        messageId: messageId,
                        payload: {
                            sender: {
                                projectId: projectId,
                            },
                            recipient: {
                                clientId: {
                                    idType: 'SUB',
                                    id: clientIdSub,
                                },
                            },
                            deliveryConfig: __assign(__assign({}, delivery), { destinations: destinations.map(function (_a) {
                                    var surface = _a.surface, destination = __rest(_a, ["surface"]);
                                    return (__assign(__assign({}, destination), { surface: surface, channel: surface === 'COMPANION' ? 'COMPANION_B2C' : 'B2C' }));
                                }) }),
                        },
                    };
                    return [4 /*yield*/, node_fetch_1.default(URL, {
                            headers: {
                                Authorization: "Bearer " + accessToken,
                                'Content-Type': 'application/json',
                                Rquid: requestId,
                            },
                            method: 'post',
                            body: JSON.stringify({ requestPayload: body }),
                        })];
                case 1:
                    answer = _b.sent();
                    return [2 /*return*/, answer.json()];
            }
        });
    });
};
var createSmartPushSender = function (_a) {
    var _b = _a === void 0 ? {
        clientId: process.env.SMARTPUSH_CLIENTID || '',
        secret: process.env.SMARTPUSH_SECRET || '',
    } : _a, clientId = _b.clientId, secret = _b.secret;
    return __awaiter(void 0, void 0, void 0, function () {
        var accessTokenReqId, _c, access_token, message, messageId;
        return __generator(this, function (_d) {
            switch (_d.label) {
                case 0:
                    if (!clientId || !secret) {
                        throw new Error('clientId and secret must be defined');
                    }
                    accessTokenReqId = uuidv4();
                    return [4 /*yield*/, requestAccesToken({
                            clientId: clientId,
                            secret: secret,
                            scope: ['SMART_PUSH'],
                            requestId: accessTokenReqId,
                        })];
                case 1:
                    _c = _d.sent(), access_token = _c.access_token, message = _c.message;
                    if (typeof access_token === 'undefined') {
                        throw new Error("Authorization failed. Please, check clientId and secret values. RequestId: " + accessTokenReqId + ". " + message);
                    }
                    messageId = 0;
                    return [2 /*return*/, function (push) { return sendPush(access_token, uuidv4(), ++messageId, push); }];
            }
        });
    });
};
exports.createSmartPushSender = createSmartPushSender;
