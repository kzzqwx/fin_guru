{"version":3,"file":"collectExportsAndImports.js","names":["_logger","require","_getScope","_isExports","_interopRequireDefault","_isNotNull","_isRequire","_isTypedNode","_traversalCache","obj","__esModule","default","sideEffectImport","item","imported","exports","explicitImport","getValue","node","type","name","value","isType","p","importKind","exportKind","collectors","ImportSpecifier","path","source","get","local","ImportDefaultSpecifier","ImportNamespaceSpecifier","unfoldNamespaceImport","collectFromImportDeclaration","state","specifiers","length","imports","push","forEach","specifier","isImportSpecifier","collector","getAncestorsWhile","cond","result","current","parentPath","whatIsDestructed","objectPattern","destructedProps","traverse","Identifier","identifier","isBindingIdentifier","parent","isObjectProperty","chain","filter","isTypedNode","map","key","isIdentifier","isNotNull","reverse","what","as","isRestElement","argument","importFromVariableDeclarator","isSync","id","debug","isObjectPattern","findIIFE","isCallExpression","isFunctionExpression","exportFromVariableDeclarator","init","binding","getScope","getBinding","iife","referencePaths","constantViolations","find","isExpression","reduce","acc","destructed","collectFromDynamicImport","callExpression","sourcePath","isStringLiteral","container","isAwaited","isAwaitExpression","isVariableDeclarator","prop","getCalleeName","callee","isMemberExpression","property","undefined","getImportExportTypeByInteropFunction","startsWith","isAlreadyProcessed","collectFromRequire","isRequire","processedRequires","has","add","reexports","exported","variableDeclarator","unfolded","isExpressionStatement","collectFromVariableDeclarator","found","identifierPath","skip","isChainOfVoidAssignment","right","isUnaryExpression","operator","isAssignmentExpression","getReturnValue","params","body","_body$get","returnStatement","isReturnStatement","getGetterValueFromDescriptor","descriptor","props","getter","isArrowFunctionExpression","valueProp","valueValue","addExport","getRelatedImport","object","objectBinding","scope","i","some","isAncestor","computed","import","relatedImport","collectFromExports","isExports","memberExpression","exportName","saveRef","exportRefs","set","assignmentExpression","left","isEsModule","matchesPattern","isObjectExpression","collectFromRequireOrExports","importItem","referenced","referencePath","_binding$referencePat","ancestor","isTSType","isFlowType","listKey","importType","isExportSpecifier","isExportDefaultDeclaration","collectFromExportAllDeclaration","_path$get","collectFromExportSpecifier","isExportDefaultSpecifier","isExportNamespaceSpecifier","collectFromExportNamedDeclaration","_path$get2","declaration","isVariableDeclaration","declarator","isTSEnumDeclaration","isFunctionDeclaration","isClassDeclaration","collectFromExportDefaultDeclaration","collectFromAssignmentExpression","_right$get","collectFromExportStarCall","_requireCall$get","requireCall","collectFromMap","properties","isFunction","returnValue","collectFromEsbuildExportCall","sourceExports","collectFromEsbuildReExportCall","_requireCall$get2","collectFromSwcExportCall","collectFromCallExpression","maybeExportStart","collectExportsAndImports","cacheMode","localState","deadExports","Map","sourceType","WeakSet","cache","getTraversalCache","_cache$get","AssignmentExpression","CallExpression","ExportAllDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ImportDeclaration","Import","VariableDeclarator"],"sources":["../src/collectExportsAndImports.ts"],"sourcesContent":["/* eslint @typescript-eslint/no-use-before-define: [\"error\", { \"functions\": false }] */\n/* eslint-disable no-restricted-syntax,no-continue */\n\nimport type { NodePath } from '@babel/traverse';\nimport type {\n  AssignmentExpression,\n  BlockStatement,\n  CallExpression,\n  ExportAllDeclaration,\n  ExportDefaultDeclaration,\n  ExportDefaultSpecifier,\n  ExportNamedDeclaration,\n  ExportNamespaceSpecifier,\n  ExportSpecifier,\n  Expression,\n  Function as FunctionNode,\n  Identifier,\n  Import,\n  ImportDeclaration,\n  ImportDefaultSpecifier,\n  ImportNamespaceSpecifier,\n  ImportSpecifier,\n  MemberExpression,\n  ObjectExpression,\n  ObjectPattern,\n  Program,\n  StringLiteral,\n  VariableDeclarator,\n} from '@babel/types';\n\nimport { debug } from '@linaria/logger';\n\nimport { getScope } from './getScope';\nimport isExports from './isExports';\nimport isNotNull from './isNotNull';\nimport isRequire from './isRequire';\nimport isTypedNode from './isTypedNode';\nimport { getTraversalCache } from './traversalCache';\n\nexport interface ISideEffectImport {\n  imported: 'side-effect';\n  local: NodePath;\n  source: string;\n}\n\nexport interface IImport {\n  imported: string | 'default' | '*';\n  local: NodePath<Identifier | MemberExpression>;\n  source: string;\n  type: 'cjs' | 'dynamic' | 'esm';\n}\n\nexport type Exports = Record<string | 'default' | '*', NodePath>; // '*' means re-export all\n\nexport interface IReexport {\n  exported: string | 'default' | '*';\n  imported: string | 'default' | '*';\n  local: NodePath;\n  source: string;\n}\n\nexport interface IState {\n  deadExports: string[];\n  exportRefs: Map<string, NodePath<MemberExpression>[]>;\n  exports: Exports;\n  imports: (IImport | ISideEffectImport)[];\n  isEsModule: boolean;\n  reexports: IReexport[];\n}\n\ninterface ILocalState extends IState {\n  processedRequires: WeakSet<NodePath>;\n}\n\nexport const sideEffectImport = (\n  item: IImport | ISideEffectImport\n): item is ISideEffectImport => item.imported === 'side-effect';\n\nexport const explicitImport = (\n  item: IImport | ISideEffectImport\n): item is IImport => item.imported !== 'side-effect';\n\nfunction getValue({ node }: { node: Identifier | StringLiteral }): string {\n  return node.type === 'Identifier' ? node.name : node.value;\n}\n\n// We ignore imports and exports of types\nconst isType = (p: {\n  node: { importKind?: 'type' | unknown } | { exportKind?: 'type' | unknown };\n}): boolean =>\n  ('importKind' in p.node && p.node.importKind === 'type') ||\n  ('exportKind' in p.node && p.node.exportKind === 'type');\n\n// Force TypeScript to check, that we have implementation for every possible specifier\ntype SpecifierTypes = ImportDeclaration['specifiers'][number];\nconst collectors: {\n  [K in SpecifierTypes['type']]: (\n    path: NodePath<SpecifierTypes & { type: K }>,\n    source: string\n  ) => IImport[];\n} = {\n  ImportSpecifier(path: NodePath<ImportSpecifier>, source): IImport[] {\n    if (isType(path)) return [];\n    const imported = getValue(path.get('imported'));\n    const local = path.get('local');\n    return [{ imported, local, source, type: 'esm' }];\n  },\n\n  ImportDefaultSpecifier(\n    path: NodePath<ImportDefaultSpecifier>,\n    source\n  ): IImport[] {\n    const local = path.get('local');\n    return [{ imported: 'default', local, source, type: 'esm' }];\n  },\n\n  ImportNamespaceSpecifier(\n    path: NodePath<ImportNamespaceSpecifier>,\n    source\n  ): IImport[] {\n    const local = path.get('local');\n    return unfoldNamespaceImport({ imported: '*', local, source, type: 'esm' });\n  },\n};\n\nfunction collectFromImportDeclaration(\n  path: NodePath<ImportDeclaration>,\n  state: ILocalState\n): void {\n  // If importKind is specified, and it's not a value, ignore that import\n  if (isType(path)) return;\n\n  const source = getValue(path.get('source'));\n  const specifiers = path.get('specifiers');\n\n  if (specifiers.length === 0) {\n    state.imports.push({ imported: 'side-effect', local: path, source });\n  }\n\n  specifiers.forEach(<T extends SpecifierTypes>(specifier: NodePath<T>) => {\n    if (specifier.isImportSpecifier() && isType(specifier)) return;\n\n    const collector = collectors[\n      specifier.node.type\n    ] as (typeof collectors)[T['type']];\n\n    state.imports.push(...collector(specifier, source));\n  });\n}\n\ninterface IDestructed {\n  as: NodePath<Identifier>;\n  what: string | '*';\n}\n\nfunction getAncestorsWhile(path: NodePath, cond: (p: NodePath) => boolean) {\n  const result: NodePath[] = [];\n  let current: NodePath | null = path;\n  while (current && cond(current)) {\n    result.push(current);\n    current = current.parentPath;\n  }\n\n  return result;\n}\n\nfunction whatIsDestructed(\n  objectPattern: NodePath<ObjectPattern>\n): IDestructed[] {\n  const destructedProps: IDestructed[] = [];\n  objectPattern.traverse({\n    Identifier(identifier) {\n      if (identifier.isBindingIdentifier()) {\n        const parent = identifier.parentPath;\n        if (parent.isObjectProperty({ value: identifier.node })) {\n          const chain = getAncestorsWhile(parent, (p) => p !== objectPattern)\n            .filter(isTypedNode('ObjectProperty'))\n            .map((p) => {\n              const key = p.get('key');\n              if (!key.isIdentifier()) {\n                // TODO: try to process other type of keys or at least warn about this\n                return null;\n              }\n\n              return key;\n            })\n            .filter(isNotNull);\n          chain.reverse();\n\n          if (chain.length > 0) {\n            destructedProps.push({\n              what: chain[0].node.name,\n              as: identifier,\n            });\n          }\n\n          return;\n        }\n\n        if (parent.isRestElement({ argument: identifier.node })) {\n          destructedProps.push({\n            what: '*',\n            as: identifier,\n          });\n        }\n      }\n    },\n  });\n\n  return destructedProps;\n}\n\nfunction importFromVariableDeclarator(\n  path: NodePath<VariableDeclarator>,\n  isSync: boolean\n): IDestructed[] {\n  const id = path.get('id');\n  if (id.isIdentifier()) {\n    // It's the simplest case when the full namespace is imported\n    return [\n      {\n        as: id,\n        what: '*',\n      },\n    ];\n  }\n\n  if (!isSync) {\n    // Something went wrong\n    // Is it something like `const { … } = import(…)`?\n    debug('evaluator:collectExportsAndImports', '`import` should be awaited');\n    return [];\n  }\n\n  if (id.isObjectPattern()) {\n    return whatIsDestructed(id);\n  }\n\n  // What else it can be?\n  debug(\n    'evaluator:collectExportsAndImports:importFromVariableDeclarator',\n    'Unknown type of id',\n    id.node.type\n  );\n\n  return [];\n}\n\nconst findIIFE = (path: NodePath): NodePath<CallExpression> | null => {\n  if (path.isCallExpression() && path.get('callee').isFunctionExpression()) {\n    return path;\n  }\n\n  if (!path.parentPath) {\n    return null;\n  }\n\n  return findIIFE(path.parentPath);\n};\n\nfunction exportFromVariableDeclarator(\n  path: NodePath<VariableDeclarator>\n): Exports {\n  const id = path.get('id');\n  const init = path.get('init');\n\n  // If there is no init and id is an identifier, we should find IIFE\n  if (!init.node && id.isIdentifier()) {\n    const binding = getScope(path).getBinding(id.node.name);\n    if (!binding) {\n      return {};\n    }\n\n    const iife = [\n      ...binding.referencePaths,\n      ...binding.constantViolations,\n      binding.path,\n    ]\n      .map(findIIFE)\n      .find(isNotNull);\n\n    if (!iife) {\n      return {};\n    }\n\n    return {\n      [id.node.name]: iife,\n    };\n  }\n\n  if (!init || !init.isExpression()) {\n    return {};\n  }\n\n  if (id.isIdentifier()) {\n    // It is `export const a = 1;`\n    return {\n      [id.node.name]: init,\n    };\n  }\n\n  if (id.isObjectPattern()) {\n    // It is `export const { a, ...rest } = obj;`\n    return whatIsDestructed(id).reduce<Exports>(\n      (acc, destructed) => ({\n        ...acc,\n        [destructed.as.node.name]: init,\n      }),\n      {}\n    );\n  }\n\n  // What else it can be?\n  debug(\n    'evaluator:collectExportsAndImports:exportFromVariableDeclarator',\n    'Unknown type of id',\n    id.node.type\n  );\n\n  return {};\n}\n\nfunction collectFromDynamicImport(\n  path: NodePath<Import>,\n  state: ILocalState\n): void {\n  const { parentPath: callExpression } = path;\n  if (!callExpression.isCallExpression()) {\n    // It's wrong `import`\n    return;\n  }\n\n  const [sourcePath] = callExpression.get('arguments');\n  if (!sourcePath || !sourcePath.isStringLiteral()) {\n    // Import should have at least one argument, and it should be StringLiteral\n    return;\n  }\n\n  const source = sourcePath.node.value;\n\n  let { parentPath: container, key } = callExpression;\n  let isAwaited = false;\n\n  if (container.isAwaitExpression()) {\n    // If it's not awaited import, it imports the full namespace\n    isAwaited = true;\n    key = container.key;\n    container = container.parentPath!;\n  }\n\n  // Is it `const something = await import(\"something\")`?\n  if (key === 'init' && container.isVariableDeclarator()) {\n    importFromVariableDeclarator(container, isAwaited).map((prop) =>\n      state.imports.push({\n        imported: prop.what,\n        local: prop.as,\n        source,\n        type: 'dynamic',\n      })\n    );\n  }\n}\n\nfunction getCalleeName(path: NodePath<CallExpression>): string | undefined {\n  const callee = path.get('callee');\n  if (callee.isIdentifier()) {\n    return callee.node.name;\n  }\n\n  if (callee.isMemberExpression()) {\n    const property = callee.get('property');\n    if (property.isIdentifier()) {\n      return property.node.name;\n    }\n  }\n\n  return undefined;\n}\n\nfunction getImportExportTypeByInteropFunction(\n  path: NodePath<CallExpression>\n): 'import:*' | 're-export:*' | 'default' | undefined {\n  const name = getCalleeName(path);\n\n  if (name === undefined) {\n    return undefined;\n  }\n\n  if (name.startsWith('__exportStar')) {\n    return 're-export:*';\n  }\n\n  if (\n    name.startsWith('_interopRequireDefault') ||\n    name.startsWith('__importDefault')\n  ) {\n    return 'default';\n  }\n\n  if (\n    name.startsWith('_interopRequireWildcard') ||\n    name.startsWith('__importStar') ||\n    name.startsWith('__toESM')\n  ) {\n    return 'import:*';\n  }\n\n  if (\n    name.startsWith('__rest') ||\n    name.startsWith('__objRest') ||\n    name.startsWith('_objectDestructuringEmpty')\n  ) {\n    return 'import:*';\n  }\n\n  return undefined;\n}\n\nfunction isAlreadyProcessed(path: NodePath): boolean {\n  if (\n    path.isCallExpression() &&\n    path.get('callee').isIdentifier({ name: '__toCommonJS' })\n  ) {\n    // because its esbuild and we already processed all exports\n    return true;\n  }\n\n  return false;\n}\n\nfunction collectFromRequire(\n  path: NodePath<Identifier>,\n  state: ILocalState\n): void {\n  if (!isRequire(path)) return;\n\n  // This method can be reached many times from multiple visitors for the same path\n  // So we need to check if we already processed it\n  if (state.processedRequires.has(path)) return;\n  state.processedRequires.add(path);\n\n  const { parentPath: callExpression } = path;\n  if (!callExpression.isCallExpression()) {\n    // It's wrong `require`\n    return;\n  }\n\n  const [sourcePath] = callExpression.get('arguments');\n  if (!sourcePath || !sourcePath.isStringLiteral()) {\n    // Import should have at least one argument, and it should be StringLiteral\n    return;\n  }\n\n  const source = sourcePath.node.value;\n\n  const { parentPath: container, key } = callExpression;\n\n  if (container.isCallExpression() && key === 0) {\n    // It may be transpiled import such as\n    // `var _atomic = _interopRequireDefault(require(\"@linaria/atomic\"));`\n    const imported = getImportExportTypeByInteropFunction(container);\n    if (!imported) {\n      // It's not a transpiled import.\n      // TODO: Can we guess that it's a namespace import?\n      debug(\n        'evaluator:collectExportsAndImports',\n        'Unknown wrapper of require',\n        container.node.callee\n      );\n      return;\n    }\n\n    if (imported === 're-export:*') {\n      state.reexports.push({\n        exported: '*',\n        imported: '*',\n        local: path,\n        source,\n      });\n\n      return;\n    }\n\n    let { parentPath: variableDeclarator } = container;\n    if (variableDeclarator.isCallExpression()) {\n      if (variableDeclarator.get('callee').isIdentifier({ name: '_extends' })) {\n        variableDeclarator = variableDeclarator.parentPath!;\n      }\n    }\n\n    if (!variableDeclarator.isVariableDeclarator()) {\n      // TODO: Where else it can be?\n      debug(\n        'evaluator:collectExportsAndImports',\n        'Unexpected require inside',\n        variableDeclarator.node.type\n      );\n      return;\n    }\n\n    const id = variableDeclarator.get('id');\n    if (!id.isIdentifier()) {\n      debug(\n        'evaluator:collectExportsAndImports',\n        'Id should be Identifier',\n        variableDeclarator.node.type\n      );\n      return;\n    }\n\n    if (imported === 'import:*') {\n      const unfolded = unfoldNamespaceImport({\n        imported: '*',\n        local: id,\n        source,\n        type: 'cjs',\n      });\n      state.imports.push(...unfolded);\n    } else {\n      state.imports.push({\n        imported,\n        local: id,\n        source,\n        type: 'cjs',\n      });\n    }\n  }\n\n  if (container.isMemberExpression()) {\n    // It is `require('@linaria/shaker').dep`\n    const property = container.get('property');\n    if (!property.isIdentifier() && !property.isStringLiteral()) {\n      debug(\n        'evaluator:collectExportsAndImports',\n        'Property should be Identifier or StringLiteral',\n        property.node.type\n      );\n\n      return;\n    }\n\n    const { parentPath: variableDeclarator } = container;\n\n    if (variableDeclarator.isVariableDeclarator()) {\n      // It is `const … = require('@linaria/shaker').dep`;\n      const id = variableDeclarator.get('id');\n      if (id.isIdentifier()) {\n        state.imports.push({\n          imported: getValue(property),\n          local: id,\n          source,\n          type: 'cjs',\n        });\n      } else {\n        debug(\n          'evaluator:collectExportsAndImports',\n          'Id should be Identifier',\n          variableDeclarator.node.type\n        );\n      }\n    } else {\n      // Maybe require is passed as an argument to some function?\n      // Just use the whole MemberExpression as a local\n      state.imports.push({\n        imported: getValue(property),\n        local: container,\n        source,\n        type: 'cjs',\n      });\n    }\n\n    return;\n  }\n\n  // Is it `const something = require(\"something\")`?\n  if (key === 'init' && container.isVariableDeclarator()) {\n    importFromVariableDeclarator(container, true).forEach((prop) => {\n      if (prop.what === '*') {\n        const unfolded = unfoldNamespaceImport({\n          imported: '*',\n          local: prop.as,\n          source,\n          type: 'cjs',\n        });\n\n        state.imports.push(...unfolded);\n      } else {\n        state.imports.push({\n          imported: prop.what,\n          local: prop.as,\n          source,\n          type: 'cjs',\n        });\n      }\n    });\n  }\n\n  if (container.isExpressionStatement()) {\n    // Looks like standalone require\n    state.imports.push({\n      imported: 'side-effect',\n      local: container,\n      source,\n    });\n  }\n}\n\nfunction collectFromVariableDeclarator(\n  path: NodePath<VariableDeclarator>,\n  state: ILocalState\n): void {\n  let found = false;\n  path.traverse({\n    Identifier(identifierPath) {\n      if (isRequire(identifierPath)) {\n        collectFromRequire(identifierPath, state);\n        found = true;\n      }\n    },\n  });\n\n  if (found) {\n    path.skip();\n  }\n}\n\nfunction isChainOfVoidAssignment(\n  path: NodePath<AssignmentExpression>\n): boolean {\n  const right = path.get('right');\n  if (right.isUnaryExpression({ operator: 'void' })) {\n    return true;\n  }\n\n  if (right.isAssignmentExpression()) {\n    return isChainOfVoidAssignment(right);\n  }\n\n  return false;\n}\n\nfunction getReturnValue(\n  path: NodePath<FunctionNode>\n): NodePath<Expression> | undefined {\n  if (path.node.params.length !== 0) return undefined;\n\n  const body = path.get('body') as\n    | NodePath<BlockStatement>\n    | NodePath<Expression>;\n  if (body.isExpression()) {\n    return body;\n  }\n\n  if (body.node.body.length === 1) {\n    const returnStatement = body.get('body')?.[0];\n    if (!returnStatement.isReturnStatement()) return undefined;\n    const argument = returnStatement.get('argument');\n    if (!argument.isExpression()) return undefined;\n    return argument;\n  }\n\n  return undefined;\n}\n\nfunction getGetterValueFromDescriptor(\n  descriptor: NodePath<ObjectExpression>\n): NodePath<Expression> | undefined {\n  const props = descriptor\n    .get('properties')\n    .filter(isTypedNode('ObjectProperty'));\n\n  const getter = props.find((p) => p.get('key').isIdentifier({ name: 'get' }));\n  const value = getter?.get('value');\n\n  if (value?.isFunctionExpression() || value?.isArrowFunctionExpression()) {\n    return getReturnValue(value);\n  }\n\n  const valueProp = props.find((p) =>\n    p.get('key').isIdentifier({ name: 'value' })\n  );\n\n  const valueValue = valueProp?.get('value');\n\n  return valueValue?.isExpression() ? valueValue : undefined;\n}\n\nfunction addExport(path: NodePath, exported: string, state: ILocalState): void {\n  function getRelatedImport() {\n    if (path.isMemberExpression()) {\n      const object = path.get('object');\n      if (!object.isIdentifier()) {\n        return undefined;\n      }\n\n      const objectBinding = object.scope.getBinding(object.node.name);\n      if (!objectBinding) {\n        return undefined;\n      }\n\n      if (objectBinding.path.isVariableDeclarator()) {\n        collectFromVariableDeclarator(objectBinding.path, state);\n      }\n\n      const found = state.imports.find(\n        (i) =>\n          objectBinding.identifier === i.local.node ||\n          objectBinding.referencePaths.some((p) => i.local.isAncestor(p))\n      );\n\n      if (!found) {\n        return undefined;\n      }\n\n      const property = path.get('property');\n      let what = '*';\n      if (path.node.computed && property.isStringLiteral()) {\n        what = property.node.value;\n      } else if (!path.node.computed && property.isIdentifier()) {\n        what = property.node.name;\n      }\n\n      return {\n        import: { ...found, local: path },\n        what,\n      };\n    }\n\n    return undefined;\n  }\n\n  const relatedImport = getRelatedImport();\n  if (relatedImport) {\n    // eslint-disable-next-line no-param-reassign\n    state.reexports.push({\n      local: relatedImport.import.local,\n      imported: relatedImport.import.imported,\n      source: relatedImport.import.source,\n      exported,\n    });\n  } else {\n    // eslint-disable-next-line no-param-reassign\n    state.exports[exported] = path;\n  }\n}\n\nfunction collectFromExports(\n  path: NodePath<Identifier>,\n  state: ILocalState\n): void {\n  if (!isExports(path)) return;\n\n  if (path.parentPath.isMemberExpression({ object: path.node })) {\n    // It is `exports.prop = …`\n    const memberExpression = path.parentPath;\n    const property = memberExpression.get('property');\n    if (!property.isIdentifier() || memberExpression.node.computed) {\n      return;\n    }\n\n    const exportName = property.node.name;\n\n    const saveRef = () => {\n      // Save all export.____ usages for later\n      if (!state.exportRefs.has(exportName)) {\n        state.exportRefs.set(exportName, []);\n      }\n\n      state.exportRefs.get(exportName)!.push(memberExpression);\n    };\n\n    const assignmentExpression = memberExpression.parentPath;\n\n    if (\n      !assignmentExpression.isAssignmentExpression({\n        left: memberExpression.node,\n      })\n    ) {\n      // If it's not `exports.prop = …`. Just save it.\n      saveRef();\n      return;\n    }\n\n    const right = assignmentExpression.get('right');\n\n    if (isChainOfVoidAssignment(assignmentExpression)) {\n      // It is `exports.foo = void 0`\n      return;\n    }\n\n    const { name } = property.node;\n    if (name === '__esModule') {\n      // eslint-disable-next-line no-param-reassign\n      state.isEsModule = true;\n      return;\n    }\n\n    saveRef();\n    // eslint-disable-next-line no-param-reassign\n    state.exports[property.node.name] = right;\n\n    return;\n  }\n\n  if (\n    path.parentPath.isCallExpression() &&\n    path.parentPath.get('callee').matchesPattern('Object.defineProperty')\n  ) {\n    const [obj, prop, descriptor] = path.parentPath.get('arguments');\n    if (\n      obj?.isIdentifier(path.node) &&\n      prop?.isStringLiteral() &&\n      descriptor?.isObjectExpression()\n    ) {\n      if (prop.node.value === '__esModule') {\n        // eslint-disable-next-line no-param-reassign\n        state.isEsModule = true;\n      } else {\n        /**\n         *  Object.defineProperty(exports, \"token\", {\n         *    enumerable: true,\n         *    get: function get() {\n         *      return _unknownPackage.token;\n         *    }\n         *  });\n         */\n        const exported = prop.node.value;\n        const local = getGetterValueFromDescriptor(descriptor);\n        if (local) {\n          addExport(local, exported, state);\n        }\n      }\n    } else if (\n      obj?.isIdentifier(path.node) &&\n      prop?.isIdentifier() &&\n      descriptor?.isObjectExpression()\n    ) {\n      /**\n       *  Object.defineProperty(exports, key, {\n       *    enumerable: true,\n       *    get: function get() {\n       *      return _unknownPackage[key];\n       *    }\n       *  });\n       */\n      const local = getGetterValueFromDescriptor(descriptor);\n      if (local) {\n        addExport(local, '*', state);\n      }\n    }\n  }\n}\n\nfunction collectFromRequireOrExports(\n  path: NodePath<Identifier>,\n  state: ILocalState\n): void {\n  if (isRequire(path)) {\n    collectFromRequire(path, state);\n  } else if (isExports(path)) {\n    collectFromExports(path, state);\n  }\n}\n\nfunction unfoldNamespaceImport(\n  importItem: IImport & { imported: '*' }\n): IImport[] {\n  const result: IImport[] = [];\n  const { local } = importItem;\n  if (!local.isIdentifier()) {\n    // TODO: handle it\n    return [importItem];\n  }\n\n  const binding = getScope(local).getBinding(local.node.name);\n  if (!binding?.referenced) {\n    // Imported namespace is not referenced and probably not used,\n    // but it can have side effects, so we should keep it as is\n    return [importItem];\n  }\n\n  for (const referencePath of binding?.referencePaths ?? []) {\n    if (\n      referencePath.find(\n        (ancestor) => ancestor.isTSType() || ancestor.isFlowType()\n      )\n    ) {\n      continue;\n    }\n\n    const { parentPath } = referencePath;\n    if (parentPath?.isMemberExpression() && referencePath.key === 'object') {\n      const property = parentPath.get('property');\n      const object = parentPath.get('object');\n      let imported: string | null;\n      if (parentPath.node.computed && property.isStringLiteral()) {\n        imported = property.node.value;\n      } else if (!parentPath.node.computed && property.isIdentifier()) {\n        imported = property.node.name;\n      } else {\n        imported = null;\n      }\n\n      if (object.isIdentifier() && imported) {\n        result.push({\n          ...importItem,\n          imported,\n          local: parentPath,\n        });\n      } else {\n        result.push(importItem);\n        break;\n      }\n\n      continue;\n    }\n\n    if (parentPath?.isVariableDeclarator() && referencePath.key === 'init') {\n      importFromVariableDeclarator(parentPath, true).map((prop) =>\n        result.push({ ...importItem, imported: prop.what, local: prop.as })\n      );\n\n      continue;\n    }\n\n    if (\n      parentPath?.isCallExpression() &&\n      referencePath.listKey === 'arguments'\n    ) {\n      // The defined variable is used as a function argument. Let's try to figure out what is imported.\n      const importType = getImportExportTypeByInteropFunction(parentPath);\n\n      if (!importType) {\n        // Imported value is used as an unknown function argument,\n        // so we can't predict usage and import it as is.\n        result.push(importItem);\n        break;\n      }\n\n      if (importType === 'default') {\n        result.push({\n          ...importItem,\n          imported: 'default',\n          local: parentPath.get('id') as NodePath<Identifier>,\n        });\n\n        continue;\n      }\n\n      if (importType === 'import:*') {\n        result.push(importItem);\n        break;\n      }\n\n      debug(\n        'evaluator:collectExportsAndImports:unfoldNamespaceImports',\n        'Unknown import type',\n        importType\n      );\n\n      result.push(importItem);\n      continue;\n    }\n\n    if (\n      parentPath?.isExportSpecifier() ||\n      parentPath?.isExportDefaultDeclaration()\n    ) {\n      // The whole namespace is re-exported\n      result.push(importItem);\n      break;\n    }\n\n    // Otherwise, we can't predict usage and import it as is\n    // TODO: handle more cases\n    debug(\n      'evaluator:collectExportsAndImports:unfoldNamespaceImports',\n      'Unknown reference',\n      referencePath.node.type\n    );\n    result.push(importItem);\n    break;\n  }\n\n  return result;\n}\n\nfunction collectFromExportAllDeclaration(\n  path: NodePath<ExportAllDeclaration>,\n  state: ILocalState\n): void {\n  if (isType(path)) return;\n  const source = path.get('source')?.node?.value;\n  if (!source) return;\n\n  // It is `export * from './css';`\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source,\n  });\n}\n\nfunction collectFromExportSpecifier(\n  path: NodePath<\n    ExportSpecifier | ExportDefaultSpecifier | ExportNamespaceSpecifier\n  >,\n  source: string | undefined,\n  state: ILocalState\n): void {\n  if (path.isExportSpecifier()) {\n    const exported = getValue(path.get('exported'));\n    if (source) {\n      // It is `export { foo } from './css';`\n      const imported = path.get('local').node.name;\n      state.reexports.push({\n        exported,\n        imported,\n        local: path,\n        source,\n      });\n    } else {\n      const local = path.get('local');\n      // eslint-disable-next-line no-param-reassign\n      state.exports[exported] = local;\n    }\n\n    return;\n  }\n\n  if (path.isExportDefaultSpecifier() && source) {\n    // It is `export default from './css';`\n    state.reexports.push({\n      exported: 'default',\n      imported: 'default',\n      local: path,\n      source,\n    });\n  }\n\n  if (path.isExportNamespaceSpecifier() && source) {\n    const exported = path.get('exported').node.name;\n    // It is `export * as foo from './css';`\n    state.reexports.push({\n      exported,\n      imported: '*',\n      local: path,\n      source,\n    });\n  }\n\n  // TODO: handle other cases\n  debug(\n    'evaluator:collectExportsAndImports:collectFromExportSpecifier',\n    'Unprocessed ExportSpecifier',\n    path.node.type\n  );\n}\n\nfunction collectFromExportNamedDeclaration(\n  path: NodePath<ExportNamedDeclaration>,\n  state: ILocalState\n): void {\n  if (isType(path)) return;\n\n  const source = path.get('source')?.node?.value;\n  const specifiers = path.get('specifiers');\n  if (specifiers) {\n    specifiers.forEach((specifier) =>\n      collectFromExportSpecifier(specifier, source, state)\n    );\n  }\n\n  const declaration = path.get('declaration');\n  if (declaration.isVariableDeclaration()) {\n    declaration.get('declarations').forEach((declarator) => {\n      // eslint-disable-next-line no-param-reassign\n      state.exports = {\n        ...state.exports,\n        ...exportFromVariableDeclarator(declarator),\n      };\n    });\n  }\n\n  if (declaration.isTSEnumDeclaration()) {\n    // eslint-disable-next-line no-param-reassign\n    state.exports[declaration.get('id').node.name] = declaration;\n  }\n\n  if (declaration.isFunctionDeclaration()) {\n    const id = declaration.get('id');\n    if (id.isIdentifier()) {\n      // eslint-disable-next-line no-param-reassign\n      state.exports[id.node.name] = id;\n    }\n  }\n\n  if (declaration.isClassDeclaration()) {\n    const id = declaration.get('id');\n    if (id.isIdentifier()) {\n      // eslint-disable-next-line no-param-reassign\n      state.exports[id.node.name] = id;\n    }\n  }\n}\n\nfunction collectFromExportDefaultDeclaration(\n  path: NodePath<ExportDefaultDeclaration>,\n  state: ILocalState\n): void {\n  if (isType(path)) return;\n\n  // eslint-disable-next-line no-param-reassign\n  state.exports.default = path.get('declaration');\n}\n\nfunction collectFromAssignmentExpression(\n  path: NodePath<AssignmentExpression>,\n  state: ILocalState\n): void {\n  if (isChainOfVoidAssignment(path)) {\n    return;\n  }\n\n  const left = path.get('left');\n  const right = path.get('right');\n\n  let exported: IReexport['exported'] | undefined;\n\n  if (left.isMemberExpression() && isExports(left.get('object'))) {\n    const property = left.get('property');\n    if (property.isIdentifier()) {\n      exported = property.node.name;\n    }\n  } else if (isExports(left)) {\n    // module.exports = ...\n    if (!isAlreadyProcessed(right)) {\n      exported = 'default';\n    }\n  }\n\n  if (!exported) return;\n\n  if (!right.isCallExpression() || !isRequire(right.get('callee'))) {\n    // eslint-disable-next-line no-param-reassign\n    state.exports[exported] = right;\n    return;\n  }\n\n  const sourcePath = right.get('arguments')?.[0];\n  const source = sourcePath.isStringLiteral()\n    ? sourcePath.node.value\n    : undefined;\n  if (!source) return;\n\n  // It is `exports.foo = require('./css');`\n\n  if (state.exports[exported]) {\n    // eslint-disable-next-line no-param-reassign\n    delete state.exports[exported];\n  }\n\n  state.reexports.push({\n    exported,\n    imported: '*',\n    local: path,\n    source,\n  });\n\n  path.skip();\n}\n\nfunction collectFromExportStarCall(\n  path: NodePath<CallExpression>,\n  state: ILocalState\n) {\n  const [requireCall, exports] = path.get('arguments');\n  if (!isExports(exports)) return;\n  if (!requireCall.isCallExpression()) return;\n  const callee = requireCall.get('callee');\n  const sourcePath = requireCall.get('arguments')?.[0];\n  if (!isRequire(callee) || !sourcePath.isStringLiteral()) return;\n\n  const source = sourcePath.node.value;\n  if (!source) return;\n\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source,\n  });\n\n  path.skip();\n}\n\nfunction collectFromMap(map: NodePath<ObjectExpression>, state: ILocalState) {\n  const properties = map.get('properties');\n  properties.forEach((property) => {\n    if (!property.isObjectProperty()) return;\n    const key = property.get('key');\n    const value = property.get('value');\n    if (!key.isIdentifier()) return;\n    const exported = key.node.name;\n\n    if (!value.isFunction()) return;\n    if (value.node.params.length !== 0) return;\n\n    const returnValue = getReturnValue(value);\n    if (!returnValue) return;\n\n    addExport(returnValue, exported, state);\n  });\n}\n\nfunction collectFromEsbuildExportCall(\n  path: NodePath<CallExpression>,\n  state: ILocalState\n) {\n  const [sourceExports, map] = path.get('arguments');\n  if (!sourceExports.isIdentifier({ name: 'source_exports' })) return;\n  if (!map.isObjectExpression()) return;\n\n  collectFromMap(map, state);\n\n  path.skip();\n}\n\nfunction collectFromEsbuildReExportCall(\n  path: NodePath<CallExpression>,\n  state: ILocalState\n) {\n  const [sourceExports, requireCall, exports] = path.get('arguments');\n  if (!sourceExports.isIdentifier({ name: 'source_exports' })) return;\n  if (!requireCall.isCallExpression()) return;\n  if (!isExports(exports)) return;\n\n  const callee = requireCall.get('callee');\n  if (!isRequire(callee)) return;\n  const sourcePath = requireCall.get('arguments')?.[0];\n  if (!sourcePath.isStringLiteral()) return;\n\n  state.reexports.push({\n    exported: '*',\n    imported: '*',\n    local: path,\n    source: sourcePath.node.value,\n  });\n\n  path.skip();\n}\n\nfunction collectFromSwcExportCall(\n  path: NodePath<CallExpression>,\n  state: ILocalState\n) {\n  const [exports, map] = path.get('arguments');\n  if (!isExports(exports)) return;\n  if (!map.isObjectExpression()) return;\n\n  collectFromMap(map, state);\n\n  path.skip();\n}\n\nfunction collectFromCallExpression(\n  path: NodePath<CallExpression>,\n  state: ILocalState\n) {\n  const maybeExportStart = path.get('callee');\n  if (!maybeExportStart.isIdentifier()) {\n    return;\n  }\n\n  const { name } = maybeExportStart.node;\n\n  // TypeScript\n  if (name.startsWith('__exportStar')) {\n    collectFromExportStarCall(path, state);\n    return;\n  }\n\n  // swc\n  if (name === '_exportStar') {\n    collectFromExportStarCall(path, state);\n  }\n\n  if (name === '_export') {\n    collectFromSwcExportCall(path, state);\n  }\n\n  // esbuild\n  if (name === '__export') {\n    collectFromEsbuildExportCall(path, state);\n  }\n\n  if (name === '__reExport') {\n    collectFromEsbuildReExportCall(path, state);\n  }\n}\n\nexport function collectExportsAndImports(\n  path: NodePath<Program>,\n  cacheMode: 'disabled' | 'force' | 'enabled' = 'enabled'\n): IState {\n  const localState: ILocalState = {\n    deadExports: [],\n    exportRefs: new Map(),\n    exports: {},\n    imports: [],\n    reexports: [],\n    isEsModule: path.node.sourceType === 'module',\n    processedRequires: new WeakSet(),\n  };\n\n  const cache =\n    cacheMode !== 'disabled'\n      ? getTraversalCache<IState>(path, 'collectExportsAndImports')\n      : undefined;\n\n  if (cacheMode === 'enabled' && cache?.has(path)) {\n    return cache.get(path) ?? localState;\n  }\n\n  path.traverse(\n    {\n      AssignmentExpression: collectFromAssignmentExpression,\n      CallExpression: collectFromCallExpression,\n      ExportAllDeclaration: collectFromExportAllDeclaration,\n      ExportDefaultDeclaration: collectFromExportDefaultDeclaration,\n      ExportNamedDeclaration: collectFromExportNamedDeclaration,\n      ImportDeclaration: collectFromImportDeclaration,\n      Import: collectFromDynamicImport,\n      Identifier: collectFromRequireOrExports,\n      VariableDeclarator: collectFromVariableDeclarator,\n    },\n    localState\n  );\n\n  const { processedRequires, ...state } = localState;\n\n  cache?.set(path, state);\n\n  return state;\n}\n"],"mappings":"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"}