{"version":3,"file":"removeDangerousCode.js","names":["_findIdentifiers","require","_isUnnecessaryReactCall","_scopeHelpers","_JSXElementsRemover","_interopRequireDefault","obj","__esModule","default","isGlobal","id","nonType","scope","name","node","hasBinding","hasGlobal","ssrCheckFields","Set","forbiddenGlobals","isBrowserGlobal","has","isSSRCheckField","getPropertyName","path","isIdentifier","isStringLiteral","value","removeDangerousCode","programPath","traverse","CallExpression","enter","p","isUnnecessaryReactCall","JSXElementsRemover","JSXElement","JSXFragment","MemberExpression","state","get","prop","windowScoped","add","globals","filter","removeWithRelated","MetaProperty","Identifier","find","parent","isTSTypeReference","parentPath","isUnaryExpression","operator","isTSTypeQuery","isClassProperty","isMemberExpression","key","push","UnaryExpression","arg","applyAction","type","exports"],"sources":["../src/removeDangerousCode.ts"],"sourcesContent":["import type { NodePath } from '@babel/core';\nimport type { Identifier, Program } from '@babel/types';\n\nimport { nonType } from './findIdentifiers';\nimport { isUnnecessaryReactCall } from './isUnnecessaryReactCall';\nimport { applyAction, removeWithRelated } from './scopeHelpers';\nimport JSXElementsRemover from './visitors/JSXElementsRemover';\n\nconst isGlobal = (id: NodePath<Identifier>): boolean => {\n  if (!nonType(id)) {\n    return false;\n  }\n\n  const { scope } = id;\n  const { name } = id.node;\n  return !scope.hasBinding(name) && scope.hasGlobal(name);\n};\n\nconst ssrCheckFields = new Set([\n  'document',\n  'location',\n  'navigator',\n  'sessionStorage',\n  'localStorage',\n  'window',\n]);\n\nconst forbiddenGlobals = new Set([\n  ...ssrCheckFields,\n  '$RefreshReg$',\n  'XMLHttpRequest',\n  'clearImmediate',\n  'clearInterval',\n  'clearTimeout',\n  'fetch',\n  'navigator',\n  'setImmediate',\n  'setInterval',\n  'setTimeout',\n]);\n\nconst isBrowserGlobal = (id: NodePath<Identifier>) => {\n  return forbiddenGlobals.has(id.node.name) && isGlobal(id);\n};\n\nconst isSSRCheckField = (id: NodePath<Identifier>) => {\n  return ssrCheckFields.has(id.node.name) && isGlobal(id);\n};\n\nconst getPropertyName = (path: NodePath): string | null => {\n  if (path.isIdentifier()) {\n    return path.node.name;\n  }\n\n  if (path.isStringLiteral()) {\n    return path.node.value;\n  }\n\n  return null;\n};\n\nexport const removeDangerousCode = (programPath: NodePath<Program>) => {\n  programPath.traverse(\n    {\n      // JSX can be replaced with a dummy value,\n      // but we have to do it after we processed template tags.\n      CallExpression: {\n        enter(p) {\n          if (isUnnecessaryReactCall(p)) {\n            JSXElementsRemover(p);\n          }\n        },\n      },\n      JSXElement: {\n        enter: JSXElementsRemover,\n      },\n      JSXFragment: {\n        enter: JSXElementsRemover,\n      },\n      MemberExpression(p, state) {\n        const obj = p.get('object');\n        const prop = p.get('property');\n        if (!obj.isIdentifier({ name: 'window' })) {\n          return;\n        }\n\n        const name = getPropertyName(prop);\n        if (!name) {\n          return;\n        }\n\n        state.windowScoped.add(name);\n        // eslint-disable-next-line no-param-reassign\n        state.globals = state.globals.filter((id) => {\n          if (id.node.name === name) {\n            removeWithRelated([id]);\n            return false;\n          }\n\n          return true;\n        });\n      },\n      MetaProperty(p) {\n        // Remove all references to `import.meta`\n        removeWithRelated([p]);\n      },\n      Identifier(p, state) {\n        if (p.find((parent) => parent.isTSTypeReference())) {\n          // don't mess with TS type references\n          return;\n        }\n        if (isBrowserGlobal(p)) {\n          if (\n            p.find(\n              (parentPath) =>\n                parentPath.isUnaryExpression({ operator: 'typeof' }) ||\n                parentPath.isTSTypeQuery()\n            )\n          ) {\n            // Ignore `typeof window` expressions\n            return;\n          }\n\n          if (p.parentPath.isClassProperty()) {\n            // ignore class property decls\n            return;\n          }\n          if (p.parentPath.isMemberExpression() && p.key === 'property') {\n            // ignore e.g this.fetch()\n            // window.fetch will be handled by the windowScoped block below\n            return;\n          }\n\n          removeWithRelated([p]);\n\n          return;\n        }\n\n        if (state.windowScoped.has(p.node.name)) {\n          removeWithRelated([p]);\n        } else if (isGlobal(p)) {\n          state.globals.push(p);\n        }\n      },\n\n      // Since we can use happy-dom, typical SSR checks may not work as expected.\n      // We need to detect them and replace with an \"undefined\" literal.\n      UnaryExpression(p) {\n        if (p.node.operator !== 'typeof') {\n          return;\n        }\n        const arg = p.get('argument');\n        if (!arg.isIdentifier() || !isSSRCheckField(arg)) {\n          return;\n        }\n\n        applyAction([\n          'replace',\n          p,\n          { type: 'StringLiteral', value: 'undefined' },\n        ]);\n      },\n    },\n    {\n      globals: [] as NodePath<Identifier>[],\n      windowScoped: new Set<string>(),\n    }\n  );\n};\n"],"mappings":"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"}