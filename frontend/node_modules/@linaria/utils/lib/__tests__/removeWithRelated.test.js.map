{"version":3,"file":"removeWithRelated.test.js","names":["_path","require","babel","_interopRequireWildcard","_generator","_interopRequireDefault","_dedent","_scopeHelpers","obj","__esModule","default","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","File","run","rawCode","code","dedent","filename","join","__dirname","ast","parse","babelrc","configFile","presets","file","visitor","path","_path$node$leadingCom","node","leadingComments","length","value","trim","comment","listKey","_prevNode$node$traili","prevNode","getSibling","trailingComments","includes","_prevNode$node$traili2","filter","c","removeWithRelated","traverse","Expression","Statement","generator","describe","it","expect","toMatchSnapshot","toBe"],"sources":["../../src/__tests__/removeWithRelated.test.ts"],"sourcesContent":["/* eslint-env jest */\nimport { join } from 'path';\n\nimport * as babel from '@babel/core';\nimport type { NodePath } from '@babel/core';\nimport generator from '@babel/generator';\nimport type { File as FileNode } from '@babel/types';\nimport dedent from 'dedent';\n\nimport { removeWithRelated } from '../scopeHelpers';\n\ntype MissedBabelCoreTypes = {\n  File: new (\n    options: { filename: string },\n    file: { ast: FileNode; code: string }\n  ) => { path: NodePath<FileNode> };\n};\n\nconst { File } = babel as typeof babel & MissedBabelCoreTypes;\n\nconst run = (rawCode: TemplateStringsArray) => {\n  const code = dedent(rawCode);\n  const filename = join(__dirname, 'source.ts');\n\n  const ast = babel.parse(code, {\n    babelrc: false,\n    configFile: false,\n    filename,\n    presets: ['@babel/preset-typescript'],\n  })!;\n\n  const file = new File({ filename }, { code, ast });\n\n  const visitor = (path: NodePath) => {\n    if (\n      !path.node.leadingComments?.length ||\n      path.node.leadingComments[0].value.trim() !== 'remove'\n    ) {\n      return;\n    }\n\n    const comment = path.node.leadingComments[0];\n    if (path.listKey && typeof path.key === 'number' && path.key > 0) {\n      const prevNode = path.getSibling(path.key - 1);\n      if (prevNode.node.trailingComments?.includes(comment)) {\n        // eslint-disable-next-line no-param-reassign\n        prevNode.node.trailingComments = prevNode.node.trailingComments?.filter(\n          (c) => c !== comment\n        );\n      }\n    }\n\n    // eslint-disable-next-line no-param-reassign\n    path.node.leadingComments = null;\n\n    removeWithRelated([path]);\n  };\n\n  file.path.traverse({\n    Expression: visitor,\n    Statement: visitor,\n  });\n\n  return generator(file.path.node).code;\n};\n\ndescribe('removeWithRelated', () => {\n  it('should keep alive used import specifier', () => {\n    const code = run`\n      import { a, b } from './source';\n\n      /* remove */a;\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should remove the whole import', () => {\n    const code = run`\n      import { a } from './source';\n\n      /* remove */a;\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should remove try/catch block', () => {\n    const code = run`\n      const a = 1;\n\n      try {\n        /* remove */42;\n      } catch (e) {\n      }\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should optimize logical expression', () => {\n    const code = run`\n      const a = 1;\n      /* remove */const b = 2;\n      const c = 3;\n\n      const res = a && b && c;\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should shake try/catch', () => {\n    const code = run`\n      {\n        const a = 1;\n        /* remove */const b = 2;\n\n        function c() {\n          try {\n            return a;\n          } catch(e) {\n            return b;\n          }\n        }\n      }\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should remove node if it becomes invalid after removing its children', () => {\n    const code = run`\n      /* remove */const mode = \"DEV\";\n\n      if (mode !== \"DEV\") {\n      }\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should not delete params of functions', () => {\n    const code = run`\n      function test(arg) {\n        /* remove */console.log(arg);\n        return null;\n      }\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should remove functions with empty bodies', () => {\n    const code = run`\n      function container() {\n        function testFn(arg) {\n          /* remove */console.log(arg);\n        }\n\n        const testArrow = (arg) => {\n          /* remove */console.log(arg);\n        }\n      }\n    `;\n\n    expect(code).toBe('function container() {}');\n  });\n\n  it('should not remove top-level functions with empty bodies', () => {\n    const code = run`\n      function testFn(arg) {\n        /* remove */console.log(arg);\n      }\n\n      export const testArrow1 = (arg) => {\n        /* remove */console.log(arg);\n      }\n\n      const testArrow2 = (arg) => (\n        /* remove */testFn = arg\n      )\n\n      export default function testDefaultFn(arg) {\n        /* remove */console.log(arg);\n      }\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n\n  it('should not remove functions that are assigned to prototype', () => {\n    const code = run`\n      (function() {\n        function SomeClass() {}\n\n        SomeClass.prototype.foo = function foo() {}\n\n        SomeClass.prototype.bar = function bar() {\n          /* remove */console.log(arg);\n        };\n      })();\n    `;\n\n    expect(code).toMatchSnapshot();\n  });\n});\n"],"mappings":"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"}