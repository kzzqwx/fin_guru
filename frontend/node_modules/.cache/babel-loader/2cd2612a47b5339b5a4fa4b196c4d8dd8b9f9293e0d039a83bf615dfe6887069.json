{"ast":null,"code":"import { useEffect, useRef } from 'react';\nexport var ROOT_FONT_SIZE = 16;\nexport var useAutoResize = function useAutoResize(active, ref, value, minHeight, maxHeight) {\n  var isManualResize = useRef(false);\n  var previousHeight = useRef();\n  useEffect(function () {\n    if (active && ref && ref.current && !isManualResize.current) {\n      // проверка на пользовательский resize (вручную)\n      var height = ref.current.clientHeight / ROOT_FONT_SIZE;\n      if (previousHeight.current !== undefined && previousHeight.current !== height) {\n        isManualResize.current = true;\n        return;\n      }\n      ref.current.style.height = \"\".concat(minHeight ? minHeight + 1 : '0', \"rem\");\n      var scrollHeight = ref.current.scrollHeight / ROOT_FONT_SIZE;\n      var newHeight = Math.min(scrollHeight, maxHeight ? maxHeight + 1 : scrollHeight);\n      ref.current.style.height = \"\".concat(newHeight, \"rem\");\n      previousHeight.current = newHeight;\n    }\n  }, [ref, active, value]);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}