{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { createButton, ButtonRoot, getButtonSizesMixin, buttonViews, applyNoSelect, button2, caption } from '@salutejs/plasma-core';\nimport { useThemeContext } from '../../hooks';\nimport { applyInteraction } from '../../mixins';\nimport { sizes } from './ActionButton.sizes';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Button/ActionButton'); // INFO: Omit 'onResize' | 'onResizeCapture' | 'nonce'\n// because this types coming with @types/react@18 and breaks react@17.0.2 with @types/react@18\nvar buttonSizes = {\n  l: {\n    height: 'var(--plasma-actionbutton-l-height)',\n    paddingY: 'var(--plasma-actionbutton-l-padding-y)',\n    paddingX: 'var(--plasma-actionbutton-l-padding-x)',\n    paddingContentX: 'var(--plasma-actionbutton-l-padding-content-x)',\n    paddingStretchX: 'var(--plasma-actionbutton-l-padding-stretch-x)',\n    radius: 'var(--plasma-actionbutton-l-radius)',\n    radiusCircle: 'var(--plasma-actionbutton-l-radius-circle)'\n  },\n  m: {\n    height: 'var(--plasma-actionbutton-m-height)',\n    paddingY: 'var(--plasma-actionbutton-m-padding-y)',\n    paddingX: 'var(--plasma-actionbutton-m-padding-x)',\n    paddingContentX: 'var(--plasma-actionbutton-m-padding-content-x)',\n    paddingStretchX: 'var(--plasma-actionbutton-m-padding-stretch-x)',\n    radius: 'var(--plasma-actionbutton-m-radius)',\n    radiusCircle: 'var(--plasma-actionbutton-m-radius-circle)'\n  },\n  s: {\n    height: 'var(--plasma-actionbutton-s-height)',\n    paddingY: 'var(--plasma-actionbutton-s-padding-y)',\n    paddingX: 'var(--plasma-actionbutton-s-padding-x)',\n    paddingContentX: 'var(--plasma-actionbutton-s-padding-content-x)',\n    paddingStretchX: 'var(--plasma-actionbutton-s-padding-stretch-x)',\n    radius: 'var(--plasma-actionbutton-s-radius)',\n    radiusCircle: 'var(--plasma-actionbutton-s-radius-circle)'\n  }\n};\nvar buttonTypography = {\n  xs: button2,\n  xxs: caption,\n  xxxs: caption\n};\nvar applySizes = /*#__PURE__*/getButtonSizesMixin(buttonSizes, buttonTypography);\nvar applyViews = function applyViews(_ref) {\n  var view = _ref.view;\n  return buttonViews[view];\n};\nvar StyledButtonRoot = /*#__PURE__*/styled(ButtonRoot).withConfig({\n  componentId: \"plasma-ui__sc-1cy29p1-0\"\n})([\"\", \" \", \" \", \" \", \" \", \"\"], sizes, applySizes, applyViews, applyInteraction, applyNoSelect);\n\n/**\n * Кнопка для размещения внутри карточек.\n * Упрощенная версия ``Button`` для создания квадратных кнопок (с соотношением сторон 1:1).\n * Размеры ``ActionButton`` меньше размеров ``Button``.\n * Обладает теми же цветами, размерами и модификаторами, что и основная кнопка.\n */\nvar ButtonBase = /*#__PURE__*/createButton(StyledButtonRoot);\nexport var ActionButton = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useThemeContext = useThemeContext(),\n    deviceScale = _useThemeContext.deviceScale;\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, props, {\n    ref: ref,\n    deviceScale: deviceScale\n  }));\n});\nActionButton.defaultProps = {\n  size: 'm',\n  view: 'secondary',\n  pin: 'square-square',\n  square: true,\n  outlined: true,\n  scaleOnInteraction: true\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}