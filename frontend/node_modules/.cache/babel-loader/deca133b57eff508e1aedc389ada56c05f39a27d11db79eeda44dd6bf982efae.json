{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findInArray = findInArray;\nexports.isFunction = isFunction;\nexports.isNum = isNum;\nexports.int = int;\nexports.dontSetMe = dontSetMe;\n\n// @credits https://gist.github.com/rogozhnikoff/a43cfed27c41e4e68cdc\nfunction findInArray(array\n/*: Array<any> | TouchList*/, callback\n/*: Function*/) /*: any*/\n{\n  for (var i = 0, length = array.length; i < length; i++) {\n    if (callback.apply(callback, [array[i], i, array])) return array[i];\n  }\n}\nfunction isFunction(func\n/*: any*/) /*: boolean %checks*/\n{\n  return typeof func === 'function' || Object.prototype.toString.call(func) === '[object Function]';\n}\nfunction isNum(num\n/*: any*/) /*: boolean %checks*/\n{\n  return typeof num === 'number' && !isNaN(num);\n}\nfunction int(a\n/*: string*/) /*: number*/\n{\n  return parseInt(a, 10);\n}\nfunction dontSetMe(props\n/*: Object*/, propName\n/*: string*/, componentName\n/*: string*/) {\n  if (props[propName]) {\n    return new Error(\"Invalid prop \".concat(propName, \" passed to \").concat(componentName, \" - do not set this, set it on the child.\"));\n  }\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}