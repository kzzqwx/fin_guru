{"ast":null,"code":"var _excluded = [\"children\"],\n  _excluded2 = [\"index\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useMemo } from 'react';\nimport { TabsView } from './TabsView';\nimport { TabItemRefs, TabsAnimationContext } from './TabsAnimationContext';\nimport { TabsSlider } from './TabsSlider';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Tabs/Tabs');\nvar isAnimatedProps = function isAnimatedProps(props) {\n  return props.animated === true;\n};\n\n/**\n * Контейнер вкладок со слайдером\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var Tabs = /*#__PURE__*/forwardRef(function Tabs(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var refs = useMemo(function () {\n    return new TabItemRefs();\n  }, []);\n  if (!isAnimatedProps(props)) {\n    return /*#__PURE__*/React.createElement(TabsView, _extends({\n      ref: ref\n    }, props), children);\n  }\n  var index = props.index,\n    rest = _objectWithoutProperties(props, _excluded2);\n  var childrenArray = React.Children.toArray(children);\n  var animatedChildren = childrenArray.map(function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        disabled: rest.disabled,\n        animated: true\n      });\n    }\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(TabsAnimationContext.Provider, {\n    value: refs\n  }, /*#__PURE__*/React.createElement(TabsView, _extends({\n    ref: ref\n  }, rest), animatedChildren, /*#__PURE__*/React.createElement(TabsSlider, {\n    index: index,\n    disabled: rest.disabled\n  })));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}