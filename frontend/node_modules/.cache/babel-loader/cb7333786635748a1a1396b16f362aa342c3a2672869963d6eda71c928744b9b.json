{"ast":null,"code":"var _excluded = [\"isFocused\", \"dayOfWeek\", \"disabled\", \"isCurrent\", \"isSelected\", \"isDayInCurrentMonth\", \"isDouble\", \"inRange\", \"isHovered\", \"sideInRange\", \"eventList\", \"day\", \"monthIndex\", \"year\", \"onClick\", \"onMouseOver\", \"onFocus\", \"disabledArrowKey\", \"disabledMonths\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, memo } from 'react';\nimport { cx } from '../../../../utils';\nimport { classes } from '../../Calendar.tokens';\nimport { StyledDay, StyledDayRoot, StyledEvent, StyledEvents } from './CalendarDayItem.styles';\n\n/**\n * Компонент дня в календаре.\n */\nexport var CalendarDayItem = /*#__PURE__*/memo( /*#__PURE__*/forwardRef(function (_ref, outerRef) {\n  var isFocused = _ref.isFocused,\n    dayOfWeek = _ref.dayOfWeek,\n    disabled = _ref.disabled,\n    isCurrent = _ref.isCurrent,\n    isSelected = _ref.isSelected,\n    isDayInCurrentMonth = _ref.isDayInCurrentMonth,\n    isDouble = _ref.isDouble,\n    inRange = _ref.inRange,\n    isHovered = _ref.isHovered,\n    sideInRange = _ref.sideInRange,\n    _ref$eventList = _ref.eventList,\n    eventList = _ref$eventList === void 0 ? [] : _ref$eventList,\n    day = _ref.day,\n    monthIndex = _ref.monthIndex,\n    year = _ref.year,\n    onClick = _ref.onClick,\n    onMouseOver = _ref.onMouseOver,\n    onFocus = _ref.onFocus,\n    disabledArrowKey = _ref.disabledArrowKey,\n    disabledMonths = _ref.disabledMonths,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var selectableClass = !dayOfWeek && !disabled ? classes.selectableItem : undefined;\n  var selectedClass = isSelected ? classes.selectedItem : undefined;\n  var currentClass = isCurrent ? classes.currentItem : undefined;\n  var hoveredClass = isHovered ? classes.hoveredItem : undefined;\n  var dayOfWeekClass = dayOfWeek ? classes.dayOfWeek : undefined;\n  var disabledClass = disabled && !isCurrent ? classes.dayDisabled : undefined;\n  var disabledCurrentClass = disabled && isCurrent ? classes.dayDisabledCurrent : undefined;\n  var sideInRangeLeft = sideInRange === 'left' ? classes.daySideLeft : undefined;\n  var sideInRangeRight = sideInRange === 'right' ? classes.daySideRight : undefined;\n  var sideInRangeClass = sideInRange ? classes.daySideInRange : undefined;\n  var inRangeStyle = inRange ? classes.dayInRange : undefined;\n  var sideOffset = !isSelected && isCurrent ? -1 : 0;\n  return /*#__PURE__*/React.createElement(StyledDayRoot, _extends({\n    ref: outerRef,\n    className: cx(dayOfWeekClass, selectableClass, selectedClass, currentClass, disabledClass, disabledCurrentClass, hoveredClass),\n    tabIndex: isFocused ? 0 : -1,\n    dayOfWeek: dayOfWeek,\n    isCurrent: isCurrent,\n    isSelected: isSelected,\n    isDayInCurrentMonth: isDayInCurrentMonth,\n    isDouble: isDouble,\n    isHovered: isHovered,\n    sideInRange: sideInRange,\n    onClick: disabled ? undefined : onClick,\n    onMouseOver: onMouseOver,\n    onFocus: onFocus,\n    \"data-day\": day,\n    \"data-month-index\": monthIndex,\n    \"data-year\": year,\n    \"data-disabled-arrow-key\": disabledArrowKey || undefined,\n    \"data-disabled-months\": disabledMonths || undefined,\n    \"aria-selected\": isSelected,\n    \"aria-disabled\": disabled,\n    \"aria-describedby\": disabled ? 'withShift' : undefined\n  }, rest), /*#__PURE__*/React.createElement(StyledDay, {\n    className: cx(sideInRangeClass, sideInRangeLeft, sideInRangeRight, inRangeStyle),\n    offset: sideOffset\n  }, day), /*#__PURE__*/React.createElement(StyledEvents, {\n    \"aria-hidden\": true\n  }, [eventList[0], eventList[1], eventList[2]].map(function (event, i) {\n    return event && /*#__PURE__*/React.createElement(StyledEvent, _extends({\n      key: \"\".concat(event.date, \"-\").concat(i)\n    }, event));\n  })));\n}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}