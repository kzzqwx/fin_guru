{"ast":null,"code":"var _excluded = [\"size\", \"text\", \"contentLeft\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { caption } from '../../tokens';\n\n/**\n * Размеры в ремах.\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Badge/Badge');\nexport var badgeSizes = {\n  l: {\n    textMarginX: '0.25rem',\n    textMarginLeftAfterContent: '0.25rem'\n  },\n  s: {\n    textMarginX: '0.125rem',\n    textMarginLeftAfterContent: '0.125rem'\n  }\n};\nexport var badgeRootSizes = {\n  l: {\n    height: '1.5rem',\n    padding: '0.25rem',\n    minWidth: '1.5rem',\n    borderRadius: '0.75rem',\n    fontSize: '0.75rem'\n  },\n  s: {\n    height: '1rem',\n    padding: '0.125rem',\n    minWidth: '1rem',\n    borderRadius: '0.5rem',\n    fontSize: '0.625rem'\n  }\n};\nvar StyledText = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-16llsfu-0\"\n})([\"\"]);\nvar StyledContent = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-16llsfu-1\"\n})([\"display:flex;\"]);\nvar StyledBadge = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-16llsfu-2\"\n})([\"\", \";display:inline-flex;align-items:center;box-sizing:border-box;justify-content:center;width:max-content;\", \";\"], caption, function (_ref) {\n  var size = _ref.size,\n    circled = _ref.circled;\n  return css([\"\", \";\", \" \", \"{margin-left:\", \";margin-right:\", \";}\", \" ~ \", \"{margin-left:\", \";}\"], badgeRootSizes[size], circled && css([\"width:\", \";padding-left:0;padding-right:0;\"], badgeRootSizes[size].minWidth), StyledText, badgeSizes[size].textMarginX, badgeSizes[size].textMarginX, StyledContent, StyledText, badgeSizes[size].textMarginLeftAfterContent);\n});\n/**\n * Небольшая бирка для ячеек и карточек.\n * Компонент может отображаться в нескольких размерах и цветах, может содержать текст и/или иконку.\n */\nexport var Badge = function Badge(_ref2) {\n  var _ref2$size = _ref2.size,\n    size = _ref2$size === void 0 ? 'l' : _ref2$size,\n    text = _ref2.text,\n    contentLeft = _ref2.contentLeft,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  return /*#__PURE__*/React.createElement(StyledBadge, _extends({\n    size: size\n  }, rest), contentLeft && /*#__PURE__*/React.createElement(StyledContent, null, contentLeft), text && /*#__PURE__*/React.createElement(StyledText, null, text));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}