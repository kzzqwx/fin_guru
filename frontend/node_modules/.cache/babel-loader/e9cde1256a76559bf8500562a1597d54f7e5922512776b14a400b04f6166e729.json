{"ast":null,"code":"import React, { useCallback, useRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useIsomorphicLayoutEffect } from '../../hooks';\nvar Slider = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-drxvay-0\"\n})([\"position:relative;height:1.625rem;user-select:none;\", \" \", \"\"], function (_ref) {\n  var _ref$$settings = _ref.$settings,\n    _ref$$settings$indent = _ref$$settings.indent,\n    indent = _ref$$settings$indent === void 0 ? 0.75 : _ref$$settings$indent,\n    backgroundColor = _ref$$settings.backgroundColor,\n    fillColor = _ref$$settings.fillColor;\n  return css([\"--indent:\", \"rem;--background-color:\", \";--fill-color:\", \";\"], indent, backgroundColor, fillColor);\n}, function (_ref2) {\n  var disabled = _ref2.disabled;\n  return disabled && css([\"opacity:0.4;\"]);\n});\nvar RailWrap = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-drxvay-1\"\n})([\"height:100%;\"]);\nvar Rail = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-drxvay-2\"\n})([\"position:relative;top:50%;margin-left:var(--indent);margin-right:var(--indent);height:0.25rem;border-radius:0.125rem;background-color:var(--background-color);overflow:hidden;transform:translateY(-50%);\"]);\nvar Fill = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-drxvay-3\"\n})([\"position:absolute;height:100%;top:0;left:0;background-color:var(--fill-color);width:0;\"]);\nexport var SliderBase = function SliderBase(_ref3) {\n  var max = _ref3.max,\n    min = _ref3.min,\n    setStepSize = _ref3.setStepSize,\n    railFillWidth = _ref3.railFillWidth,\n    children = _ref3.children,\n    _ref3$railFillXPositi = _ref3.railFillXPosition,\n    railFillXPosition = _ref3$railFillXPositi === void 0 ? 0 : _ref3$railFillXPositi,\n    disabled = _ref3.disabled,\n    onChange = _ref3.onChange,\n    _ref3$settings = _ref3.settings,\n    settings = _ref3$settings === void 0 ? {} : _ref3$settings;\n  var _settings$indent = settings.indent,\n    indent = _settings$indent === void 0 ? 0.75 : _settings$indent,\n    _settings$fontSizeMul = settings.fontSizeMultiplier,\n    fontSizeMultiplier = _settings$fontSizeMul === void 0 ? 16 : _settings$fontSizeMul;\n  var ref = useRef(null);\n  var gap = indent * fontSizeMultiplier * 2;\n  var onHandleChange = useCallback(function (e) {\n    if (!onChange || disabled) {\n      return;\n    }\n    var _e$currentTarget$getB = e.currentTarget.getBoundingClientRect(),\n      x = _e$currentTarget$getB.x,\n      width = _e$currentTarget$getB.width;\n    var lastX = e.clientX - x;\n    var position = min + lastX / (width - gap) * (max - min);\n    var result = Math.max(min, Math.min(max, position));\n    onChange(result, {\n      lastX: lastX\n    });\n  }, [onChange, disabled, min, gap, max]);\n  useIsomorphicLayoutEffect(function () {\n    var resizeHandler = function resizeHandler() {\n      if (ref.current) {\n        var railSize = ref.current.offsetWidth - gap;\n        var totalSteps = max - min;\n        setStepSize(railSize / totalSteps);\n      }\n    };\n    resizeHandler();\n    window.addEventListener('resize', resizeHandler);\n    return function () {\n      return window.removeEventListener('resize', resizeHandler);\n    };\n  }, [min, max, setStepSize, ref.current]);\n  var fillStyle = {\n    left: \"\".concat(railFillXPosition, \"px\"),\n    width: \"\".concat(railFillWidth, \"px\")\n  };\n  return /*#__PURE__*/React.createElement(Slider, {\n    disabled: disabled,\n    ref: ref,\n    $settings: settings\n  }, /*#__PURE__*/React.createElement(RailWrap, {\n    \"aria-hidden\": \"true\",\n    onMouseDown: onHandleChange\n  }, /*#__PURE__*/React.createElement(Rail, null, /*#__PURE__*/React.createElement(Fill, {\n    style: fillStyle\n  }))), children);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}