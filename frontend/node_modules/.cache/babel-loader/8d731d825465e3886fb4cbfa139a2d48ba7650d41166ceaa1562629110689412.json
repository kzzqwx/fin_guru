{"ast":null,"code":"var _excluded = [\"content\", \"status\", \"message\", \"disabled\", \"progress\", \"accept\", \"loader\", \"validate\", \"onChange\", \"onValidation\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport { UploadRoot } from './UploadRoot';\nimport { UploadButton } from './UploadButton';\nimport { UploadMessage } from './UploadMessage';\nimport { UploadProgress } from './UploadProgress';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Upload/Upload');\n/**\n * Компонент для загрузки файлов.\n */\nexport var Upload = function Upload(_ref) {\n  var content = _ref.content,\n    status = _ref.status,\n    message = _ref.message,\n    disabled = _ref.disabled,\n    progress = _ref.progress,\n    accept = _ref.accept,\n    loader = _ref.loader,\n    validate = _ref.validate,\n    onChange = _ref.onChange,\n    onValidation = _ref.onValidation,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(UploadRoot, rest, /*#__PURE__*/React.createElement(UploadButton, {\n    status: status,\n    disabled: disabled,\n    accept: accept,\n    content: content,\n    isProgress: Boolean(progress !== undefined),\n    loader: loader || /*#__PURE__*/React.createElement(UploadProgress, {\n      progress: progress\n    }),\n    validate: validate,\n    onValidation: onValidation,\n    onChange: onChange\n  }), message && /*#__PURE__*/React.createElement(UploadMessage, {\n    status: status\n  }, message));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}