{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { applyInputStyles } from '../Input/Input.mixins';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('TextArea/TextArea');\nexport var applyTextAreaCssProperties = function applyTextAreaCssProperties(_ref) {\n  var height = _ref.height,\n    width = _ref.width;\n  var computedHeight = !Number.isNaN(Number(height)) ? \"\".concat(height, \"rem\") : height;\n  var computedWidth = !Number.isNaN(Number(width)) ? \"\".concat(width, \"rem\") : width;\n  return css([\"--plasma-textarea-height:\", \";--plasma-textarea-width:\", \";\"], computedHeight, computedWidth);\n};\n/**\n * Base textarea.\n */\nexport var TextArea = /*#__PURE__*/styled.textarea.withConfig({\n  componentId: \"plasma__sc-19ztps1-0\"\n})([\"\", \" \", \" display:block;min-height:3.5rem;height:\", \";width:\", \";\", \"\"], applyInputStyles, applyTextAreaCssProperties, function (_ref2) {\n  var rows = _ref2.rows;\n  return rows ? 'unset' : 'var(--plasma-textarea-height, 9.375rem)';\n}, function (_ref3) {\n  var cols = _ref3.cols;\n  return cols ? 'unset' : 'var(--plasma-textarea-width, 100%)';\n}, function (_ref4) {\n  var resize = _ref4.resize,\n    cols = _ref4.cols;\n  return css([\"\", \" \", \"\"], resize && \"resize: \".concat(resize, \";\"), resize !== 'both' && resize !== 'horizontal' && !cols && 'min-width: var(--plasma-textarea-width, 100%); max-width: var(--plasma-textarea-width, 100%)');\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}