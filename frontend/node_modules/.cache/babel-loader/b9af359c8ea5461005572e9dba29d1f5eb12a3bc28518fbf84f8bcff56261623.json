{"ast":null,"code":"var _excluded = [\"type\", \"theme\", \"size\", \"offset\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport styled, { css } from 'styled-components';\nimport { mediaQuery, gridSizes, gridColumns } from '../../utils';\nimport { sizes, offsets } from './types';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Grid/Col');\n// TODO: https://github.com/salute-developers/plasma/issues/232\n/**\n * Блок для размещения контента или строк (``Row``) внутри себя.\n *\n * ``<Col type=\"rel\" />`` — предназначается для верстки с страниц. Поведение по умолчанию.\n * Ширина и отступ данного подтипа колонок имеют относительное значение, которое выражается в процентах.\n *\n * ``<Col type=\"calc\" />`` — предназначается для верстки каруселей.\n * Ширина и отступ данного подтипа колонок рассчитываются на основе ширины контейнера и хранятся в ``CSS Variables``.\n * С примером использования можно ознакомиться в документации по [каруселям](/?path=/docs/controls-carousel--basic).\n */\nexport var Col = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-nqfuxs-0\"\n})([\"box-sizing:border-box;padding-left:var(--plasma-grid-gutter);padding-right:var(--plasma-grid-gutter);\", \"\"], function (_ref) {\n  var _ref$type = _ref.type,\n    type = _ref$type === void 0 ? 'rel' : _ref$type,\n    theme = _ref.theme,\n    size = _ref.size,\n    offset = _ref.offset,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return gridSizes.map(function (breakpoint) {\n    var bpSize = sizes[breakpoint];\n    var bpOffset = offsets[breakpoint];\n    var colSize = props[bpSize] || size;\n    var colOffset = props[bpOffset] || offset;\n    return mediaQuery(breakpoint, theme.deviceScale)(css([\"\", \" \", \" \", \" \", \"\"], type === 'rel' && colSize && \"width: \".concat(100 / gridColumns[breakpoint] * colSize, \"%;\"), type === 'rel' && colOffset && \"margin-left: \".concat(100 / gridColumns[breakpoint] * colOffset, \"%;\"), type === 'calc' && colSize && \"width: calc(var(--plasma-grid-column-width) * \".concat(colSize, \");\"), type === 'calc' && colOffset && \"margin-left: calc(var(--plasma-grid-column-width) * \".concat(colOffset, \");\")));\n  });\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}