{"ast":null,"code":"import styled, { css } from 'styled-components';\n/**\n * Компонент применяется, если требуется компенсировать отступы контейнера в сетке.\n * При обертывании вокруг ``Carousel``, добавляет карусели и ее прокрутке дополнительные отступы.\n * Стилизованный компонент, обладающий всеми свойствами ``div``.\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Carousel/Carousel');\nexport var CarouselGridWrapper = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-g6im04-0\"\n})([\"overflow:hidden;margin-left:calc(var(--plasma-grid-margin) * -1);margin-right:calc(var(--plasma-grid-margin) * -1);\"]);\n\n/**\n * Корневой элемент - ограничивающая обертка карусели.\n */\nexport var Carousel = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-g6im04-1\"\n})([\"position:relative;margin:0;padding:0;list-style:none;::-webkit-scrollbar{display:none;}\", \" \", \" \", \" &{scroll-padding:0 var(--plasma-grid-margin);padding-left:var(--plasma-grid-margin);}\"], function (_ref) {\n  var axis = _ref.axis;\n  return axis === 'x' ? css([\"overflow-x:auto;overflow-y:hidden;\"]) : css([\"height:100%;overflow-x:hidden;overflow-y:auto;\"]);\n}, function (_ref2) {\n  var scrollSnapType = _ref2.scrollSnapType,\n    axis = _ref2.axis;\n  return scrollSnapType && scrollSnapType !== 'none' && css([\"scroll-behavior:\", \";scroll-snap-type:\", \" \", \";\"], function (_ref3) {\n    var theme = _ref3.theme;\n    return theme.lowPerformance ? 'unset' : 'smooth';\n  }, axis, scrollSnapType);\n}, CarouselGridWrapper);\n\n/**\n * Списковый (трековый) элемент карусели для непосредственного вложения айтемов в него.\n */\nexport var CarouselTrack = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-g6im04-2\"\n})([\"\", \" \", \" \", \"\"], function (_ref4) {\n  var virtualSize = _ref4.virtualSize,\n    axis = _ref4.axis;\n  return (\n    // для виртуализированной карусели (useVirtual)\n    virtualSize && css([\"position:absolute;\", \":\", \"px;\"], axis === 'x' ? 'width' : 'height', virtualSize)\n  );\n}, function (_ref5) {\n  var liteMode = _ref5.liteMode;\n  return (\n    // для поддержки CarouselLite\n    liteMode && css([\"transition-property:transform;transition-duration:0.5s;transform:translate(0px,0px);\"])\n  );\n}, function (_ref6) {\n  var axis = _ref6.axis,\n    paddingStart = _ref6.paddingStart,\n    paddingEnd = _ref6.paddingEnd;\n  return axis === 'x' ? css([\"display:inline-flex;flex-direction:row;\", \" \", \"\"], paddingStart && css([\"padding-left:\", \";\"], paddingStart), paddingEnd ? css([\"padding-right:\", \";\"], paddingEnd) : css([\"\", \" &{padding-right:var(--plasma-grid-margin);}\"], CarouselGridWrapper)) : css([\"display:flex;flex-direction:column;width:100%;\", \" \", \"\"], paddingStart && css([\"padding-top:\", \";\"], paddingStart), paddingEnd && css([\"padding-bottom:\", \";\"], paddingEnd));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}