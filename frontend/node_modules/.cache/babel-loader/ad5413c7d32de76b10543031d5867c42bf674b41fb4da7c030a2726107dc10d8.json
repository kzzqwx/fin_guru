{"ast":null,"code":"var _excluded = [\"id\", \"selectionMode\", \"pilled\", \"stretch\", \"filledBackground\", \"disabled\", \"size\", \"view\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useCallback, useMemo, useState, Children, useEffect } from 'react';\nimport { safeUseId, useCarousel } from '@salutejs/plasma-core';\nimport { IconDisclosureLeft, IconDisclosureRight } from '../../../_Icon';\nimport { classes, tokens } from '../../tokens';\nimport { cx } from '../../../../utils';\nimport { useSegmentInner } from '../../SegmentProvider/SegmentProvider';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as disabledCSS } from './variations/_disabled/base';\nimport { base as pilledCSS } from './variations/_pilled/base';\nimport { base as filledBackgroundCSS } from './variations/_filledBackgound/base';\nimport { base as stretchCSS } from './variations/_stretch/base';\nimport { StyledArrow, StyledContent, StyledContentWrapper, base } from './SegmentGroup.styles';\nexport var segmentGroupRoot = function segmentGroupRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, outerRef) {\n    var id = props.id,\n      selectionMode = props.selectionMode,\n      pilled = props.pilled,\n      stretch = props.stretch,\n      _props$filledBackgrou = props.filledBackground,\n      filledBackground = _props$filledBackgrou === void 0 ? false : _props$filledBackgrou,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      size = props.size,\n      view = props.view,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n    var _useSegmentInner = useSegmentInner(),\n      setSelectionMode = _useSegmentInner.setSelectionMode,\n      setDisabledGroup = _useSegmentInner.setDisabledGroup;\n    var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n    var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      firstItemVisible = _useState4[0],\n      setFirstItemVisible = _useState4[1];\n    var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      lastItemVisible = _useState6[0],\n      setLastItemVisible = _useState6[1];\n    var uniqId = safeUseId();\n    var segmentGroupId = id || uniqId;\n    var pilledAttr = view !== 'clear' && pilled;\n    var filledBackgroundAttr = view !== 'clear' && filledBackground;\n    var pilledClass = pilledAttr ? classes.segmentPilled : undefined;\n    var filledClass = filledBackgroundAttr ? classes.segmentGroupFilledBackground : undefined;\n    var stretchClass = firstItemVisible && lastItemVisible && stretch ? classes.segmentStretch : undefined;\n    var items = (Children === null || Children === void 0 ? void 0 : Children.map(children, function (child) {\n      return child;\n    })) || [];\n    var onPrev = useCallback(function () {\n      !disabled && setIndex(function (prevIndex) {\n        return prevIndex > 0 ? prevIndex - 1 : 0;\n      });\n    }, [disabled]);\n    var onNext = useCallback(function () {\n      !disabled && setIndex(function (prevIndex) {\n        return prevIndex < items.length - 1 ? prevIndex + 1 : prevIndex;\n      });\n    }, [disabled]);\n    var onIntersecting = function onIntersecting(setVisible) {\n      return function (entries) {\n        /*\n         * Пробегаемся по элементам на которых есть слушатель события появления.\n         * Если элемент находится в зоне видимости или выходит из нее, меняем значение флага видимости\n         */\n        entries.forEach(function (entry) {\n          if (entry.isIntersecting) {\n            setVisible(true);\n          } else {\n            setVisible(false);\n          }\n        });\n      };\n    };\n    var _useCarousel = useCarousel({\n        index: index,\n        axis: 'x',\n        scrollAlign: 'start',\n        detectActive: true,\n        debounceMs: 250,\n        onIndexChange: setIndex\n      }),\n      scrollRef = _useCarousel.scrollRef,\n      trackRef = _useCarousel.trackRef;\n    var PreviousButton = useMemo(function () {\n      return /*#__PURE__*/React.createElement(StyledArrow, {\n        type: \"button\",\n        \"aria-label\": \"\\u041F\\u0440\\u0435\\u0434\\u044B\\u0434\\u0443\\u0449\\u0438\\u0439 \\u0441\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\",\n        onClick: onPrev,\n        tabIndex: disabled ? -1 : 0,\n        disabled: disabled\n      }, /*#__PURE__*/React.createElement(IconDisclosureLeft, {\n        color: \"var(\".concat(tokens.arrowColor, \")\")\n      }));\n    }, [onPrev]);\n    var NextButton = useMemo(function () {\n      return /*#__PURE__*/React.createElement(StyledArrow, {\n        type: \"button\",\n        \"aria-label\": \"\\u0421\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0439 \\u0441\\u0435\\u0433\\u043C\\u0435\\u043D\\u0442\",\n        onClick: onNext,\n        tabIndex: disabled ? -1 : 0,\n        disabled: disabled\n      }, /*#__PURE__*/React.createElement(IconDisclosureRight, {\n        color: \"var(\".concat(tokens.arrowColor, \")\")\n      }));\n    }, [onNext]);\n    useEffect(function () {\n      selectionMode && setSelectionMode(selectionMode);\n      setDisabledGroup(disabled);\n    }, [selectionMode, disabled]);\n    useEffect(function () {\n      var _trackRef$current;\n      // Intersection observer для первого сегмента\n      var observeFirstItem = new IntersectionObserver(onIntersecting(setFirstItemVisible), {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.5\n      });\n\n      // Intersection observer для последнего сегмента\n      var observeLastItem = new IntersectionObserver(onIntersecting(setLastItemVisible), {\n        root: null,\n        rootMargin: '0px',\n        threshold: 0.5\n      });\n\n      // получаем список сегментов внутри SegmentGroup\n      var childrenArray = Array.from(((_trackRef$current = trackRef.current) === null || _trackRef$current === void 0 ? void 0 : _trackRef$current.children) || []);\n      if (childrenArray.length) {\n        // подписываемся на событие появление внутри SegmentGroup\n        observeFirstItem.observe(childrenArray[0]);\n        observeLastItem.observe(childrenArray[childrenArray.length - 1]);\n      }\n      return function () {\n        // отписываемся от события появления внутри SegmentGroup\n        observeFirstItem.disconnect();\n        observeLastItem.disconnect();\n      };\n    }, [children]);\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      view: view,\n      size: size,\n      id: segmentGroupId,\n      ref: outerRef,\n      filledBackground: filledBackgroundAttr,\n      disabled: disabled,\n      pilled: pilledAttr,\n      className: cx(pilledClass, filledClass, stretchClass)\n    }, rest), !firstItemVisible && PreviousButton, /*#__PURE__*/React.createElement(StyledContentWrapper, {\n      ref: scrollRef\n    }, /*#__PURE__*/React.createElement(StyledContent, {\n      ref: trackRef\n    }, children)), !lastItemVisible && NextButton);\n  });\n};\nexport var segmentGroupConfig = {\n  name: 'SegmentGroup',\n  tag: 'div',\n  layout: segmentGroupRoot,\n  base: base,\n  variations: {\n    size: {\n      css: sizeCSS\n    },\n    view: {\n      css: viewCSS\n    },\n    disabled: {\n      css: disabledCSS,\n      attrs: true\n    },\n    pilled: {\n      css: pilledCSS,\n      attrs: true\n    },\n    stretch: {\n      css: stretchCSS,\n      attrs: true\n    },\n    filledBackground: {\n      css: filledBackgroundCSS,\n      attrs: true\n    }\n  },\n  defaults: {\n    view: 'clear',\n    size: 'xs'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}