{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useMemo, forwardRef } from 'react';\nimport { SelectView as SelectViewWeb } from './views/web/SelectView';\nimport { SelectView as SelectViewB2C } from './views/b2c/SelectView';\nvar componentsMap = {\n  web: SelectViewWeb,\n  b2c: SelectViewB2C\n};\n\n/**\n * Поле с выпадающим списком.\n */\nexport var SelectView = /*#__PURE__*/forwardRef(function (props, ref) {\n  var design = props.design;\n  var SelectViewBase = useMemo(function () {\n    return componentsMap[design];\n  }, [design]);\n  return /*#__PURE__*/React.createElement(SelectViewBase, _extends({}, props, {\n    ref: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}