{"ast":null,"code":"/**\n * Метод валидация по-умолчанию, принимающая список поддерживаемых расширений через запятую\n * и возвращает результат проверки\n * @param {FileList | null} files выбранный файл\n * @param {string | undefined} accept поддерживаемые форматы, например, `.mp3,.wav`\n * @returns {ValidationResult} объект, имеющий необязательные поля `message, status, data`\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Upload/utils');\nexport var defaultValidate = function defaultValidate(files, accept) {\n  if (!(files !== null && files !== void 0 && files.length)) {\n    return {\n      message: 'Загрузите файл',\n      status: 'error',\n      data: null\n    };\n  }\n  var file = files[0];\n  if (!accept) {\n    return {\n      data: file\n    };\n  }\n  var dotRegexp = /\\./g;\n  var allowedFormats = accept.replace(/\\s/g, '').replace(dotRegexp, '\\\\.').split(',');\n  var fileTypeRegexp = new RegExp(\"\".concat(allowedFormats.join('|'), \"$\"), 'i');\n  if (!fileTypeRegexp.test(file.name)) {\n    return {\n      message: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442 \\u0444\\u0430\\u0439\\u043B\\u0430. \\u0418\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u0443\\u0439\\u0442\\u0435 \".concat(accept.replace(dotRegexp, ''), \"-\\u0444\\u043E\\u0440\\u043C\\u0430\\u0442\"),\n      status: 'error',\n      data: null\n    };\n  }\n  return {\n    data: file\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}