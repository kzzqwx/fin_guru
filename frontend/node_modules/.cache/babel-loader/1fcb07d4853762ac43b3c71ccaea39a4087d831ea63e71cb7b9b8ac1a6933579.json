{"ast":null,"code":"var _templateObject;\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nimport { css } from 'styled-components';\nimport styled from 'styled-components';\nimport { applyEllipsis, addFocus } from '../../mixins';\nimport { component, mergeConfig } from '../../engines';\nimport { spinnerConfig, spinnerTokens } from '../Spinner';\nimport { classes, tokens } from './Button.tokens';\n\n// issue #823\nvar mergedConfig = /*#__PURE__*/mergeConfig(spinnerConfig);\nvar Spinner = /*#__PURE__*/component(mergedConfig);\nexport var ButtonText = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-0\"\n})([\"min-width:4ch;flex-shrink:2;\", \" &.\", \"{text-align:start;flex-grow:2;}\"], /*#__PURE__*/applyEllipsis(), /*#__PURE__*/String(classes.contentRelaxed));\nexport var ButtonValue = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-1\"\n})([\"color:var(\", \");margin:var(\", \");min-width:4ch;\", \"\"], tokens.buttonValueColor, tokens.buttonValueMargin, /*#__PURE__*/applyEllipsis());\n\n// TODO: #720\nexport var LoadWrap = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-2\"\n})([\"opacity:\", \";display:flex;align-items:inherit;justify-content:\", \";height:100%;width:100%;\"], function (_ref) {\n  var isLoading = _ref.isLoading;\n  return isLoading ? '0' : '1';\n}, function (_ref2) {\n  var contentPlacing = _ref2.contentPlacing;\n  return contentPlacing;\n});\nexport var Loader = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-3\"\n})([\"position:absolute;\"]);\nexport var StyledSpinner = /*#__PURE__*/styled(Spinner).withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-4\"\n})([\"\", \":var(\", \");\", \":var(\", \");\"], spinnerTokens.size, tokens.buttonSpinnerSize, spinnerTokens.color, tokens.buttonSpinnerColor);\nexport var StyledContentLeft = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-5\"\n})([\"display:flex;margin:var(\", \");\"], tokens.buttonLeftContentMargin);\nexport var StyledContentRight = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-9d9bqj-6\"\n})([\"display:flex;margin:var(\", \");\"], tokens.buttonRightContentMargin);\nexport var base = /*#__PURE__*/css(_templateObject || (_templateObject = /*#__PURE__*/_taggedTemplateLiteral([\"\\n    position: relative;\\n    display: inline-flex;\\n    align-items: center;\\n    box-sizing: border-box;\\n    justify-content: center;\\n\\n    appearance: none;\\n    border: none;\\n    cursor: pointer;\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n\\n    a& {\\n        text-decoration: none;\\n    }\\n\\n    /* NOTE: \\n        --plasma_computed-btn-br-radius is defined in Button.tsx\\n    */\\n    --plasma_private-btn-br: var(--plasma_computed-btn-br);\\n    border-radius: var(--plasma_private-btn-br);\\n\\n    &&.\", \" {\\n        width: var(\", \");\\n        padding: 0;\\n    }\\n\"])), /*#__PURE__*/String(classes.buttonSquare), tokens.buttonHeight);\n\n// INFO: Для возможности переиспользования стилей в других компонентах\nexport var baseContent = /*#__PURE__*/\"\\n    position: relative;\\n    display: inline-flex;\\n    align-items: center;\\n    box-sizing: border-box;\\n    justify-content: center;\\n\\n    appearance: none;\\n    border: none;\\n    cursor: pointer;\\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\\n\\n    a& {\\n        text-decoration: none;\\n    }\\n\\n    /* NOTE: \\n        --plasma_computed-btn-br-radius is defined in Button.tsx\\n    */\\n    --plasma_private-btn-br: var(--plasma_computed-btn-br);\\n    border-radius: var(--plasma_private-btn-br);\\n\\n    &&.\".concat(String(classes.buttonSquare), \" {\\n        width: var(\").concat(tokens.buttonHeight, \");\\n        padding: 0;\\n    }\\n\\n    color: var(\").concat(tokens.buttonColor, \");\\n    background-color: var(\").concat(tokens.buttonBackgroundColor, \");\\n\\n    :hover {\\n        color: var(\").concat(tokens.buttonColorHover, \", var(\").concat(tokens.buttonColor, \"));\\n        background-color: var(\").concat(tokens.buttonBackgroundColorHover, \", var(\").concat(tokens.buttonBackgroundColor, \"));\\n\\n        scale: var(\").concat(tokens.buttonScaleHover, \");\\n    }\\n\\n    :active {\\n        color: var(\").concat(tokens.buttonColorActive, \", var(\").concat(tokens.buttonColor, \"));\\n        background-color: var(\").concat(tokens.buttonBackgroundColorActive, \", var(\").concat(tokens.buttonBackgroundColor, \"));\\n\\n        scale: var(\").concat(tokens.buttonScaleActive, \");\\n    }\\n\\n    height: var(\").concat(tokens.buttonHeight, \");\\n    width: var(\").concat(tokens.buttonWidth, \");\\n\\n    /* TODO: #714 move these calc's to plasma-mapping | ds-generator and add Math.round() */\\n    padding: 0 var(\").concat(tokens.buttonPadding, \", calc(var(\").concat(tokens.buttonHeight, \") * 1.618 / 4));\\n\\n    font-family: var(\").concat(tokens.buttonFontFamily, \");\\n    font-size: var(\").concat(tokens.buttonFontSize, \");\\n    font-style: var(\").concat(tokens.buttonFontStyle, \");\\n    font-weight: var(\").concat(tokens.buttonFontWeight, \");\\n    letter-spacing: var(\").concat(tokens.buttonLetterSpacing, \");\\n    line-height: var(\").concat(tokens.buttonLineHeight, \");\\n\\n    /* TODO: #710 make it token API ? */\\n    --plasma_private-btn-outline-size: var(--plasma-button-outline-size, 0.0625rem);\\n\\n    :focus {\\n        outline: none;\\n    }\\n\\n    \").concat(addFocus({\n  outlineOffset: '-0.125rem',\n  outlineSize: 'var(--plasma_private-btn-outline-size)',\n  outlineRadius: 'calc(0.125rem + var(--plasma_private-btn-br))',\n  outlineColor: \"var(\".concat(tokens.buttonFocusColor, \")\")\n}), \"\\n\\n    &[disabled] {\\n        opacity: var(\").concat(tokens.buttonDisabledOpacity, \");\\n        cursor: not-allowed;\\n\\n        :hover,\\n        :active {\\n            scale: none;\\n\\n            color: var(\").concat(tokens.buttonColor, \");\\n            background-color: var(\").concat(tokens.buttonBackgroundColor, \");\\n        }\\n    }\\n\\n    &.\").concat(classes.fixedStretching, \" {\\n        width: var(\").concat(tokens.buttonWidth, \");\\n    }\\n    &.\").concat(classes.filledStretching, \" {\\n        width: 100%;\\n    }\\n    &.\").concat(classes.autoStretching, \" {\\n        width: fit-content;\\n    }\\n\");","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}