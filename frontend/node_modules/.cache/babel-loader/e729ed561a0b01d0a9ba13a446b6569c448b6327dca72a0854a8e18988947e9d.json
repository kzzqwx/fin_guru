{"ast":null,"code":"import styled, { css } from 'styled-components';\nimport { applyEllipsis, applyDisabled } from '../../mixins';\nimport { secondary, tertiary, body1, caption } from '../../tokens';\nimport { fieldStatuses } from './Field.statuses';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Field/Field');\n/**\n * Common dynamic placeholder.\n */\nexport var FieldPlaceholder = /*#__PURE__*/styled.label.withConfig({\n  componentId: \"plasma__sc-2ygkie-0\"\n})([\"position:absolute;top:0;left:0;box-sizing:border-box;width:100%;height:100%;color:\", \";pointer-events:none;transition:\", \";transform-origin:top left;\", \"\"], tertiary, function (_ref) {\n  var theme = _ref.theme;\n  return theme.lowPerformance ? 'unset' : 'all 0.1s ease-in';\n}, applyEllipsis);\n\n/**\n * Content wrapper for left and right slots of the field.\n */\nexport var FieldContent = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-2ygkie-1\"\n})([\"position:absolute;top:0;\", \";bottom:0;display:flex;align-items:center;height:3rem;\"], function (_ref2) {\n  var pos = _ref2.pos;\n  return pos === 'left' ? 'left: 1rem' : 'right: 1rem';\n});\n\n/**\n * An inline block to place a helper text under the form item.\n */\nexport var FieldHelper = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-2ygkie-2\"\n})([\"\", \";display:block;margin-top:0.25rem;\", \"\"], caption, applyEllipsis);\n/**\n * Common container for singular form item.\n */\nexport var FieldRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-2ygkie-3\"\n})([\"\", \";position:relative;display:block;box-sizing:border-box;color:\", \";\", \" \", \" \", \" \", \"\"], body1, secondary, applyDisabled, function (_ref3) {\n  var _ref3$$size = _ref3.$size,\n    $size = _ref3$$size === void 0 ? 'm' : _ref3$$size;\n  return $size === 'l' ? css([\"\", \"{top:1.125rem;left:1rem;right:1rem;}input:not(:placeholder-shown) ~ \", \"{transform:scale(0.75);top:0.375rem;}\", \"{height:3.5rem;}\"], FieldPlaceholder, FieldPlaceholder, FieldContent) : css([\"\", \"{height:3rem;}\"], FieldContent);\n}, function (_ref4) {\n  var $isContentLeft = _ref4.$isContentLeft,\n    $isContentRight = _ref4.$isContentRight;\n  return css([\"input,textarea{\", \"  \", \"}\", \"{\", \"  \", \"}\"], $isContentLeft && 'padding-left: 3.125rem;', $isContentRight && 'padding-right: 3.125rem;', FieldPlaceholder, $isContentLeft && 'left: 3.125rem;', $isContentRight && 'right: 3.125rem;');\n}, function (_ref5) {\n  var $isHelper = _ref5.$isHelper,\n    status = _ref5.status;\n  return status && ($isHelper ? css([\"\", \"{color:\", \";}\"], FieldHelper, fieldStatuses[status]) : css([\"\", \"{color:\", \";}\"], FieldPlaceholder, fieldStatuses[status]));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}