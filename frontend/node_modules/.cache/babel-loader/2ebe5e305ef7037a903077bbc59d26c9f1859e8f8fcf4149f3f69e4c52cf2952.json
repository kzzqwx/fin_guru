{"ast":null,"code":"var _IconDone;\nvar _excluded = [\"value\", \"valuesList\", \"textPerPage\", \"onChangeValue\"];\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useState } from 'react';\nimport { IconDone } from '../../../../components/_Icon';\nimport { defaultValues } from '../../utils';\nimport { classes } from '../../Pagination.tokens';\nimport { SelectPerPageRoot, SelectPerPageTypography, SelectPerPageSelect, SelectPerPageSelectItem } from './PaginationSelectPerPage.styles';\nexport var PaginationSelectPerPage = function PaginationSelectPerPage(_ref) {\n  var _ref$value = _ref.value,\n    value = _ref$value === void 0 ? defaultValues.perPage : _ref$value,\n    _ref$valuesList = _ref.valuesList,\n    valuesList = _ref$valuesList === void 0 ? defaultValues.perPageList : _ref$valuesList,\n    _ref$textPerPage = _ref.textPerPage,\n    textPerPage = _ref$textPerPage === void 0 ? defaultValues.textPerPage : _ref$textPerPage,\n    onChangeValue = _ref.onChangeValue,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState(value),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedValue = _useState2[0],\n    setSelectedValue = _useState2[1];\n  var handleSelectChange = function handleSelectChange(newValue) {\n    if (newValue) {\n      setSelectedValue(Number(newValue));\n      onChangeValue === null || onChangeValue === void 0 || onChangeValue(Number(newValue));\n    }\n  };\n  return /*#__PURE__*/React.createElement(SelectPerPageRoot, rest, /*#__PURE__*/React.createElement(SelectPerPageTypography, null, textPerPage), /*#__PURE__*/React.createElement(SelectPerPageSelect, {\n    className: classes.selectWrapper,\n    value: selectedValue,\n    onChangeValue: handleSelectChange\n  }, valuesList === null || valuesList === void 0 ? void 0 : valuesList.map(function (item) {\n    return /*#__PURE__*/React.createElement(SelectPerPageSelectItem, {\n      contentLeft: item === selectedValue ? _IconDone || (_IconDone = /*#__PURE__*/React.createElement(IconDone, {\n        size: \"xs\",\n        color: \"inherit\"\n      })) : undefined,\n      key: item,\n      value: item,\n      text: String(item)\n    });\n  })));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}