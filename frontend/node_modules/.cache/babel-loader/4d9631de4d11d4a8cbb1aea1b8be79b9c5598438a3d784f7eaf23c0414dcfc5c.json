{"ast":null,"code":"var _excluded = [\"id\", \"isOpen\", \"placement\", \"offset\", \"frame\", \"children\", \"overlay\", \"role\", \"zIndex\", \"popupInfo\", \"withAnimation\", \"className\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport styled from 'styled-components';\nimport { useForkRef, useUniqId } from '../../hooks';\nimport { POPOVER_PORTAL_ID } from './PopupBaseContext';\nimport { PopupBaseRoot } from './PopupBaseRoot';\nimport { usePopup } from './hooks';\nimport { endAnimationClass, endTransitionClass } from './utils';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('PopupBase/PopupBase');\nvar StyledPortal = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-1md4coi-0\"\n})([\"\"]);\nexport var getClassName = function getClassName(animationInfo, className) {\n  var endAnimation = animationInfo !== null && animationInfo !== void 0 && animationInfo.endAnimation ? endAnimationClass : '';\n  var endTransition = animationInfo !== null && animationInfo !== void 0 && animationInfo.endTransition ? endTransitionClass : '';\n  return [className, endAnimation, endTransition].filter(Boolean).join(' ');\n};\n\n/**\n * Базовый копмонент PopupBase.\n */\nexport var PopupBase = /*#__PURE__*/forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n    isOpen = _ref.isOpen,\n    _ref$placement = _ref.placement,\n    placement = _ref$placement === void 0 ? 'center' : _ref$placement,\n    _ref$offset = _ref.offset,\n    offset = _ref$offset === void 0 ? [0, 0] : _ref$offset,\n    _ref$frame = _ref.frame,\n    frame = _ref$frame === void 0 ? 'document' : _ref$frame,\n    children = _ref.children,\n    overlay = _ref.overlay,\n    role = _ref.role,\n    zIndex = _ref.zIndex,\n    popupInfo = _ref.popupInfo,\n    _ref$withAnimation = _ref.withAnimation,\n    withAnimation = _ref$withAnimation === void 0 ? false : _ref$withAnimation,\n    className = _ref.className,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var uniqId = useUniqId();\n  var innerId = id || uniqId;\n  var _usePopup = usePopup({\n      isOpen: isOpen,\n      id: innerId,\n      popupInfo: popupInfo,\n      withAnimation: withAnimation\n    }),\n    isVisible = _usePopup.isVisible,\n    animationInfo = _usePopup.animationInfo,\n    setVisible = _usePopup.setVisible;\n  var portalRef = useRef(null);\n  var contentRef = useRef(null);\n  var innerRef = useForkRef(contentRef, ref);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    forceRender = _useState2[1];\n  useEffect(function () {\n    var portal = document.getElementById(POPOVER_PORTAL_ID);\n    if (typeof frame !== 'string' && frame && frame.current) {\n      portal = frame.current;\n    }\n    if (!portal) {\n      portal = document.createElement('div');\n      portal.setAttribute('id', POPOVER_PORTAL_ID);\n      if (typeof frame === 'string' && frame !== 'document') {\n        var _document$getElementB;\n        (_document$getElementB = document.getElementById(frame)) === null || _document$getElementB === void 0 || _document$getElementB.appendChild(portal);\n      } else {\n        document.body.appendChild(portal);\n      }\n    }\n    portalRef.current = portal;\n\n    /**\n     * Изменение стейта нужно для того, чтобы Popup\n     * отобразился после записи DOM элемента в portalRef.current\n     */\n    forceRender(true);\n  }, []);\n  if (!isVisible && !isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, portalRef.current && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(StyledPortal, _extends({\n    className: getClassName(animationInfo, className)\n  }, rest), overlay, /*#__PURE__*/React.createElement(PopupBaseRoot, {\n    id: innerId,\n    ref: innerRef,\n    placement: placement,\n    frame: frame,\n    offset: offset,\n    zIndex: zIndex,\n    animationInfo: animationInfo,\n    setVisible: setVisible\n  }, children)), portalRef.current));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}