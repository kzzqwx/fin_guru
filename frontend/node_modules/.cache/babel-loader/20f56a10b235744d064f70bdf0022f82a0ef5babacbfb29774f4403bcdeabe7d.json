{"ast":null,"code":"var _excluded = [\"id\", \"disabled\", \"status\", \"label\", \"placeholder\", \"contentRight\", \"helperText\", \"style\", \"className\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { FieldRoot, FieldContent, TextArea as BaseArea } from '@salutejs/plasma-core';\nimport { FieldHelper, applyInputStyles } from '../Field';\nimport { spatnavClassNameAttrs } from '../../utils';\nimport { useForkRef, useResizeObserver } from '../../hooks';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('TextArea/TextArea');\nvar StyledTextArea = /*#__PURE__*/styled(BaseArea).attrs(spatnavClassNameAttrs).withConfig({\n  componentId: \"plasma-ui__sc-qulw5x-0\"\n})([\"\", \" border-radius:1rem;\"], applyInputStyles);\nvar StyledFieldHelperWrapper = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qulw5x-1\"\n})([\"width:\", \"px;\"], function (_ref) {\n  var width = _ref.width;\n  return width;\n});\nvar StyledFieldContentWrapper = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qulw5x-2\"\n})([\"position:absolute;top:0;width:\", \"px;\"], function (_ref2) {\n  var width = _ref2.width;\n  return width;\n});\n/**\n * Поле ввода многострочного текста.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var TextArea = /*#__PURE__*/forwardRef(function TextArea(_ref3, ref) {\n  var id = _ref3.id,\n    disabled = _ref3.disabled,\n    status = _ref3.status,\n    label = _ref3.label,\n    placeholder = _ref3.placeholder,\n    contentRight = _ref3.contentRight,\n    helperText = _ref3.helperText,\n    style = _ref3.style,\n    className = _ref3.className,\n    rest = _objectWithoutProperties(_ref3, _excluded);\n  var inputRef = useRef(null);\n  var forkRef = useForkRef(inputRef, ref);\n  var placeLabel = label || placeholder;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    helperWidth = _useState2[0],\n    setHelperWidth = _useState2[1];\n  useResizeObserver(inputRef, function (currentElement) {\n    var _currentElement$getBo = currentElement.getBoundingClientRect(),\n      elementWidth = _currentElement$getBo.width;\n    setHelperWidth(elementWidth);\n  });\n  return /*#__PURE__*/React.createElement(FieldRoot, {\n    $disabled: disabled,\n    $isContentRight: Boolean(contentRight),\n    $isHelper: Boolean(helperText),\n    status: status,\n    style: style,\n    className: className,\n    \"aria-describedby\": id ? \"\".concat(id, \"-helpertext\") : undefined\n  }, /*#__PURE__*/React.createElement(StyledTextArea, _extends({\n    ref: forkRef,\n    id: id,\n    placeholder: placeLabel,\n    disabled: disabled,\n    status: status\n  }, rest)), contentRight && /*#__PURE__*/React.createElement(StyledFieldContentWrapper, {\n    width: helperWidth\n  }, /*#__PURE__*/React.createElement(FieldContent, {\n    pos: \"right\"\n  }, contentRight)), helperText && /*#__PURE__*/React.createElement(StyledFieldHelperWrapper, {\n    width: helperWidth\n  }, /*#__PURE__*/React.createElement(FieldHelper, {\n    id: id ? \"\".concat(id, \"-helpertext\") : undefined\n  }, helperText)));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}