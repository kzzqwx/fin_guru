{"ast":null,"code":"var _excluded = [\"id\", \"withBlur\", \"onOverlayClick\", \"onClose\", \"zIndex\", \"closeOnOverlayClick\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useCallback, useMemo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { DEFAULT_Z_INDEX } from '../PopupBase/PopupBaseRoot';\nimport { usePopupBaseContext } from '../PopupBase';\nimport { getIdLastModal } from './ModalBaseContext';\n/*\n * Класс компонента ModalBaseOverlay: `modal-base-overlay`\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('ModalBase/ModalOverlay');\nexport var modalBaseOverlayClass = 'modal-base-overlay';\n\n// TODO: новый отдельный оверлей #778\nexport var Overlay = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-1jo935d-0\"\n})([\"position:fixed;width:100%;height:100%;top:0;left:0;\", \" \", \";background-color:\", \";backdrop-filter:var(--backdrop-filter);cursor:\", \";\"], function (_ref) {\n  var zIndex = _ref.zIndex;\n  return css([\"z-index:\", \";\"], zIndex || DEFAULT_Z_INDEX);\n}, function (_ref2) {\n  var $withBlur = _ref2.$withBlur;\n  return css([\"--background-color:\", \";--backdrop-filter:\", \";\"], $withBlur ? 'var(--plasma-modal-blur-overlay-color)' : 'var(--plasma-modal-overlay-color)', $withBlur ? 'blur(1rem)' : 'none');\n}, function (_ref3) {\n  var transparent = _ref3.transparent;\n  return transparent ? 'transparent' : 'var(--background-color)';\n}, function (_ref4) {\n  var clickable = _ref4.clickable;\n  return clickable ? 'pointer' : 'default';\n});\n\n/**\n * ModalOverlay - подложка для ModalBase.\n */\nexport var ModalOverlay = function ModalOverlay(_ref5) {\n  var id = _ref5.id,\n    withBlur = _ref5.withBlur,\n    onOverlayClick = _ref5.onOverlayClick,\n    onClose = _ref5.onClose,\n    zIndex = _ref5.zIndex,\n    _ref5$closeOnOverlayC = _ref5.closeOnOverlayClick,\n    closeOnOverlayClick = _ref5$closeOnOverlayC === void 0 ? true : _ref5$closeOnOverlayC,\n    rest = _objectWithoutProperties(_ref5, _excluded);\n  var popupController = usePopupBaseContext();\n  var onModalOverlayKeyDown = useCallback(function (event) {\n    if (!closeOnOverlayClick) {\n      return;\n    }\n    if (onOverlayClick) {\n      onOverlayClick(event);\n      return;\n    }\n    if (onClose) {\n      onClose();\n    }\n  }, [closeOnOverlayClick, onOverlayClick, onClose]);\n  var transparent = useMemo(function () {\n    return getIdLastModal(popupController.items) !== id;\n  }, [id, popupController.items]);\n  return /*#__PURE__*/React.createElement(Overlay, _extends({\n    className: modalBaseOverlayClass,\n    transparent: transparent,\n    clickable: closeOnOverlayClick,\n    onClick: onModalOverlayKeyDown,\n    zIndex: zIndex,\n    $withBlur: withBlur\n  }, rest));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}