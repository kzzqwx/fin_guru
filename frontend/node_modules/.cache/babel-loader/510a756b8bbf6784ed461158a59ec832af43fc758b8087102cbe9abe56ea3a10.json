{"ast":null,"code":"var _excluded = [\"id\"];\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { createStoreon } from 'storeon';\n/**\n * Создает хранилищие с ключем `notifications` к массиву с окнами.\n */\nexport var NotificationsStore = /*#__PURE__*/createStoreon([function (store) {\n  store.on('@init', function () {\n    return {\n      notifications: []\n    };\n  });\n  store.on('add', function (_ref, notif) {\n    var notifications = _ref.notifications;\n    return {\n      notifications: notifications.concat([notif])\n    };\n  });\n  store.on('hide', function (_ref2, id) {\n    var notifications = _ref2.notifications;\n    return {\n      notifications: notifications.map(function (notif) {\n        return id === notif.id ? _objectSpread(_objectSpread({}, notif), {}, {\n          isHidden: true\n        }) : notif;\n      })\n    };\n  });\n  store.on('remove', function (_ref3, id) {\n    var notifications = _ref3.notifications;\n    return {\n      notifications: notifications.filter(function (notif) {\n        return id !== notif.id;\n      })\n    };\n  });\n}]);\nexport var closeNotification = function closeNotification(id) {\n  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 380;\n  var dispatch = NotificationsStore.dispatch;\n  dispatch('hide', id);\n  setTimeout(function () {\n    return dispatch('remove', id);\n  }, delay);\n};\n\n/**\n * Открыть новое окно.\n * @param props Пропсы всплывающего окна\n * @return Идентификатор нового окна\n */\nexport function addNotification(_ref4) {\n  var externalId = _ref4.id,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  var timeout = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2000;\n  var id = externalId || \"plasma-notification-\".concat(Date.now());\n  var dispatch = NotificationsStore.dispatch;\n  dispatch('add', _objectSpread(_objectSpread({}, rest), {}, {\n    id: id,\n    isHidden: false\n  }));\n  setTimeout(function () {\n    return closeNotification(id);\n  }, timeout);\n  return id;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}