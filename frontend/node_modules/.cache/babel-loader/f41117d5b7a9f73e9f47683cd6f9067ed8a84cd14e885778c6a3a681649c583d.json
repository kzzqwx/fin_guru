{"ast":null,"code":"let createStoreon = modules => {\n  let events = {};\n  let state = {};\n  let store = {\n    dispatch(event, data) {\n      if (event !== '@dispatch') {\n        store.dispatch('@dispatch', [event, data, events[event]]);\n      }\n      if (events[event]) {\n        let changes;\n        events[event].forEach(i => {\n          let diff = events[event].includes(i) && i(state, data, store);\n          if (diff && typeof diff.then !== 'function') {\n            state = {\n              ...state,\n              ...diff\n            };\n            changes = {\n              ...changes,\n              ...diff\n            };\n          }\n        });\n        if (changes) store.dispatch('@changed', changes);\n      }\n    },\n    get: () => state,\n    on(event, cb) {\n      ;\n      (events[event] || (events[event] = [])).push(cb);\n      return () => {\n        events[event] = events[event].filter(i => i !== cb);\n      };\n    }\n  };\n  modules.forEach(i => {\n    if (i) i(store);\n  });\n  store.dispatch('@init');\n  return store;\n};\nexport { createStoreon };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}