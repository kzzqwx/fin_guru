{"ast":null,"code":"export var deviceScales = {\n  sberPortal: 2,\n  sberBox: 2,\n  mobile: 1\n};\nexport var DeviceKindList = /*#__PURE__*/function (DeviceKindList) {\n  DeviceKindList[\"sberBox\"] = \"sberBox\";\n  DeviceKindList[\"mobile\"] = \"mobile\";\n  DeviceKindList[\"sberPortal\"] = \"sberPortal\";\n  return DeviceKindList;\n}({});\n\n/**\n * Проверка в браузере на устройство \"SberPortal\".\n * @return {boolean}\n */\nexport var isSberPortal = function isSberPortal() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  var ua = navigator.userAgent.toLowerCase();\n  return ua.includes('sberportal') || ua.includes('stargate');\n};\n\n/**\n * Проверка в браузере на устройство \"SberBox\".\n * @return {boolean}\n */\nexport var isSberBox = function isSberBox() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  var ua = navigator.userAgent.toLowerCase();\n  return ua.includes('sberbox');\n};\n\n/**\n * Проверка в браузере на устройство \"SberBoxTop\".\n * @return {boolean}\n */\nexport var isSberBoxTop = function isSberBoxTop() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  var ua = navigator.userAgent.toLowerCase();\n  return ua.includes('satellite') || ua.includes('sberbox top');\n};\n\n/**\n * Проверка в браузере на устройство \"SberBoxTV\".\n * @return {boolean}\n */\nexport var isTV = function isTV() {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n  var ua = navigator.userAgent.toLowerCase();\n  return ua.includes('(tv; tv)') || ua.includes('(tv; huawei)') || ua.includes('(huawei-tv; huawei)') || ua.includes('(huawei-tv; huawei tv)');\n};\n\n/**\n * Вернет тип устройства, под которым запустилось приложение.\n * В случае запуска в серверном окружении, возвращает \"sberBox\".\n * @return {DeviceKind}\n */\nexport var detectDevice = function detectDevice() {\n  if (typeof navigator === 'undefined') {\n    return DeviceKindList.sberBox;\n  }\n  switch (true) {\n    case isSberPortal():\n      return DeviceKindList.sberPortal;\n    case isSberBoxTop():\n    case isSberBox():\n    case isTV():\n      return DeviceKindList.sberBox;\n    default:\n      return DeviceKindList.mobile;\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}