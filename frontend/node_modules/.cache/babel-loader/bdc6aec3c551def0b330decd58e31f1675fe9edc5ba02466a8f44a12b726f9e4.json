{"ast":null,"code":"var _excluded = [\"size\", \"disabled\", \"status\", \"placeholder\", \"label\", \"animatedHint\", \"hasContentLeft\", \"hasContentRight\", \"onChange\", \"onKeyUp\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { inputTypo, inputLabelTypo, inputBackground, inputBackgroundHover, inputBackgroundFocus, inputColor, inputCaretColor, inputPlaceholderColor, inputFocusPlaceholderColor, inputBorder, inputBorderHover, inputBorderFocus, inputBorderRadius, inputBorderWidth, inputLabelColor, inputLabelMarginTop } from '../../../../tokens';\nimport { sizes, statuses } from './Input.props';\nvar StyledHint = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma-web-core__sc-1tv4etd-0\"\n})([\"display:flex;align-items:center;transition:all 0.1s ease-in-out;box-sizing:border-box;position:absolute;top:0;left:0;pointer-events:none;color:\", \";\"], inputLabelColor);\nvar StyledLabel = /*#__PURE__*/styled(StyledHint).withConfig({\n  componentId: \"plasma-web-core__sc-1tv4etd-1\"\n})([\"\", \";input:focus + &,input:not(:placeholder-shown) + &{\", \"}\"], inputTypo, inputLabelTypo);\nvar StyledPlaceholder = /*#__PURE__*/styled(StyledHint).withConfig({\n  componentId: \"plasma-web-core__sc-1tv4etd-2\"\n})([\"\", \" input:placeholder-shown + &{\", \"}input:focus + &{color:\", \";}\"], inputLabelTypo, inputTypo, inputFocusPlaceholderColor);\nvar getPadding = function getPadding(paddingTop, paddingBottom, paddingLeft, paddingRight, paddingY, paddingX) {\n  switch (true) {\n    case paddingTop !== paddingBottom && paddingLeft !== paddingRight:\n      return \"\".concat(paddingTop, \" \").concat(paddingRight, \" \").concat(paddingBottom, \" \").concat(paddingLeft);\n    case paddingTop !== paddingBottom:\n      return \"\".concat(paddingTop, \" \").concat(paddingX, \" \").concat(paddingBottom);\n    case paddingLeft !== paddingRight:\n      return \"\".concat(paddingY, \" \").concat(paddingRight, \" \").concat(paddingY, \" \").concat(paddingLeft);\n    default:\n      return \"\".concat(paddingY, \" \").concat(paddingX);\n  }\n};\nvar applySizes = function applySizes() {\n  return function (_ref) {\n    var $size = _ref.$size,\n      $hasHint = _ref.$hasHint,\n      $hasContentLeft = _ref.$hasContentLeft,\n      $hasContentRight = _ref.$hasContentRight,\n      $animatedHint = _ref.$animatedHint;\n    var _sizes$$size = sizes[$size],\n      height = _sizes$$size.height,\n      paddingY = _sizes$$size.paddingY,\n      paddingX = _sizes$$size.paddingX,\n      hasLabelPaddingTop = _sizes$$size.hasLabelPaddingTop,\n      hasContentPaddingLeft = _sizes$$size.hasContentPaddingLeft,\n      hasContentPaddingRight = _sizes$$size.hasContentPaddingRight,\n      hasLabelPaddingBottom = _sizes$$size.hasLabelPaddingBottom;\n    var paddingTop = $hasHint ? hasLabelPaddingTop : paddingY;\n    var paddingBottom = $hasHint ? hasLabelPaddingBottom : paddingY;\n    var paddingLeft = $hasContentLeft ? hasContentPaddingLeft : paddingX;\n    var paddingRight = $hasContentRight ? hasContentPaddingRight : paddingX;\n    var padding = getPadding(paddingTop, paddingBottom, paddingLeft, paddingRight, paddingY, paddingX);\n    var labelPaddingHasContentRight = !$hasContentLeft && $hasContentRight ? paddingX : null;\n    var labelPaddingHasContentLeft = $hasContentLeft && !$hasContentRight ? hasContentPaddingLeft : null;\n    return css([\"height:\", \";padding:\", \";\", \" & + \", \"{height:\", \";padding:\", \" \", \" \", \" \", \";padding-left:\", \";}&:focus + \", \",&:not(:placeholder-shown) + \", \",&:not(:placeholder-shown) + \", \"{height:auto;padding-top:\", \";padding-left:\", \";}\"], height, padding, $animatedHint === 'placeholder' && css([\"&:placeholder-shown{padding-top:\", \";padding-bottom:\", \";}\"], paddingY, paddingY), StyledHint, height, paddingY, paddingLeft, paddingY, paddingRight, labelPaddingHasContentRight, StyledLabel, StyledLabel, StyledPlaceholder, inputLabelMarginTop, labelPaddingHasContentLeft);\n  };\n};\nvar StyledInput = /*#__PURE__*/styled.input.withConfig({\n  componentId: \"plasma-web-core__sc-1tv4etd-3\"\n})([\"\", \" \", \" -webkit-appearance:none;box-sizing:border-box;width:100%;background-color:\", \";color:\", \";caret-color:\", \";border:0 none;border-radius:\", \";box-shadow:inset 0 0 0 \", \" \", \";transition:box-shadow 0.1s ease-in,background-color 0.1s ease-in,color 0.1s ease-in;&:hover{background-color:\", \";box-shadow:inset 0 0 0 \", \" \", \";}&:disabled{box-shadow:inset 0 0 0 \", \" \", \";cursor:inherit;}&::placeholder{color:\", \";}\", \" &:focus,&:hover:focus{background-color:\", \";box-shadow:inset 0 0 0 \", \" \", \";outline:0 none;}&:focus::placeholder{color:\", \";}\", \" \", \"\"], applySizes, inputTypo, inputBackground, inputColor, inputCaretColor, inputBorderRadius, inputBorderWidth, inputBorder, inputBackgroundHover, inputBorderWidth, inputBorderHover, inputBorderWidth, inputBorder, inputPlaceholderColor, function (_ref2) {\n  var $status = _ref2.$status;\n  return $status && statuses[$status];\n}, inputBackgroundFocus, inputBorderWidth, inputBorderFocus, inputFocusPlaceholderColor, function (_ref3) {\n  var $animatedHint = _ref3.$animatedHint;\n  return $animatedHint === 'placeholder' && css([\"&::placeholder,&:focus::placeholder{color:transparent;}\"]);\n}, function (_ref4) {\n  var $hasLabel = _ref4.$hasHint;\n  return $hasLabel && css([\"&::placeholder{color:transparent;}\"]);\n});\nvar InputPlaceLabel = function InputPlaceLabel(_ref5) {\n  var animatedHint = _ref5.animatedHint,\n    placeholder = _ref5.placeholder,\n    label = _ref5.label;\n  if (animatedHint === 'placeholder' && placeholder) {\n    return /*#__PURE__*/React.createElement(StyledPlaceholder, null, placeholder);\n  }\n  if (animatedHint === 'label' && label) {\n    return /*#__PURE__*/React.createElement(StyledLabel, null, label);\n  }\n  return null;\n};\n\n/**\n * Поле ввода текста без подсказки и лейбла.\n * @private\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var Input = /*#__PURE__*/forwardRef(function Input(_ref6, ref) {\n  var _ref6$size = _ref6.size,\n    size = _ref6$size === void 0 ? 'l' : _ref6$size,\n    disabled = _ref6.disabled,\n    status = _ref6.status,\n    placeholder = _ref6.placeholder,\n    label = _ref6.label,\n    animatedHint = _ref6.animatedHint,\n    hasContentLeft = _ref6.hasContentLeft,\n    hasContentRight = _ref6.hasContentRight,\n    onChange = _ref6.onChange,\n    onKeyUp = _ref6.onKeyUp,\n    rest = _objectWithoutProperties(_ref6, _excluded);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledInput, _extends({\n    ref: ref,\n    disabled: disabled,\n    placeholder: placeholder,\n    $size: size,\n    $status: status,\n    $hasHint: animatedHint && Boolean(label || placeholder),\n    $hasContentLeft: hasContentLeft,\n    $hasContentRight: hasContentRight,\n    $animatedHint: animatedHint,\n    onChange: onChange,\n    onKeyUp: onKeyUp\n  }, rest)), size === 'l' && animatedHint && /*#__PURE__*/React.createElement(InputPlaceLabel, {\n    animatedHint: animatedHint,\n    placeholder: placeholder,\n    label: label\n  }));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}