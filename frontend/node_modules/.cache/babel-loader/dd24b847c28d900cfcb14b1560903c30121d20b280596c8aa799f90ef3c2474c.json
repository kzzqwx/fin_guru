{"ast":null,"code":"import React from 'react';\n\n/**\n * @param {Function} func\n * @param {number} delay\n * @param {boolean} cleanUp\n * https://habr.com/ru/company/domclick/blog/510616/\n */\nexport function useDebouncedFunction(func, delay, cleanUp) {\n  var timeoutRef = React.useRef();\n\n  /**\n   * Очистка таймера\n   */\n  function clearTimer() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  }\n\n  /**\n   * Очищаем таймер при анмаунте компонента, если cleanUp выставлен в true\n   * и тем самым отменяем последний запланированный вызов\n   */\n  React.useEffect(function () {\n    return cleanUp ? clearTimer : undefined;\n  }, [cleanUp]);\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    clearTimer();\n    timeoutRef.current = setTimeout(function () {\n      return func.apply(void 0, args);\n    }, delay);\n  };\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}