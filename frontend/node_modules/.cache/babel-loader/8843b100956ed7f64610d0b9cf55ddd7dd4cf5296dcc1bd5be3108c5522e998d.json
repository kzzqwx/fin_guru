{"ast":null,"code":"var _StyledMark;\nvar _excluded = [\"id\", \"label\", \"description\", \"disabled\", \"focused\", \"scaleOnInteraction\", \"style\", \"className\", \"singleLine\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { BaseboxRoot, BaseboxInput, BaseboxTrigger, BaseboxContent, BaseboxContentWrapper, BaseboxLabel, BaseboxDescription, applyDisabled, useUniqId, addFocus } from '@salutejs/plasma-core';\nimport { accent, white, secondary, transparent } from '@salutejs/plasma-tokens';\nimport { spatnavClassNameAttrs } from '../../utils';\nimport { IconDone } from './IconDone';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Checkbox/Checkbox');\nexport var syntheticFocus = function syntheticFocus(ruleset, focused) {\n  return css([\"input[data-focus-visible-added] + label &{box-shadow:none;outline:none;\", \"}\", \"\"], ruleset, focused && css([\"box-shadow:none;\", \"\"], ruleset));\n};\nexport var StyledRoot = /*#__PURE__*/styled(BaseboxRoot).withConfig({\n  componentId: \"plasma-ui__sc-i8k5cq-0\"\n})([\"\", \";& + &{margin-top:1.25rem;}\"], applyDisabled);\nexport var StyledInput = /*#__PURE__*/styled(BaseboxInput).attrs(spatnavClassNameAttrs).withConfig({\n  componentId: \"plasma-ui__sc-i8k5cq-1\"\n})([\"appearance:none;width:100%;height:100%;opacity:0;\"]);\n\n// TODO: https://github.com/salute-developers/plasma/issues/232\nexport var StyledTrigger = /*#__PURE__*/styled(BaseboxTrigger).withConfig({\n  componentId: \"plasma-ui__sc-i8k5cq-2\"\n})([\"--plasma-trigger-border-radius:0.25rem;--plasma-trigger-outline-radius:0.375rem;width:1.25rem;height:1.25rem;flex:0 0 1.25rem;background:\", \";box-shadow:inset 0 0 0 0.125rem \", \";color:\", \";input:checked + label &{background:\", \";box-shadow:inset 0 0 0 0.125rem \", \";}\", \" border-radius:var(--plasma-trigger-border-radius);\", \"\"], transparent, secondary, white, accent, accent, function (_ref) {\n  var $scaleOnInteraction = _ref.$scaleOnInteraction;\n  return $scaleOnInteraction && css([\"&:hover{transform:scale(1.04);}&:active{transform:scale(0.96);}\"]);\n}, function (_ref2) {\n  var $focused = _ref2.$focused,\n    theme = _ref2.theme;\n  return css([\"\", \"\"], addFocus({\n    synthesizeFocus: syntheticFocus,\n    focused: $focused,\n    lowPerformance: theme.lowPerformance,\n    outlineRadius: 'var(--plasma-trigger-outline-radius)'\n  }));\n});\nvar StyledMark = /*#__PURE__*/styled(IconDone).withConfig({\n  componentId: \"plasma-ui__sc-i8k5cq-3\"\n})([\"position:absolute;top:0;left:0;right:0;bottom:0;margin:auto;width:1rem;height:1rem;transition:\", \";transform:scale(0);input:checked + label \", \" &{transform:scale(1);}\"], function (_ref3) {\n  var theme = _ref3.theme;\n  return theme.lowPerformance ? 'unset' : 'transform 0.1s ease-in-out';\n}, StyledTrigger);\nexport var StyledContent = /*#__PURE__*/styled(BaseboxContent).withConfig({\n  componentId: \"plasma-ui__sc-i8k5cq-4\"\n})([\"width:calc(100% - 2rem);\"]);\n\n/**\n * Флажок или *чекбокс*. Позволяет пользователю управлять параметром с двумя состояниями — ☑ включено и ☐ отключено.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var Checkbox = /*#__PURE__*/forwardRef(function Checkbox(_ref4, ref) {\n  var id = _ref4.id,\n    label = _ref4.label,\n    description = _ref4.description,\n    disabled = _ref4.disabled,\n    focused = _ref4.focused,\n    scaleOnInteraction = _ref4.scaleOnInteraction,\n    style = _ref4.style,\n    className = _ref4.className,\n    _ref4$singleLine = _ref4.singleLine,\n    singleLine = _ref4$singleLine === void 0 ? false : _ref4$singleLine,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  var uniqId = useUniqId();\n  var uniqLabelId = useUniqId();\n  var uniqDescriptionId = useUniqId();\n  var checkboxId = id || uniqId;\n  return /*#__PURE__*/React.createElement(StyledRoot, {\n    $disabled: disabled,\n    style: style,\n    className: className,\n    tabIndex: -1\n  }, /*#__PURE__*/React.createElement(StyledInput, _extends({\n    \"aria-labelledby\": uniqLabelId,\n    \"aria-describedby\": uniqDescriptionId,\n    id: checkboxId,\n    ref: ref,\n    type: \"checkbox\",\n    disabled: disabled\n  }, rest)), /*#__PURE__*/React.createElement(BaseboxContentWrapper, {\n    htmlFor: checkboxId\n  }, /*#__PURE__*/React.createElement(StyledTrigger, {\n    $focused: focused,\n    $scaleOnInteraction: scaleOnInteraction\n  }, _StyledMark || (_StyledMark = /*#__PURE__*/React.createElement(StyledMark, {\n    color: \"inherit\",\n    size: \"xs\"\n  }))), label && /*#__PURE__*/React.createElement(StyledContent, null, /*#__PURE__*/React.createElement(BaseboxLabel, {\n    as: \"span\",\n    singleLine: singleLine,\n    id: uniqLabelId\n  }, label), description && /*#__PURE__*/React.createElement(BaseboxDescription, {\n    mt: 4,\n    singleLine: singleLine,\n    id: uniqDescriptionId\n  }, description))));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}