{"ast":null,"code":"var _excluded = [\"content\", \"description\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { BodyM } from '@salutejs/plasma-typo';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Cell/Cell');\nexport var CellRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-web-core__sc-1xsof0e-0\"\n})([\"display:flex;align-items:center;\"]);\nexport var CellContent = /*#__PURE__*/styled(BodyM).withConfig({\n  componentId: \"plasma-web-core__sc-1xsof0e-1\"\n})([\"margin-left:var(--cell-content-margin-left,0);\"]);\n/**\n * Базовый компонент для отображения блоков контента в списках и карточках.\n */\nexport var Cell = function Cell(_ref) {\n  var content = _ref.content,\n    description = _ref.description,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(CellRoot, rest, content, /*#__PURE__*/React.createElement(CellContent, {\n    bold: true\n  }, description));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}