{"ast":null,"code":"var _excluded = [\"value\", \"items\", \"onChange\", \"design\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useCallback, useMemo } from 'react';\nimport { flattenItemsRecursive, setActiveRecursive } from './Select.utils';\n/**\n * Выпадающий список с возможностью выбора одного значения.\n */\nexport var withSingleSelect = function withSingleSelect(View) {\n  return /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var value = _ref.value,\n      _ref$items = _ref.items,\n      items = _ref$items === void 0 ? [] : _ref$items,\n      onChange = _ref.onChange,\n      design = _ref.design,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var isActive = useCallback(function (item) {\n      return item.value === value;\n    }, [value]);\n    var viewValue = useMemo(function () {\n      var _flattenItemsRecursiv, _flattenItemsRecursiv2;\n      return (_flattenItemsRecursiv = (_flattenItemsRecursiv2 = flattenItemsRecursive(items).find(isActive)) === null || _flattenItemsRecursiv2 === void 0 ? void 0 : _flattenItemsRecursiv2.label) !== null && _flattenItemsRecursiv !== void 0 ? _flattenItemsRecursiv : '';\n    }, [value, items, isActive]);\n    var viewItems = useMemo(function () {\n      return setActiveRecursive(items, isActive);\n    }, [value, items, isActive]);\n    var onItemSelect = useCallback(function (item) {\n      return onChange === null || onChange === void 0 ? void 0 : onChange(item.value);\n    }, [onChange]);\n    return /*#__PURE__*/React.createElement(View, _extends({\n      design: design,\n      ref: ref,\n      value: viewValue,\n      items: viewItems,\n      onItemSelect: onItemSelect\n    }, rest));\n  });\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}