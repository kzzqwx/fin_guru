{"ast":null,"code":"var DEFAULT_DURATION = 300;\n\n// https://css-tricks.com/emulating-css-timing-functions-javascript/\nvar tfs = {\n  linear: function linear(t) {\n    return t;\n  },\n  // eslint-disable-next-line\n  easeIn: function easeIn(t) {\n    return Math.pow(t, 1.675);\n  },\n  // eslint-disable-next-line\n  easeOut: function easeOut(t) {\n    return 1 - Math.pow(1 - t, 1.675);\n  },\n  easeInOut: function easeInOut(t) {\n    return 0.5 * (Math.sin((t - 0.5) * Math.PI) + 1);\n  }\n};\n/**\n * Плавная прокрутка по горизонтали\n * @param {Element} elem\n * @param {number} pos\n * @param {number} duration\n * @param {string} timingFunction\n */\nexport var animatedScrollToX = function animatedScrollToX(elem, pos) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_DURATION;\n  var timingFunction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'easeInOut';\n  var startTime;\n  var startX = elem.scrollLeft;\n  var endX = Math.max(0, Math.min(elem.scrollWidth - elem.clientWidth, pos));\n  var handleNewAnimationFrame = function handleNewAnimationFrame() {\n    startTime = startTime || Date.now();\n    var timePos = Math.min(1, Math.max(1, Date.now() - startTime) / duration);\n    var scrollPos = tfs[timingFunction](timePos);\n    var left = startX + (endX - startX) * scrollPos;\n    elem.scrollTo({\n      left: left\n    });\n    if (timePos !== 1) window.requestAnimationFrame(handleNewAnimationFrame);\n  };\n  window.requestAnimationFrame(handleNewAnimationFrame);\n};\n\n/**\n * Плавная прокрутка по вертикали\n * @param {Element} elem\n * @param {number} pos\n * @param {number} duration\n * @param {string} timingFunction\n */\nexport var animatedScrollToY = function animatedScrollToY(elem, pos) {\n  var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_DURATION;\n  var timingFunction = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'easeInOut';\n  var startTime;\n  var startY = elem.scrollTop;\n  var endY = Math.max(0, Math.min(elem.scrollHeight - elem.clientHeight, pos));\n  var handleNewAnimationFrame = function handleNewAnimationFrame() {\n    startTime = startTime || Date.now();\n    var timePos = Math.min(1, Math.max(1, Date.now() - startTime) / duration);\n    var scrollPos = tfs[timingFunction](timePos);\n    var top = startY + (endY - startY) * scrollPos;\n    elem.scrollTo({\n      top: top\n    });\n    if (timePos !== 1) window.requestAnimationFrame(handleNewAnimationFrame);\n  };\n  window.requestAnimationFrame(handleNewAnimationFrame);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}