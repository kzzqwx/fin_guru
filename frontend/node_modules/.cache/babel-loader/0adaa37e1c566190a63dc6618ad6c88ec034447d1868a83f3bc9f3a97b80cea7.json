{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { cx } from '../../../../utils';\nimport { useMonths } from '../../hooks';\nimport { classes } from '../../Calendar.tokens';\nimport { StyledCalendarMonths, StyledFlex, StyledMonth, StyledMonthRoot } from './CalendarMonths.styles';\n\n/**\n * Компонент месяцев в календаре.\n */\nexport var CalendarMonths = function CalendarMonths(_ref) {\n  var currentDate = _ref.date,\n    selectIndexes = _ref.selectIndexes,\n    outerRefs = _ref.outerRefs,\n    onChangeMonth = _ref.onChangeMonth,\n    onSetSelected = _ref.onSetSelected,\n    onKeyDown = _ref.onKeyDown;\n  var _useMonths = useMonths(currentDate),\n    _useMonths2 = _slicedToArray(_useMonths, 2),\n    months = _useMonths2[0],\n    selected = _useMonths2[1];\n  var selectedRef = useRef(selected);\n  var onSetSelectedRef = useRef(onSetSelected);\n  var handleOnChangeMonth = useCallback(function (event) {\n    /**\n     * нужно вызвать stopImmediatePropagation для случаев, когда\n     * обработчик события onClick навешивается снаружи.\n     * Как, например, в компоненте Popup\n     */\n    event.nativeEvent.stopImmediatePropagation();\n    var monthIndex = event.currentTarget.dataset.monthIndex;\n    onChangeMonth(Number(monthIndex));\n  }, [onChangeMonth]);\n  var getRefs = useCallback(function (element, i, j) {\n    outerRefs.current[i][j] = element;\n  }, [outerRefs]);\n  useEffect(function () {\n    if (selectedRef.current) {\n      var _onSetSelectedRef$cur;\n      (_onSetSelectedRef$cur = onSetSelectedRef.current) === null || _onSetSelectedRef$cur === void 0 || _onSetSelectedRef$cur.call(onSetSelectedRef, selectedRef.current);\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(StyledCalendarMonths, {\n    role: \"grid\",\n    \"aria-labelledby\": \"id-grid-label\",\n    onKeyDown: onKeyDown\n  }, months.map(function (month, i) {\n    return /*#__PURE__*/React.createElement(StyledFlex, {\n      role: \"row\",\n      key: i\n    }, month.map(function (_ref2, j) {\n      var monthName = _ref2.monthName,\n        monthIndex = _ref2.monthIndex,\n        isSelected = _ref2.isSelected,\n        isCurrent = _ref2.isCurrent,\n        monthFullName = _ref2.monthFullName;\n      var selectedClass = isSelected ? classes.selectedItem : undefined;\n      var currentClass = !isSelected && isCurrent ? classes.currentItem : undefined;\n      return /*#__PURE__*/React.createElement(StyledMonthRoot, {\n        id: \"month-test-\".concat(i, \"-\").concat(j),\n        className: cx(selectedClass, currentClass, classes.selectableItem),\n        ref: function ref(element) {\n          return getRefs(element, i, j);\n        },\n        tabIndex: i === (selectIndexes === null || selectIndexes === void 0 ? void 0 : selectIndexes[0]) && j === (selectIndexes === null || selectIndexes === void 0 ? void 0 : selectIndexes[1]) ? 0 : -1,\n        onClick: handleOnChangeMonth,\n        \"data-month-index\": monthIndex,\n        \"aria-selected\": isSelected,\n        role: \"gridcell\",\n        key: \"StyledMonth-\".concat(i, \"-\").concat(j),\n        \"aria-label\": monthFullName\n      }, /*#__PURE__*/React.createElement(StyledMonth, null, monthName));\n    }));\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}