{"ast":null,"code":"var _excluded = [\"label\", \"title\", \"subTitle\", \"caption\", \"size\", \"children\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { primary, secondary } from '@salutejs/plasma-tokens';\nimport { Body1, Footnote1, Headline1, Headline3 } from '../Typography';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('TextBox/TextBox');\nexport var Title = /*#__PURE__*/styled(Body1).withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-0\"\n})([\"margin:0.125rem 0;color:\", \";\"], primary);\nexport var BigTitle = /*#__PURE__*/styled(Headline3).withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-1\"\n})([\"margin:0.5rem 0;color:\", \";\"], primary);\nexport var BiggerTitle = /*#__PURE__*/styled(Headline1).withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-2\"\n})([\"margin:0.5rem 0;color:\", \";\"], primary);\nexport var Label = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-3\"\n})([\"margin:0.375rem 0;color:\", \";\"], function (_ref) {\n  var color = _ref.color;\n  return color || secondary;\n});\nexport var SubTitle = /*#__PURE__*/styled(Footnote1).withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-4\"\n})([\"margin:0.125rem 0;color:\", \";\"], function (_ref2) {\n  var color = _ref2.color;\n  return color || secondary;\n});\nexport var Caption = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-5\"\n})([\"margin:0.25rem 0;color:\", \";\"], function (_ref3) {\n  var color = _ref3.color;\n  return color || secondary;\n});\nexport var TextBoxRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-19dk7hy-6\"\n})([\"& >:first-child{margin-top:0;}& >:last-child{margin-bottom:0;}\"]);\n/**\n * Компонент для отображения текста в скомпанованном блоке.\n */\nexport var TextBox = function TextBox(_ref4) {\n  var label = _ref4.label,\n    title = _ref4.title,\n    subTitle = _ref4.subTitle,\n    caption = _ref4.caption,\n    _ref4$size = _ref4.size,\n    size = _ref4$size === void 0 ? 'm' : _ref4$size,\n    children = _ref4.children,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  if (children) {\n    return /*#__PURE__*/React.createElement(TextBoxRoot, rest, children);\n  }\n  var T = size === 'm' ? Title : BigTitle;\n  return /*#__PURE__*/React.createElement(TextBoxRoot, rest, label && /*#__PURE__*/React.createElement(Label, null, label), title && /*#__PURE__*/React.createElement(T, null, title), subTitle && /*#__PURE__*/React.createElement(SubTitle, null, subTitle), caption && /*#__PURE__*/React.createElement(Caption, null, caption));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}