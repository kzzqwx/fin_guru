{"ast":null,"code":"var _ModalOverlayVariable;\nimport React, { useCallback, useRef } from 'react';\nimport styled, { css, createGlobalStyle } from 'styled-components';\nimport { overlay, backgroundPrimary } from '@salutejs/plasma-tokens';\nimport { ButtonRoot, PopupBaseProvider, endTransitionClass, popupBaseRootClass, ModalBase, modalBaseOverlayClass } from '@salutejs/plasma-core';\nimport { mediaQuery } from '../../utils';\nimport { Button } from '../Button';\nimport { TextBox, TextBoxTitle, TextBoxSubTitle } from '../TextBox';\nimport { Cell } from '../Cell';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Confirm/Confirm');\nvar flexDirection = {\n  horizontal: 'row',\n  'horizontal-reverse': 'row-reverse',\n  vertical: 'column',\n  'vertical-reverse': 'column-reverse'\n};\nvar marginByDirection = {\n  horizontal: 'margin-right',\n  'horizontal-reverse': 'margin-left',\n  vertical: 'margin-bottom',\n  'vertical-reverse': 'margin-top'\n};\nvar ModalOverlayVariables = /*#__PURE__*/createGlobalStyle([\"body{--plasma-modal-overlay-color:\", \";}\"], overlay);\nvar tvLayout = /*#__PURE__*/css([\"display:flex;flex-direction:row;justify-content:space-between;align-items:center;\"]);\nvar StyledButton = /*#__PURE__*/styled(Button).withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-0\"\n})([\"\"]);\n\n// TODO: https://github.com/salute-developers/plasma/issues/232\nvar ConfirmRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-1\"\n})([\"\", \";\"], function (_ref) {\n  var stretch = _ref.stretch;\n  return stretch && {\n    width: '100vw'\n  };\n});\nvar ConfirmContainer = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-2\"\n})([\"margin:1rem 1rem 0;padding:0.75rem;border-radius:1.25rem;background-color:\", \";\"], backgroundPrimary);\nvar ConfirmMain = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-3\"\n})([\"\", \" \", \"{white-space:pre-line;}\", \"{white-space:pre-line;}\"], function (_ref2) {\n  var theme = _ref2.theme;\n  return css([\"\", \" \", \" \", \"\"], mediaQuery('M', theme.deviceScale)(tvLayout), mediaQuery('L', theme.deviceScale)(tvLayout), mediaQuery('XL', theme.deviceScale)(tvLayout));\n}, TextBoxTitle, TextBoxSubTitle);\nvar ConfirmFooter = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-4\"\n})([\"margin-left:1rem;margin-right:1rem;max-width:100%;\"]);\nvar handleFlexDirection = function handleFlexDirection(_ref3) {\n  var reverse = _ref3.reverse,\n    direction = _ref3.direction;\n  if (reverse) {\n    return flexDirection['horizontal-reverse'];\n  }\n  return flexDirection[direction];\n};\nvar handleMarginByDirection = function handleMarginByDirection(_ref4) {\n  var direction = _ref4.direction,\n    reverse = _ref4.reverse;\n  var margin = reverse ? marginByDirection['horizontal-reverse'] : marginByDirection[direction];\n  return css([\"\", \":0.5rem;\"], margin);\n};\nvar BtnWrap = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-5\"\n})([\"flex:1;display:flex;flex-direction:\", \";\", \":not(:last-child){\", \"}\", \"{min-width:0;}\"], handleFlexDirection, StyledButton, handleMarginByDirection, ButtonRoot);\n\n// TODO: https://github.com/salute-developers/plasma/issues/232\nvar StyledCell = /*#__PURE__*/styled(Cell).withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-6\"\n})([\"flex:1;\", \" & > div{padding:0;}\"], function (_ref5) {\n  var theme = _ref5.theme;\n  return mediaQuery('S', theme.deviceScale)(css([\"margin-bottom:0.75rem;\"]));\n});\nvar StyledModal = /*#__PURE__*/styled(ModalBase).withConfig({\n  componentId: \"plasma-ui__sc-qi6do9-7\"\n})([\"& > .\", \",.\", \"{opacity:1;transition:\", \";}&.\", \" > .\", \"{opacity:0;}&.\", \" > .\", \"{opacity:0;}\"], popupBaseRootClass, modalBaseOverlayClass, function (_ref6) {\n  var theme = _ref6.theme;\n  return theme.lowPerformance ? 'unset' : 'opacity 0.5s 0.1s';\n}, endTransitionClass, popupBaseRootClass, endTransitionClass, modalBaseOverlayClass);\n\n/**\n * Сообщение подтверждения действия пользователя.\n */\nexport var Confirm = function Confirm(props) {\n  var title = props.title,\n    subtitle = props.subtitle,\n    visible = props.visible,\n    _props$stretch = props.stretch,\n    stretch = _props$stretch === void 0 ? true : _props$stretch,\n    approveText = props.approveText,\n    dismissText = props.dismissText,\n    _props$view = props.view,\n    view = _props$view === void 0 ? 'secondary' : _props$view,\n    _props$reverseButtons = props.reverseButtons,\n    reverseButtons = _props$reverseButtons === void 0 ? false : _props$reverseButtons,\n    extraContent = props.extraContent,\n    onApprove = props.onApprove,\n    onDismiss = props.onDismiss,\n    _props$buttonsDirecti = props.buttonsDirection,\n    buttonsDirection = _props$buttonsDirecti === void 0 ? 'horizontal' : _props$buttonsDirecti,\n    _props$placement = props.placement,\n    placement = _props$placement === void 0 ? 'top' : _props$placement,\n    _props$offset = props.offset,\n    offset = _props$offset === void 0 ? [0, 0] : _props$offset;\n  var onApproveClick = useCallback(function () {\n    onApprove();\n  }, [onApprove]);\n  var onDismissClick = useCallback(function () {\n    onDismiss && onDismiss();\n  }, [onDismiss]);\n  var btnRef = useRef(null);\n  var approve = /*#__PURE__*/React.createElement(StyledButton, {\n    size: \"s\",\n    ref: btnRef,\n    tabIndex: 0,\n    stretch: true,\n    view: view,\n    text: approveText,\n    onClick: onApproveClick\n  });\n  var dismiss = dismissText ? /*#__PURE__*/React.createElement(StyledButton, {\n    size: \"s\",\n    stretch: true,\n    view: \"secondary\",\n    text: dismissText,\n    onClick: onDismissClick\n  }) : null;\n  var buttons = /*#__PURE__*/React.createElement(BtnWrap, {\n    reverse: reverseButtons,\n    direction: buttonsDirection\n  }, dismiss, approve);\n  return /*#__PURE__*/React.createElement(PopupBaseProvider, null, _ModalOverlayVariable || (_ModalOverlayVariable = /*#__PURE__*/React.createElement(ModalOverlayVariables, null)), /*#__PURE__*/React.createElement(StyledModal, {\n    isOpen: visible,\n    withAnimation: true,\n    onOverlayClick: onDismissClick,\n    zIndex: \"1000\",\n    initialFocusRef: btnRef,\n    placement: placement,\n    offset: offset\n  }, /*#__PURE__*/React.createElement(ConfirmRoot, {\n    visible: true,\n    stretch: stretch\n  }, /*#__PURE__*/React.createElement(ConfirmContainer, null, /*#__PURE__*/React.createElement(ConfirmMain, null, /*#__PURE__*/React.createElement(StyledCell, {\n    content: /*#__PURE__*/React.createElement(TextBox, {\n      title: title,\n      subTitle: subtitle\n    })\n  }), buttons)), /*#__PURE__*/React.createElement(ConfirmFooter, null, extraContent))));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}