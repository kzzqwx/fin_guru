{"ast":null,"code":"var _excluded = [\"children\", \"contentLeft\", \"isActive\", \"role\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useRef, useContext, useEffect } from 'react';\nimport styled, { css } from 'styled-components';\nimport { useForkRef } from '../../hooks';\nimport { applyEllipsis } from '../../mixins';\nimport { TabsContext } from './TabsContext';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Tabs/TabItem');\n/**\n * Без этого спана баг - контент (например, иконка)\n * сжимался в угоду текстового контента,\n * при чем ширина иконки игнорируется.\n */\nvar StyledTabItemContentLeft = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-1am72fb-0\"\n})([\"display:flex;pointer-events:none;\"]);\n\n/**\n * Этот спан нужен для сокращения\n * текстового контента и отступов.\n */\nvar StyledTabItemText = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-1am72fb-1\"\n})([\"display:inline;pointer-events:none;\", \" \", \" ~ &{margin-left:0.375rem;}&:focus,&.focus-visible{outline:0 none;}\"], applyEllipsis, StyledTabItemContentLeft);\nexport var StyledTabItem = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-1am72fb-2\"\n})([\"align-items:center;box-sizing:border-box;display:flex;justify-content:center;border:0 none;background:none;color:inherit;letter-spacing:inherit;text-align:center;cursor:pointer;&:focus{outline:0 none;}\", \" \", \" \", \"\"], function (_ref) {\n  var disabled = _ref.disabled;\n  return disabled && css([\"pointer-events:none;\"]);\n}, function (_ref2) {\n  var isChildren = _ref2.isChildren;\n  return !isChildren && css([\"width:var(--tab-item-height);padding-left:0;padding-right:0;\"]);\n}, function (_ref3) {\n  var isContentLeft = _ref3.isContentLeft;\n  return isContentLeft && css([\"padding-top:var(--tab-item-padding-y-reduced);padding-bottom:var(--tab-item-padding-y-reduced);\"]);\n});\n\n/**\n * Элемент списка, недопустимо использовать вне компонента Tabs.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var TabItem = /*#__PURE__*/forwardRef(function TabItem(_ref4, outerRef) {\n  var children = _ref4.children,\n    contentLeft = _ref4.contentLeft,\n    isActive = _ref4.isActive,\n    _ref4$role = _ref4.role,\n    role = _ref4$role === void 0 ? 'tab' : _ref4$role,\n    rest = _objectWithoutProperties(_ref4, _excluded);\n  var innerRef = useRef(null);\n  var ref = useForkRef(outerRef, innerRef);\n  var refs = useContext(TabsContext);\n  useEffect(function () {\n    if (!refs) {\n      return;\n    }\n    refs.register(innerRef);\n    return function () {\n      return refs.unregister(innerRef);\n    };\n  }, [refs]);\n  return /*#__PURE__*/React.createElement(StyledTabItem, _extends({\n    ref: ref,\n    isChildren: !!children,\n    isContentLeft: !!contentLeft,\n    isActive: isActive,\n    \"aria-selected\": isActive,\n    role: role\n  }, rest), contentLeft && /*#__PURE__*/React.createElement(StyledTabItemContentLeft, {\n    \"aria-hidden\": true\n  }, contentLeft), children && /*#__PURE__*/React.createElement(StyledTabItemText, {\n    tabIndex: -1\n  }, children));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}