{"ast":null,"code":"var _excluded = [\"children\", \"minColWidth\", \"gapX\", \"gapY\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('ElasticGrid/ElasticGrid');\nvar StyledContainer = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-web-core__sc-1pc48un-0\"\n})([\"max-width:100%;display:flex;flex-wrap:wrap;\"]);\nvar StyledItem = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-web-core__sc-1pc48un-1\"\n})([\"margin-bottom:\", \"px;\"], function (_ref) {\n  var $gapY = _ref.$gapY;\n  return $gapY;\n});\n/**\n * Компонент с резиновой сеткой\n */\nexport var ElasticGrid = function ElasticGrid(_ref2) {\n  var children = _ref2.children,\n    minColWidth = _ref2.minColWidth,\n    _ref2$gapX = _ref2.gapX,\n    gapX = _ref2$gapX === void 0 ? 0 : _ref2$gapX,\n    _ref2$gapY = _ref2.gapY,\n    gapY = _ref2$gapY === void 0 ? 0 : _ref2$gapY,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var containerRef = useRef(null);\n  var _useState = useState({\n      width: \"\".concat(minColWidth, \"px\"),\n      cols: 1\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    itemProps = _useState2[0],\n    setItemProps = _useState2[1];\n  var getItemStyle = function getItemStyle(column) {\n    return {\n      width: itemProps.width,\n      marginRight: (column + 1) % itemProps.cols === 0 ? '0' : \"\".concat(gapX, \"px\")\n    };\n  };\n  useLayoutEffect(function () {\n    var currentRef = containerRef.current;\n\n    /* istanbul ignore if: убираем проверку на рефы из покрытия */\n    if (!currentRef) {\n      return;\n    }\n    var resizeObserver = new window.ResizeObserver(function () {\n      var _currentRef$getBoundi = currentRef.getBoundingClientRect(),\n        width = _currentRef$getBoundi.width;\n      var cols = Math.trunc(width / minColWidth);\n      var scale = width / minColWidth / cols;\n      var offsetSize = gapX * (cols - 1) / cols;\n      setItemProps({\n        width: \"\".concat(minColWidth * scale - offsetSize, \"px\"),\n        cols: cols\n      });\n    });\n    resizeObserver.observe(currentRef);\n    return function () {\n      resizeObserver.unobserve(currentRef);\n    };\n  }, [minColWidth, gapX]);\n  return /*#__PURE__*/React.createElement(StyledContainer, _extends({}, props, {\n    ref: containerRef\n  }), React.Children.map(children, function (child, i) {\n    return /*#__PURE__*/React.createElement(StyledItem, {\n      $gapY: gapY,\n      style: getItemStyle(i)\n    }, child);\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}