{"ast":null,"code":"var _templateObject;\nfunction _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nimport { css } from 'styled-components';\nimport styled from 'styled-components';\nimport { addFocus } from '../../../../mixins';\nimport { tokens } from '../../tokens';\nexport var base = /*#__PURE__*/css(_templateObject || (_templateObject = /*#__PURE__*/_taggedTemplateLiteral([\"\\n    display: flex;\\n    align-items: center;\\n    position: relative;\\n\"])));\nexport var StyledContent = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-1ibkmsl-0\"\n})([\"display:inline-flex;flex-direction:row;align-items:center;\"]);\nexport var StyledContentWrapper = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-new-hope__sc-1ibkmsl-1\"\n})([\"margin:-0.125rem;padding:0.25rem;box-sizing:content-box;overflow:scroll;position:relative;height:100%;width:100%;display:flex;align-items:center;scrollbar-width:none;::-webkit-scrollbar{display:none;}overscroll-behavior:contain;\"]);\nexport var StyledArrow = /*#__PURE__*/styled.button.withConfig({\n  componentId: \"plasma-new-hope__sc-1ibkmsl-2\"\n})([\"display:flex;cursor:pointer;border:none;background-color:transparent;padding:0;outline:none;\", \";&[disabled]{cursor:not-allowed;}--plasma_private-outer-padding:\", \";padding-right:\", \";padding-left:\", \";\"], /*#__PURE__*/addFocus({\n  outlineSize: '0.063rem',\n  outlineOffset: '-0.125rem',\n  outlineColor: /*#__PURE__*/\"var(\".concat(tokens.outlineFocusColor, \")\"),\n  outlineRadius: 'calc(var(--plasma_private-outline-radius) - 0.063rem)'\n}), function (_ref) {\n  var isFilled = _ref.isFilled;\n  return isFilled ? \"var(\".concat(tokens.arrowOuterPadding, \")\") : '';\n}, function (_ref2) {\n  var isLeftArrow = _ref2.isLeftArrow;\n  return isLeftArrow ? \"var(\".concat(tokens.arrowInnerPadding, \")\") : 'var(--plasma_private-outer-padding)';\n}, function (_ref3) {\n  var isLeftArrow = _ref3.isLeftArrow;\n  return isLeftArrow ? 'var(--plasma_private-outer-padding)' : \"var(\".concat(tokens.arrowInnerPadding, \")\");\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}