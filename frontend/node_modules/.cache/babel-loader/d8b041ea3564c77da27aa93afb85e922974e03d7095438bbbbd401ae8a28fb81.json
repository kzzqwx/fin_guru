{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Spinner as SpinnerBase } from '@salutejs/plasma-core';\nimport { useThemeContext } from '../../hooks';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Spinner/Spinner');\n/**\n * Компонент для отображения индикатора загрузки.\n */\nvar StyledSpinner = /*#__PURE__*/styled(SpinnerBase).withConfig({\n  componentId: \"plasma-ui__sc-p3vf8-0\"\n})([\"\"]);\nexport var Spinner = function Spinner(props) {\n  var _useThemeContext = useThemeContext(),\n    deviceScale = _useThemeContext.deviceScale;\n  return /*#__PURE__*/React.createElement(StyledSpinner, _extends({\n    deviceScale: deviceScale\n  }, props));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}