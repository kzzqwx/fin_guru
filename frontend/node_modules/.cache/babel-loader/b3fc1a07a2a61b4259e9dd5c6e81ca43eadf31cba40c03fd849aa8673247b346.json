{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useRef, useEffect, forwardRef } from 'react';\nimport styled, { css } from 'styled-components';\nimport { TabItem as BaseTabItem, button2, buttonFocused, useForkRef } from '@salutejs/plasma-core';\nimport { useTabsAnimationContext } from './TabsAnimationContext';\nimport { StyledSlider, activeItemStyle } from './TabsSlider';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Tabs/TabItem');\n// TODO: https://github.com/salute-developers/plasma/issues/232\n/**\n * Элемент списка, недопустимо использовать вне компонента Tabs.\n */\nexport var StyledTabItem = /*#__PURE__*/styled(BaseTabItem).withConfig({\n  componentId: \"plasma-ui__sc-1ndbynx-0\"\n})([\"\", \";position:relative;height:var(--tab-item-height);padding:var(--tab-item-padding-y) var(--tab-item-padding-x);border-radius:var(--tab-item-border-radius);transition:\", \";&:active ~ \", \"{transform:\", \";}\", \" &::before{content:'';position:absolute;top:calc(var(--tab-focus-border-size) * -1);left:calc(var(--tab-focus-border-size) * -1);right:calc(var(--tab-focus-border-size) * -1);bottom:calc(var(--tab-focus-border-size) * -1);display:block;box-sizing:content-box;border:var(--tab-focus-border-size) solid transparent;border-radius:var(--tab-item-outline-radius);transition:\", \";pointer-events:none;}&.focus-visible,&[data-focus-visible-added]{&::before{box-shadow:0 0 0 var(--tab-focus-border-size) \", \";}}\"], button2, function (_ref) {\n  var theme = _ref.theme;\n  return theme.lowPerformance ? 'unset' : 'background-color 0.3s ease-in-out, transform 0.1s ease-in-out';\n}, StyledSlider, function (_ref2) {\n  var disabled = _ref2.disabled;\n  return disabled ? 'none' : 'scale(0.96)';\n}, function (_ref3) {\n  var animated = _ref3.animated,\n    isActive = _ref3.isActive;\n  return !animated && isActive && css([\"\", \"\"], activeItemStyle);\n}, function (_ref4) {\n  var theme = _ref4.theme;\n  return theme.lowPerformance ? 'unset' : 'box-shadow 0.2s ease-in-out';\n}, buttonFocused);\nexport var StyledTabItemMemo = /*#__PURE__*/React.memo(StyledTabItem);\n\n/**\n * Элемент списка вкладок, недопустимо использовать вне компонента Tabs.\n */\nexport var TabItem = /*#__PURE__*/forwardRef(function (props, outerRef) {\n  var innerRef = useRef(null);\n  var ref = useForkRef(outerRef, innerRef);\n  var refs = useTabsAnimationContext();\n  useEffect(function () {\n    if (!refs) {\n      return;\n    }\n    refs.register(innerRef);\n    return function () {\n      return refs.unregister(innerRef);\n    };\n  }, [ref, refs]);\n  return /*#__PURE__*/React.createElement(StyledTabItemMemo, _extends({\n    ref: ref\n  }, props));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}