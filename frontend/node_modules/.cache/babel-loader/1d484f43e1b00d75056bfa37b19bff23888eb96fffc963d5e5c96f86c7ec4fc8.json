{"ast":null,"code":"var _excluded = [\"children\", \"currency\", \"minimumFractionDigits\", \"stroke\", \"periodicity\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport { formatCurrency } from '../../utils';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Price/Price');\nvar StyledPrice = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-1owlanf-0\"\n})([\"\", \";\"], function (_ref) {\n  var $stroke = _ref.$stroke;\n  return $stroke && css([\"text-decoration:line-through;\"]);\n});\nvar StyledPeriodicity = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-1owlanf-1\"\n})([\"padding-left:0.25rem;\"]);\n\n/**\n * Компонент для отображения цены / стоимости / суммы.\n */\nexport var Price = function Price(_ref2) {\n  var children = _ref2.children,\n    _ref2$currency = _ref2.currency,\n    currency = _ref2$currency === void 0 ? 'rub' : _ref2$currency,\n    _ref2$minimumFraction = _ref2.minimumFractionDigits,\n    minimumFractionDigits = _ref2$minimumFraction === void 0 ? 0 : _ref2$minimumFraction,\n    _ref2$stroke = _ref2.stroke,\n    stroke = _ref2$stroke === void 0 ? false : _ref2$stroke,\n    periodicity = _ref2.periodicity,\n    rest = _objectWithoutProperties(_ref2, _excluded);\n  return /*#__PURE__*/React.createElement(StyledPrice, _extends({\n    $stroke: stroke\n  }, rest), formatCurrency(children, currency, minimumFractionDigits), periodicity && /*#__PURE__*/React.createElement(StyledPeriodicity, null, periodicity));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}