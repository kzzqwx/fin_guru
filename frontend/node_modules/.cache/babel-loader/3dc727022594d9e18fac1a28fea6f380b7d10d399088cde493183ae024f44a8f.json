{"ast":null,"code":"import React from 'react';\nimport styled from 'styled-components';\nimport { applyNoSelect } from '../../mixins';\nimport { dark02, white } from '../../tokens';\nimport { Footnote1 } from '../Typography';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Toast/Toast');\nexport var StyledRoot = /*#__PURE__*/styled(Footnote1).withConfig({\n  componentId: \"plasma__sc-1y7x3ev-0\"\n})([\"display:inline-flex;align-items:center;padding:0.6875rem 1.25rem;border-radius:1.5rem;background:\", \";color:\", \";\", \";\"], dark02, white, applyNoSelect);\nvar StyledContent = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-1y7x3ev-1\"\n})([\"display:flex;align-items:center;margin-right:0.5rem;\"]);\n\n/**\n * Короткие текстовые подсказки.\n * Вызываются только в текущем запущенном приложении как реакция на выполнение действия пользователем.\n */\nexport var Toast = function Toast(_ref) {\n  var _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'status' : _ref$role,\n    text = _ref.text,\n    contentLeft = _ref.contentLeft;\n  var ariaLive = 'polite';\n  var ariaAtomic = false;\n  if (role === 'alert') {\n    ariaLive = 'assertive';\n  } else if (role === 'status') {\n    ariaAtomic = true;\n  }\n  return /*#__PURE__*/React.createElement(StyledRoot, {\n    role: role,\n    \"aria-live\": ariaLive,\n    \"aria-atomic\": ariaAtomic\n  }, contentLeft && /*#__PURE__*/React.createElement(StyledContent, null, contentLeft), text);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}