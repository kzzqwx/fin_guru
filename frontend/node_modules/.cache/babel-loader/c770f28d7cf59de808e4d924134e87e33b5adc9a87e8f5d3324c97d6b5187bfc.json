{"ast":null,"code":"import 'focus-visible';\n/**\n * Миксин для добавления фокусной рамки к элементу через псевдоэлемент before\n * @param {FocusProps} props\n * @example\n * // Выведет фокусную рамку размером 2em, скруглением 5em, отступом 2em и цветом 'rebeccapurple'.\n * addFocus({\n *  outlineSize: '2em',\n *  outlineOffset: '2em',\n *  outlineRadius: '5em',\n *  outlineColor: 'rebeccapurple',\n * });\n * @example\n * // Выведет outline размером 4em, скруглением 10px 1px, без отступа и цветом 'greenyellow'.\n * addFocus({\n *  outlineSize: '4em',\n *  outlineOffset: '0',\n *  outlineRadius: '10em 1em',\n *  outlineColor: 'greenyellow',\n * });\n */\nexport var addFocus = function addFocus(args) {\n  var customFocusRules = args.customFocusRules,\n    _args$outlineSize = args.outlineSize,\n    outlineSize = _args$outlineSize === void 0 ? '0.125rem' : _args$outlineSize,\n    _args$outlineOffset = args.outlineOffset,\n    outlineOffset = _args$outlineOffset === void 0 ? '-0.125rem' : _args$outlineOffset,\n    _args$outlineColor = args.outlineColor,\n    outlineColor = _args$outlineColor === void 0 ? 'var(--plasma-colors-button-focused, var(--text-accent))' : _args$outlineColor,\n    _args$outlineRadius = args.outlineRadius,\n    outlineRadius = _args$outlineRadius === void 0 ? '30px' : _args$outlineRadius,\n    _args$hasTransition = args.hasTransition,\n    hasTransition = _args$hasTransition === void 0 ? true : _args$hasTransition;\n  return \"\\n        position: relative;\\n\\n        &::before {\\n            content: '';\\n\\n            position: absolute;\\n            top: \".concat(outlineOffset, \";\\n            left: \").concat(outlineOffset, \";\\n            right: \").concat(outlineOffset, \";\\n            bottom: \").concat(outlineOffset, \";\\n            z-index: 1;\\n\\n            display: block;\\n            box-sizing: content-box;\\n\\n            border: \").concat(outlineSize, \" solid transparent;\\n            border-radius: \").concat(outlineRadius, \";\\n\\n            transition: \").concat(hasTransition ? 'box-shadow 0.2s ease-in-out' : 'none', \";\\n\\n            pointer-events: none;\\n        }\\n\\n        \").concat(getCustomFocusStyle(outlineSize, outlineColor, customFocusRules), \"\\n    \");\n};\nvar getCustomFocusStyle = function getCustomFocusStyle(outlineSize, outlineColor, customFocusRules) {\n  if (!customFocusRules) {\n    return \"\\n            &.focus-visible:focus,\\n            &[data-focus-visible-added] {\\n                &::before {\\n                    outline: none;\\n                    box-shadow: 0 0 0 \".concat(outlineSize, \" \").concat(outlineColor, \";\\n                }\\n            }\\n        \");\n  }\n  return customFocusRules;\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}