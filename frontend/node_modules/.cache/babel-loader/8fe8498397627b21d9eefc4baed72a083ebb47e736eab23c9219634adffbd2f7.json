{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport styled from 'styled-components';\nimport { createButton, ButtonRoot, applyNoSelect } from '@salutejs/plasma-core';\nimport { applyInteraction } from '../../mixins';\nimport { useThemeContext } from '../../hooks';\nimport { spatnavClassNameAttrs } from '../../utils';\nimport { applySizes, applyViews } from './Button.mixins';\nimport { sizes } from './Button.sizes';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Button/Button');\nvar StyledButtonRoot = /*#__PURE__*/styled(ButtonRoot).attrs(spatnavClassNameAttrs).withConfig({\n  componentId: \"plasma-ui__sc-vm1boz-0\"\n})([\"\", \" \", \" \", \" \", \" \", \"\"], sizes, applySizes, applyViews, applyInteraction, applyNoSelect);\n\n/**\n * Основной компонент для отображения кнопок.\n * Поддерживает несколько режимов отображения (`view`) и размеров (`size`).\n */\nvar ButtonBase = /*#__PURE__*/createButton(StyledButtonRoot);\nexport var Button = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _useThemeContext = useThemeContext(),\n    deviceScale = _useThemeContext.deviceScale;\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({}, props, {\n    ref: ref,\n    deviceScale: deviceScale\n  }));\n});\nButton.defaultProps = {\n  size: 'l',\n  view: 'secondary',\n  pin: 'square-square',\n  outlined: true,\n  scaleOnInteraction: true\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}