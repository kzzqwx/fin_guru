{"ast":null,"code":"var _PaginationShorter;\nvar _excluded = [\"value\", \"perPage\", \"slots\", \"view\", \"viewCurrentPage\", \"type\", \"size\", \"pilled\", \"square\", \"disabledPages\", \"count\", \"hasQuickJump\", \"hasPerPage\", \"perPageList\", \"isCommonButtonStyles\", \"placeholderQuickJump\", \"textQuickJump\", \"textPerPage\", \"leftContent\", \"rightContent\", \"onChangePageValue\", \"onChangePerPageValue\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useEffect, useState, forwardRef } from 'react';\nimport { cx, isNumber } from '../../utils';\nimport { PaginationPages, PaginationActions, PaginationButton, PaginationSection, PaginationButtonGroup, PaginationRoot, PaginationShorter } from './Pagination.styles';\nimport { getSections, defaultValues } from './utils';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as typeCSS } from './variations/_type/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { classes } from './Pagination.tokens';\nimport { PaginationQuickJumpToPage } from './ui/PaginationQuickJumpToPage/PaginationQuickJumpToPage';\nimport { PaginationSelectPerPage } from './ui/PaginationSelectPerPage/PaginationSelectPerPage';\nexport var paginationRoot = function paginationRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (_ref, ref) {\n    var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? defaultValues.value : _ref$value,\n      perPage = _ref.perPage,\n      _ref$slots = _ref.slots,\n      slots = _ref$slots === void 0 ? defaultValues.slots : _ref$slots,\n      view = _ref.view,\n      viewCurrentPage = _ref.viewCurrentPage,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? defaultValues.type : _ref$type,\n      size = _ref.size,\n      _ref$pilled = _ref.pilled,\n      pilled = _ref$pilled === void 0 ? defaultValues.pilled : _ref$pilled,\n      _ref$square = _ref.square,\n      square = _ref$square === void 0 ? defaultValues.square : _ref$square,\n      _ref$disabledPages = _ref.disabledPages,\n      disabledPages = _ref$disabledPages === void 0 ? defaultValues.disabledPages : _ref$disabledPages,\n      _ref$count = _ref.count,\n      count = _ref$count === void 0 ? defaultValues.value : _ref$count,\n      _ref$hasQuickJump = _ref.hasQuickJump,\n      hasQuickJump = _ref$hasQuickJump === void 0 ? defaultValues.hasQuickJump : _ref$hasQuickJump,\n      _ref$hasPerPage = _ref.hasPerPage,\n      hasPerPage = _ref$hasPerPage === void 0 ? defaultValues.hasPerPage : _ref$hasPerPage,\n      _ref$perPageList = _ref.perPageList,\n      perPageList = _ref$perPageList === void 0 ? defaultValues.perPageList : _ref$perPageList,\n      _ref$isCommonButtonSt = _ref.isCommonButtonStyles,\n      isCommonButtonStyles = _ref$isCommonButtonSt === void 0 ? defaultValues.isCommonButtonStyles : _ref$isCommonButtonSt,\n      _ref$placeholderQuick = _ref.placeholderQuickJump,\n      placeholderQuickJump = _ref$placeholderQuick === void 0 ? defaultValues.placeholderQuickJump : _ref$placeholderQuick,\n      _ref$textQuickJump = _ref.textQuickJump,\n      textQuickJump = _ref$textQuickJump === void 0 ? defaultValues.textQuickJump : _ref$textQuickJump,\n      _ref$textPerPage = _ref.textPerPage,\n      textPerPage = _ref$textPerPage === void 0 ? defaultValues.textPerPage : _ref$textPerPage,\n      leftContent = _ref.leftContent,\n      rightContent = _ref.rightContent,\n      onChangePageValue = _ref.onChangePageValue,\n      onChangePerPageValue = _ref.onChangePerPageValue,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPageValue = _useState2[1];\n    var _useState3 = useState(perPage),\n      _useState4 = _slicedToArray(_useState3, 2),\n      perPageValue = _useState4[0],\n      setPerPageValue = _useState4[1];\n    var _useState5 = useState(value),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pages = _useState6[0],\n      setPagesValue = _useState6[1];\n    var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      sections = _useState8[0],\n      setSections = _useState8[1];\n    var typeClass = classes[\"\".concat(type, \"Type\")];\n    var roundedClass = pilled ? 'circle-circle' : 'square-square';\n    var withHasPerPageSelect = hasPerPage ? classes.withHasPerPageSelect : undefined;\n    var withHasQuickJump = hasQuickJump ? classes.withHasQuickJump : undefined;\n    var disabled = disabledPages.map(function (el) {\n      return isNumber(el) ? Number(el) : null;\n    });\n    var handlerSetPages = function handlerSetPages(newPerPage) {\n      setPagesValue(Math.ceil(count / (newPerPage || (hasPerPage ? defaultValues.perPage : 1))));\n    };\n    var handlerSetPage = function handlerSetPage(newPageValue) {\n      var pageValue = newPageValue !== null && newPageValue !== void 0 ? newPageValue : defaultValues.value;\n      if (pageValue > pages) {\n        pageValue = pages;\n      }\n      if (pageValue < 1) {\n        pageValue = 1;\n      }\n      if (disabled.includes(pageValue)) {\n        return;\n      }\n      setPageValue(pageValue);\n      onChangePageValue === null || onChangePageValue === void 0 || onChangePageValue(pageValue);\n    };\n    var handlerSetPerPage = function handlerSetPerPage(newPerPageValue) {\n      handlerSetPage(1);\n      setPerPageValue(newPerPageValue);\n      onChangePerPageValue === null || onChangePerPageValue === void 0 || onChangePerPageValue(newPerPageValue);\n      handlerSetPages(newPerPageValue);\n    };\n    var isActiveButton = function isActiveButton(checkPage) {\n      return page === checkPage ? classes.paginationPageButtonActive : '';\n    };\n    useEffect(function () {\n      handlerSetPages(perPage);\n    }, [perPage, count, handlerSetPages]);\n    useEffect(function () {\n      handlerSetPage(value);\n    }, [value]);\n    useEffect(function () {\n      setSections(getSections(page, pages, slots));\n    }, [page, slots, pages, setSections, getSections]);\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      size: size,\n      view: view,\n      viewCurrentPage: viewCurrentPage,\n      className: cx(classes.wrapper, typeClass),\n      ref: ref\n    }, rest), /*#__PURE__*/React.createElement(PaginationRoot, {\n      className: typeClass\n    }, /*#__PURE__*/React.createElement(PaginationPages, null, leftContent && /*#__PURE__*/React.createElement(PaginationButtonGroup, {\n      isCommonButtonStyles: isCommonButtonStyles\n    }, leftContent), sections && sections.map(function (section, indexSection) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, indexSection !== 0 && (_PaginationShorter || (_PaginationShorter = /*#__PURE__*/React.createElement(PaginationShorter, {\n        stretching: \"fixed\",\n        disabled: true\n      }, \"...\"))), /*#__PURE__*/React.createElement(PaginationSection, {\n        key: indexSection\n      }, section.map(function (pageValue) {\n        return /*#__PURE__*/React.createElement(PaginationButton, {\n          square: square,\n          pin: roundedClass,\n          key: pageValue,\n          onClick: function onClick() {\n            return handlerSetPage(pageValue);\n          },\n          disabled: disabled.includes(pageValue),\n          className: cx(classes.paginationPageButton, isActiveButton(pageValue))\n        }, pageValue);\n      })));\n    }), rightContent && /*#__PURE__*/React.createElement(PaginationButtonGroup, {\n      isCommonButtonStyles: isCommonButtonStyles\n    }, rightContent)), /*#__PURE__*/React.createElement(PaginationActions, {\n      className: cx(classes.actions, typeClass, withHasPerPageSelect, withHasQuickJump)\n    }, hasQuickJump && /*#__PURE__*/React.createElement(PaginationQuickJumpToPage, {\n      placeholderQuickJump: placeholderQuickJump,\n      textQuickJump: textQuickJump,\n      onChangeValue: handlerSetPage\n    }), hasPerPage && /*#__PURE__*/React.createElement(PaginationSelectPerPage, {\n      textPerPage: textPerPage,\n      value: perPageValue,\n      valuesList: perPageList,\n      onChangeValue: handlerSetPerPage\n    }))));\n  });\n};\nexport var paginationConfig = {\n  name: 'Pagination',\n  tag: 'div',\n  layout: paginationRoot,\n  base: '',\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    },\n    type: {\n      css: typeCSS\n    }\n  },\n  defaults: {\n    view: 'clear',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}