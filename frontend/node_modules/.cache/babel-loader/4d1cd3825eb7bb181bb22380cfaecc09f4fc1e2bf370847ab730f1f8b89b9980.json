{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar _excluded = [\"size\", \"name\", \"url\", \"customText\", \"status\", \"className\", \"focused\", \"isScalable\", \"statusLabels\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useMemo } from 'react';\nimport styled from 'styled-components';\nimport { component, mergeConfig } from '../../engines';\nimport { cx } from '../../utils';\nimport { indicatorConfig, indicatorTokens } from '../Indicator';\nimport { classes, tokens } from './Avatar.tokens';\nimport { base, Wrapper, Image, StatusIcon, Text } from './Avatar.styles';\nimport { base as viewCSS } from './variations/_size/base';\nimport { base as focusedCSS } from './variations/_focused/base';\nimport { getInitialsForName } from './utils';\nvar StatusLabelsDefault = {\n  active: 'Активен',\n  inactive: 'Неактивен'\n};\nvar getAvatarContent = function getAvatarContent(_ref) {\n  var customText = _ref.customText,\n    url = _ref.url,\n    initials = _ref.initials,\n    name = _ref.name;\n  if (customText) {\n    return /*#__PURE__*/React.createElement(Text, null, customText);\n  }\n  if (url) {\n    return /*#__PURE__*/React.createElement(Image, {\n      src: url,\n      alt: name\n    });\n  }\n  return /*#__PURE__*/React.createElement(Text, null, initials);\n};\nvar getAriaLabel = function getAriaLabel(_ref2) {\n  var url = _ref2.url,\n    name = _ref2.name,\n    status = _ref2.status,\n    ariaLabelProp = _ref2['aria-label'],\n    statusLabels = _ref2.statusLabels;\n  if (!url) {\n    return;\n  }\n\n  // INFO: включаем aria-label чтобы озвучить что на изображении\n  var ariaLabel = !ariaLabelProp || ariaLabelProp.trim() === '' ? name : ariaLabelProp;\n  return status ? \"\".concat(ariaLabel, \". \").concat(statusLabels[status]) : ariaLabel;\n};\nvar mergedConfig = /*#__PURE__*/mergeConfig(indicatorConfig);\nvar Indicator = /*#__PURE__*/component(mergedConfig);\nvar StyledIndicator = /*#__PURE__*/styled(Indicator).withConfig({\n  componentId: \"plasma-new-hope__sc-p4w0wq-0\"\n})([\"\", \":var(\", \");\", \":\", \"\"], indicatorTokens.size, tokens.statusIconSize, indicatorTokens.color, function (_ref3) {\n  var status = _ref3.status;\n  return status === 'active' ? \"var(\".concat(tokens.statusOnlineColor, \")\") : \"var(\".concat(tokens.statusOfflineColor, \")\");\n});\nexport var avatarRoot = function avatarRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    var avatarSize = props.size,\n      name = props.name,\n      url = props.url,\n      customText = props.customText,\n      status = props.status,\n      className = props.className,\n      _props$focused = props.focused,\n      focused = _props$focused === void 0 ? true : _props$focused,\n      isScalable = props.isScalable,\n      _props$statusLabels = props.statusLabels,\n      statusLabels = _props$statusLabels === void 0 ? StatusLabelsDefault : _props$statusLabels,\n      rest = _objectWithoutProperties(props, _excluded);\n    var initials = useMemo(function () {\n      return getInitialsForName(name);\n    }, [name]);\n    var ariaLabel = getAriaLabel(_objectSpread(_objectSpread({}, props), {}, {\n      statusLabels: statusLabels\n    }));\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      ref: ref,\n      size: avatarSize,\n      className: cx(classes.avatarItem, className),\n      \"aria-label\": ariaLabel,\n      focused: focused\n    }, rest), /*#__PURE__*/React.createElement(Wrapper, {\n      isScalable: isScalable\n    }, getAvatarContent({\n      customText: customText,\n      url: url,\n      initials: initials,\n      name: name\n    })), status && /*#__PURE__*/React.createElement(StatusIcon, null, /*#__PURE__*/React.createElement(StyledIndicator, {\n      \"aria-label\": statusLabels[status],\n      status: status\n    })));\n  });\n};\nexport var avatarConfig = {\n  name: 'Avatar',\n  tag: 'div',\n  layout: avatarRoot,\n  base: base,\n  variations: {\n    size: {\n      css: viewCSS\n    },\n    focused: {\n      css: focusedCSS\n    }\n  },\n  defaults: {\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}