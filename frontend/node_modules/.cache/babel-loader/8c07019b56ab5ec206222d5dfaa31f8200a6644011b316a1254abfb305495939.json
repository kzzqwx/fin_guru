{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { cx } from '../../utils';\nimport { base, CellLeft, CellRight, CellContentWrapper, CellContent } from './Cell.styles';\nimport { classes } from './Cell.tokens';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { CellTextbox } from './ui/CellTextbox/CellTextbox';\nexport var cellRoot = function cellRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {\n    var size = _ref.size,\n      view = _ref.view,\n      contentLeft = _ref.contentLeft,\n      contentRight = _ref.contentRight,\n      _ref$alignContentLeft = _ref.alignContentLeft,\n      alignContentLeft = _ref$alignContentLeft === void 0 ? 'center' : _ref$alignContentLeft,\n      _ref$alignContentRigh = _ref.alignContentRight,\n      alignContentRight = _ref$alignContentRigh === void 0 ? 'center' : _ref$alignContentRigh,\n      children = _ref.children,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      label = _ref.label,\n      description = _ref.description,\n      content = _ref.content,\n      _ref$stretching = _ref.stretching,\n      stretching = _ref$stretching === void 0 ? 'filled' : _ref$stretching;\n    var stretchingClass = classes[\"\".concat(stretching, \"Stretching\")];\n\n    // Импорт  старых свойств\n    var titleText = title || description;\n    var contentLeftDeprecated = contentLeft || content;\n    return /*#__PURE__*/React.createElement(Root, {\n      ref: outerRootRef,\n      size: size,\n      view: view,\n      className: cx(stretchingClass, classes.cellRoot)\n    }, contentLeftDeprecated && /*#__PURE__*/React.createElement(CellLeft, {\n      align: alignContentLeft\n    }, contentLeftDeprecated), /*#__PURE__*/React.createElement(CellContentWrapper, null, /*#__PURE__*/React.createElement(CellContent, null, titleText || subtitle || label ? /*#__PURE__*/React.createElement(CellTextbox, {\n      label: label,\n      title: titleText,\n      subtitle: subtitle\n    }) : children), contentRight && /*#__PURE__*/React.createElement(CellRight, {\n      align: alignContentRight\n    }, contentRight)));\n  });\n};\nexport var cellConfig = {\n  name: 'Cell',\n  tag: 'div',\n  layout: cellRoot,\n  base: base,\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    }\n  },\n  defaults: {\n    view: 'default',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}