{"ast":null,"code":"var _excluded = [\"status\"],\n  _excluded2 = [\"items\", \"interactionType\", \"actionIcon\", \"itemSize\", \"isGrabbing\", \"maxHeight\", \"onItemAction\", \"onItemClick\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { memo, useMemo } from 'react';\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc';\nimport styled, { css } from 'styled-components';\nimport { PreviewGalleryItemError } from './PreviewGalleryItemError';\nimport { PreviewGalleryItemBase } from './PreviewGalleryItemBase';\nimport { PreviewGalleryItemWithTooltip } from './PreviewGalleryItemWithTooltip';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('PreviewGallery/PreviewGalleryItems');\nexport var StyledRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-web-core__sc-av4s1g-0\"\n})([\"display:grid;grid-template-columns:repeat(3,1fr);gap:0.5rem;cursor:pointer;\", \" \", \"\"], function (_ref) {\n  var isGrabbing = _ref.isGrabbing;\n  return isGrabbing && css([\"cursor:grabbing;\"]);\n}, function (_ref2) {\n  var maxHeight = _ref2.maxHeight;\n  return maxHeight && css([\"max-height:\", \"px;overflow:auto;\"], maxHeight);\n});\nvar PreviewGalleryItem = /*#__PURE__*/memo( /*#__PURE__*/SortableElement(function (_ref3) {\n  var status = _ref3.status,\n    itemRest = _objectWithoutProperties(_ref3, _excluded);\n  return status === 'error' ? /*#__PURE__*/React.createElement(PreviewGalleryItemError, itemRest) : /*#__PURE__*/React.createElement(PreviewGalleryItemBase, itemRest);\n}));\n\n/**\n * Компонент со списком превью изображений.\n */\nexport var PreviewGalleryListItems = /*#__PURE__*/SortableContainer(function (_ref4) {\n  var _ref4$items = _ref4.items,\n    items = _ref4$items === void 0 ? [] : _ref4$items,\n    interactionType = _ref4.interactionType,\n    actionIcon = _ref4.actionIcon,\n    itemSize = _ref4.itemSize,\n    isGrabbing = _ref4.isGrabbing,\n    maxHeight = _ref4.maxHeight,\n    onItemAction = _ref4.onItemAction,\n    onItemClick = _ref4.onItemClick,\n    rest = _objectWithoutProperties(_ref4, _excluded2);\n  var isDragDisabled = interactionType === 'selectable';\n\n  // deleteIcon не указан в зависимости, т.к. предполагается,\n  // что данный пропс не будет меняться динамически\n  var iconMemo = useMemo(function () {\n    return actionIcon;\n  }, []);\n  return /*#__PURE__*/React.createElement(StyledRoot, _extends({\n    isGrabbing: isGrabbing,\n    maxHeight: maxHeight\n  }, rest), items.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(PreviewGalleryItemWithTooltip, {\n      tooltip: item.tooltip\n    }, /*#__PURE__*/React.createElement(PreviewGalleryItem, _extends({\n      disabled: isDragDisabled,\n      key: item.id,\n      actionIcon: iconMemo,\n      index: index,\n      interactionType: interactionType,\n      itemSize: itemSize,\n      onItemAction: onItemAction,\n      onItemClick: onItemClick\n    }, item)));\n  }));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}