{"ast":null,"code":"var _NoScroll;\nvar _excluded = [\"id\", \"withAnimation\", \"onClose\", \"onOverlayClick\", \"onEscKeyDown\", \"closeOnEsc\", \"closeOnOverlayClick\", \"withBlur\", \"initialFocusRef\", \"focusAfterRef\", \"zIndex\", \"popupInfo\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport { PopupBase } from '../PopupBase/PopupBase';\nimport { useFocusTrap, useUniqId } from '../../hooks';\nimport { ModalOverlay } from './ModalOverlay';\nimport { useModal } from './hooks';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('ModalBase/ModalBase');\nvar NoScroll = /*#__PURE__*/createGlobalStyle([\"body{overflow-y:hidden;}\"]);\n\n/**\n * ModalBase.\n * Управляет показом/скрытием, подложкой и анимацией визуальной части модального окна.\n */\nexport var ModalBase = function ModalBase(_ref) {\n  var id = _ref.id,\n    withAnimation = _ref.withAnimation,\n    onClose = _ref.onClose,\n    onOverlayClick = _ref.onOverlayClick,\n    onEscKeyDown = _ref.onEscKeyDown,\n    _ref$closeOnEsc = _ref.closeOnEsc,\n    closeOnEsc = _ref$closeOnEsc === void 0 ? true : _ref$closeOnEsc,\n    _ref$closeOnOverlayCl = _ref.closeOnOverlayClick,\n    closeOnOverlayClick = _ref$closeOnOverlayCl === void 0 ? true : _ref$closeOnOverlayCl,\n    withBlur = _ref.withBlur,\n    initialFocusRef = _ref.initialFocusRef,\n    focusAfterRef = _ref.focusAfterRef,\n    zIndex = _ref.zIndex,\n    popupInfo = _ref.popupInfo,\n    children = _ref.children,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var trapRef = useFocusTrap(true, initialFocusRef, focusAfterRef);\n  var uniqId = useUniqId();\n  var innerId = id || uniqId;\n  var _useModal = useModal({\n      id: innerId,\n      closeOnEsc: closeOnEsc,\n      onEscKeyDown: onEscKeyDown,\n      onClose: onClose,\n      popupInfo: popupInfo\n    }),\n    modalInfo = _useModal.modalInfo;\n  return /*#__PURE__*/React.createElement(PopupBase, _extends({\n    id: id,\n    ref: trapRef,\n    popupInfo: modalInfo,\n    withAnimation: withAnimation,\n    zIndex: zIndex,\n    overlay: /*#__PURE__*/React.createElement(ModalOverlay, {\n      id: innerId,\n      withBlur: withBlur,\n      onOverlayClick: onOverlayClick,\n      onClose: onClose,\n      zIndex: zIndex,\n      closeOnOverlayClick: closeOnOverlayClick\n    })\n  }, rest), _NoScroll || (_NoScroll = /*#__PURE__*/React.createElement(NoScroll, null)), children);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}