{"ast":null,"code":"var _excluded = [\"id\", \"isOpen\", \"placement\", \"offset\", \"frame\", \"children\", \"overlay\", \"role\", \"zIndex\", \"popupInfo\", \"withAnimation\", \"className\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport React, { forwardRef, useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useForkRef, safeUseId } from '@salutejs/plasma-core';\nimport { cx } from '../../utils';\nimport { POPUP_PORTAL_ID } from './PopupContext';\nimport { PopupRoot } from './PopupRoot';\nimport { usePopup } from './hooks';\nimport { classes } from './Popup.tokens';\nexport var handlePosition = function handlePosition(placement, offset) {\n  var x = '0rem';\n  var y = '0rem';\n  if (offset) {\n    var _offset = _slicedToArray(offset, 2),\n      _x = _offset[0],\n      _y = _offset[1];\n    x = typeof _x === 'number' ? \"\".concat(_x, \"rem\") : _x;\n    y = typeof _y === 'number' ? \"\".concat(_y, \"rem\") : _y;\n  }\n  if (!placement || placement === 'center') {\n    return {\n      left: \"calc(50% + \".concat(x, \")\"),\n      top: \"calc(50% - \".concat(y, \")\"),\n      transform: 'translate(-50%, -50%)'\n    };\n  }\n  var left;\n  var right;\n  var top;\n  var bottom;\n  var transform;\n  var placements = placement.split('-');\n  placements.forEach(function (placement) {\n    switch (placement) {\n      case 'left':\n        left = x;\n        break;\n      case 'right':\n        right = x;\n        break;\n      case 'top':\n        top = y;\n        break;\n      case 'bottom':\n        bottom = y;\n        break;\n      default:\n        break;\n    }\n  });\n  var isCenteredX = left === undefined && right === undefined;\n  var isCenteredY = top === undefined && bottom === undefined;\n  if (isCenteredX) {\n    transform = 'translateX(-50%)';\n  }\n  if (isCenteredY) {\n    transform = 'translateY(-50%)';\n  }\n  return {\n    left: isCenteredX ? \"calc(50% + \".concat(x, \")\") : left,\n    right: right,\n    top: isCenteredY ? \"calc(50% - \".concat(y, \")\") : top,\n    bottom: bottom,\n    transform: transform\n  };\n};\n\n/**\n * Базовый копмонент Popup.\n */\nexport var popupRoot = function popupRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {\n    var id = _ref.id,\n      _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'center' : _ref$placement,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? [0, 0] : _ref$offset,\n      _ref$frame = _ref.frame,\n      frame = _ref$frame === void 0 ? 'document' : _ref$frame,\n      children = _ref.children,\n      overlay = _ref.overlay,\n      role = _ref.role,\n      zIndex = _ref.zIndex,\n      popupInfo = _ref.popupInfo,\n      _ref$withAnimation = _ref.withAnimation,\n      withAnimation = _ref$withAnimation === void 0 ? false : _ref$withAnimation,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var uniqId = safeUseId();\n    var innerId = id || uniqId;\n    var _usePopup = usePopup({\n        isOpen: isOpen,\n        id: innerId,\n        popupInfo: popupInfo,\n        withAnimation: withAnimation\n      }),\n      isVisible = _usePopup.isVisible,\n      animationInfo = _usePopup.animationInfo,\n      setVisible = _usePopup.setVisible;\n    var portalRef = useRef(null);\n    var contentRef = useRef(null);\n    var innerRef = useForkRef(contentRef, outerRootRef);\n    var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      forceRender = _useState2[1];\n    useEffect(function () {\n      var portal = document.getElementById(POPUP_PORTAL_ID);\n      if (typeof frame !== 'string' && frame && frame.current) {\n        portal = frame.current;\n      }\n      if (!portal) {\n        portal = document.createElement('div');\n        portal.setAttribute('id', POPUP_PORTAL_ID);\n        /**\n         * Нужно для того, чтобы во фрейме не происходило скачков контента\n         * при анимации через transform, если есть элемент с шириной/высотой в 100% (Overlay)\n         */\n        portal.style.width = '0';\n        if (typeof frame === 'string' && frame !== 'document') {\n          var _document$getElementB;\n          (_document$getElementB = document.getElementById(frame)) === null || _document$getElementB === void 0 || _document$getElementB.appendChild(portal);\n        } else {\n          document.body.appendChild(portal);\n        }\n      }\n      portalRef.current = portal;\n\n      /**\n       * Изменение стейта нужно для того, чтобы Popup\n       * отобразился после записи DOM элемента в portalRef.current\n       */\n      forceRender(true);\n    }, []);\n    if (!isVisible && !isOpen) {\n      return null;\n    }\n    var cls = cx(className, animationInfo !== null && animationInfo !== void 0 && animationInfo.endAnimation ? classes.endAnimation : '', animationInfo !== null && animationInfo !== void 0 && animationInfo.endTransition ? classes.endTransition : '');\n    return /*#__PURE__*/React.createElement(React.Fragment, null, portalRef.current && /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(Root, _extends({\n      className: cls\n    }, rest), overlay, /*#__PURE__*/React.createElement(PopupRoot, {\n      id: innerId,\n      ref: innerRef,\n      position: handlePosition(placement, offset),\n      frame: frame,\n      zIndex: zIndex,\n      animationInfo: animationInfo,\n      setVisible: setVisible\n    }, children)), portalRef.current));\n  });\n};\nexport var popupConfig = {\n  name: 'Popup',\n  tag: 'div',\n  layout: popupRoot,\n  base: '',\n  variations: {},\n  defaults: {}\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}