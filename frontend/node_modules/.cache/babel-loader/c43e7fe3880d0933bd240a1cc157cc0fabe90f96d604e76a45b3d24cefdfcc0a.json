{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { getDateFromValue, getNextDate, getPrevDate, getStartYear } from '../utils';\nimport { ActionType } from './types';\nexport var getInitialState = function getInitialState(value, size, calendarState) {\n  var initDate = value || new Date();\n  var date = getDateFromValue(initDate);\n  return {\n    date: _objectSpread(_objectSpread({}, date), {}, {\n      day: value !== undefined ? date.day : 0\n    }),\n    startYear: getStartYear(date.year),\n    calendarState: calendarState,\n    size: size\n  };\n};\nexport var reducer = function reducer(state, action) {\n  switch (action.type) {\n    case ActionType.PREVIOUS_MONTH:\n      {\n        var _action$payload = action.payload,\n          year = _action$payload.year,\n          monthIndex = _action$payload.monthIndex;\n        var _getPrevDate = getPrevDate(year, monthIndex),\n          _getPrevDate2 = _slicedToArray(_getPrevDate, 2),\n          prevYear = _getPrevDate2[0],\n          prevMonthIndex = _getPrevDate2[1];\n        return _objectSpread(_objectSpread({}, state), {}, {\n          date: {\n            day: state.date.day,\n            monthIndex: prevMonthIndex,\n            year: prevYear\n          }\n        });\n      }\n    case ActionType.NEXT_MONTH:\n      {\n        var _action$payload2 = action.payload,\n          _monthIndex = _action$payload2.monthIndex,\n          _year = _action$payload2.year;\n        var _getNextDate = getNextDate(_year, _monthIndex),\n          _getNextDate2 = _slicedToArray(_getNextDate, 2),\n          nextYear = _getNextDate2[0],\n          nextMonthIndex = _getNextDate2[1];\n        return _objectSpread(_objectSpread({}, state), {}, {\n          date: {\n            day: state.date.day,\n            monthIndex: nextMonthIndex,\n            year: nextYear\n          }\n        });\n      }\n    case ActionType.PREVIOUS_YEAR:\n      {\n        var step = action.payload.step;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          startYear: state.startYear - step,\n          date: {\n            day: state.date.day,\n            monthIndex: state.date.monthIndex,\n            year: state.date.year - step\n          }\n        });\n      }\n    case ActionType.NEXT_YEAR:\n      {\n        var _step = action.payload.step;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          startYear: state.startYear + _step,\n          date: {\n            day: state.date.day,\n            monthIndex: state.date.monthIndex,\n            year: state.date.year + _step\n          }\n        });\n      }\n    case ActionType.PREVIOUS_START_YEAR:\n      {\n        var yearsCount = action.payload.yearsCount;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          startYear: state.startYear - yearsCount\n        });\n      }\n    case ActionType.NEXT_START_YEAR:\n      {\n        var _yearsCount = action.payload.yearsCount;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          startYear: state.startYear + _yearsCount\n        });\n      }\n    case ActionType.UPDATE_DATE:\n      {\n        var value = action.payload.value;\n        var date = getDateFromValue(value);\n        var startYear = getStartYear(value.getFullYear());\n        return _objectSpread(_objectSpread({}, state), {}, {\n          date: date,\n          startYear: startYear\n        });\n      }\n    case ActionType.UPDATE_MONTH:\n      {\n        var _action$payload3 = action.payload,\n          calendarState = _action$payload3.calendarState,\n          _monthIndex2 = _action$payload3.monthIndex,\n          size = _action$payload3.size;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          size: size,\n          calendarState: calendarState,\n          date: {\n            day: state.date.day,\n            monthIndex: _monthIndex2,\n            year: state.date.year\n          }\n        });\n      }\n    case ActionType.UPDATE_YEAR:\n      {\n        var _action$payload4 = action.payload,\n          _calendarState = _action$payload4.calendarState,\n          _year2 = _action$payload4.year;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          calendarState: _calendarState,\n          date: {\n            day: state.date.day,\n            monthIndex: state.date.monthIndex,\n            year: _year2\n          }\n        });\n      }\n    case ActionType.UPDATE_CALENDAR_STATE:\n      {\n        var _action$payload5 = action.payload,\n          _calendarState2 = _action$payload5.calendarState,\n          _size = _action$payload5.size;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          calendarState: _calendarState2,\n          size: _size || state.size\n        });\n      }\n    default:\n      return state;\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}