{"ast":null,"code":"var _excluded = [\"id\", \"text\", \"isOpen\", \"isVisible\", \"hasArrow\", \"arrow\", \"animated\", \"offset\", \"minWidth\", \"maxWidth\", \"placement\", \"usePortal\", \"target\", \"children\", \"onDismiss\", \"view\", \"size\", \"contentLeft\", \"zIndex\", \"className\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useEffect, forwardRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { component } from '../../engines';\nimport { popoverClasses, popoverConfig, popoverTokens } from '../Popover';\nimport { cx } from '../../utils';\nimport { StyledContentLeft, TooltipRoot } from './Tooltip.styles';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { classes, tokens } from './Tooltip.tokens';\nvar ESCAPE_KEYCODE = 27;\nvar getStringValue = function getStringValue(value) {\n  return typeof value === 'number' ? \"\".concat(value, \"rem\") : value;\n};\nvar Popover = /*#__PURE__*/component(popoverConfig);\nvar StyledPopover = /*#__PURE__*/styled(Popover).withConfig({\n  componentId: \"plasma-new-hope__sc-dj06kz-0\"\n})([\"\", \":var(\", \");\", \":var(\", \");\", \":var(\", \");\", \":var(\", \");\", \":var(\", \");\", \":var(\", \");&.\", \" .\", \"{transition:opacity 200ms ease-in-out,visibility 200ms ease-in-out;}\"], popoverTokens.arrowMaskWidth, tokens.arrowMaskWidth, popoverTokens.arrowMaskHeight, tokens.arrowMaskHeight, popoverTokens.arrowMaskImage, tokens.arrowMaskImage, popoverTokens.arrowBackground, tokens.arrowBackground, popoverTokens.arrowHeight, tokens.arrowHeight, popoverTokens.arrowEdgeMargin, tokens.arrowEdgeMargin, classes.animated, popoverClasses.root);\n\n/**\n * Компонент для текстовых подсказок. Основное предназначение — подписи к блокам.\n */\n\nexport var tooltipRoot = function tooltipRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (_ref, outerRef) {\n    var id = _ref.id,\n      text = _ref.text,\n      isOpen = _ref.isOpen,\n      isVisible = _ref.isVisible,\n      _ref$hasArrow = _ref.hasArrow,\n      hasArrow = _ref$hasArrow === void 0 ? true : _ref$hasArrow,\n      arrow = _ref.arrow,\n      animated = _ref.animated,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? [0, 8] : _ref$offset,\n      minWidth = _ref.minWidth,\n      maxWidth = _ref.maxWidth,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$usePortal = _ref.usePortal,\n      usePortal = _ref$usePortal === void 0 ? true : _ref$usePortal,\n      target = _ref.target,\n      children = _ref.children,\n      onDismiss = _ref.onDismiss,\n      view = _ref.view,\n      size = _ref.size,\n      contentLeft = _ref.contentLeft,\n      _ref$zIndex = _ref.zIndex,\n      zIndex = _ref$zIndex === void 0 ? '9200' : _ref$zIndex,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n\n    // TODO убрать после отказа от старого API\n    var innerIsOpen = isVisible || isOpen;\n    var innerHasArrow = arrow || hasArrow;\n    var showTooltip = innerIsOpen && Boolean(text === null || text === void 0 ? void 0 : text.length);\n    var animatedClass = animated ? classes.animated : undefined;\n    useEffect(function () {\n      var onKeyDown = function onKeyDown(event) {\n        if (event.keyCode === ESCAPE_KEYCODE) {\n          onDismiss === null || onDismiss === void 0 || onDismiss();\n        }\n      };\n      window.addEventListener('keydown', onKeyDown);\n      return function () {\n        window.removeEventListener('keydown', onKeyDown);\n      };\n    }, []);\n    var withContentLeft = contentLeft ? classes.hasContentLeft : undefined;\n    return /*#__PURE__*/React.createElement(StyledPopover, _extends({\n      isOpen: showTooltip,\n      placement: placement,\n      offset: offset,\n      zIndex: zIndex,\n      target: target || children,\n      usePortal: usePortal,\n      hasArrow: innerHasArrow,\n      \"aria-hidden\": !innerIsOpen,\n      \"aria-live\": \"polite\",\n      role: \"tooltip\",\n      className: cx(ref === null || ref === void 0 ? void 0 : ref.classList.toString(), animatedClass, className)\n      // INFO: Прокидываем стили для Popover из Root Tooltip-а\n    }, rest), /*#__PURE__*/React.createElement(Root, {\n      view: view,\n      size: size,\n      ref: setRef\n    }, /*#__PURE__*/React.createElement(TooltipRoot, {\n      ref: outerRef,\n      id: id,\n      className: cx(withContentLeft),\n      maxWidth: getStringValue(maxWidth),\n      minWidth: getStringValue(minWidth)\n    }, contentLeft && /*#__PURE__*/React.createElement(StyledContentLeft, null, contentLeft), text)));\n  });\n};\nexport var tooltipConfig = {\n  name: 'Tooltip',\n  tag: 'div',\n  layout: tooltipRoot,\n  base: '',\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    }\n  },\n  defaults: {\n    view: 'default',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}