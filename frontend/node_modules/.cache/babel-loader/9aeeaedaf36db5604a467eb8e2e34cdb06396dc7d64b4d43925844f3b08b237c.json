{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport styled from 'styled-components';\nimport { ButtonRoot, getButtonSizesMixin, buttonSizes } from '@salutejs/plasma-core';\nimport { bodyLBold, bodyMBold, bodySBold, bodyXSBold, bodyXS } from '@salutejs/plasma-typo';\nimport { buttonViews } from '../../Button.props';\nvar buttonTypography = {\n  l: bodyLBold,\n  m: bodyMBold,\n  s: bodySBold,\n  xs: bodyXSBold,\n  xxs: bodyXS\n};\nvar buttonSizesB2C = /*#__PURE__*/_objectSpread( /*#__PURE__*/_objectSpread({}, buttonSizes), {}, {\n  xs: {\n    height: '2rem',\n    paddingY: '0.5625rem',\n    paddingX: '0.75rem',\n    paddingContentX: '0.75rem',\n    paddingStretchX: '0.75rem',\n    radius: '0.5rem',\n    radiusCircle: '1rem'\n  },\n  xxs: {\n    height: '1.5rem',\n    paddingY: '0.3125rem',\n    paddingX: '0.625rem',\n    paddingContentX: '0.625rem',\n    paddingStretchX: '0.625rem',\n    radius: '0.375rem',\n    radiusCircle: '0.75rem'\n  }\n});\nvar applySizes = /*#__PURE__*/getButtonSizesMixin(buttonSizesB2C, buttonTypography);\nexport var ButtonB2C = /*#__PURE__*/styled(ButtonRoot).withConfig({\n  componentId: \"plasma-web-core__sc-dz1nyk-0\"\n})([\"\", \" \", \"\"], applySizes, function (_ref) {\n  var view = _ref.view;\n  return buttonViews[view];\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}