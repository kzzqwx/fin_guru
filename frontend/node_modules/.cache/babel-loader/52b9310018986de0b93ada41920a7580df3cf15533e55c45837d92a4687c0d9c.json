{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar _excluded = [\"min\", \"max\", \"value\", \"disabled\", \"onChangeCommitted\", \"onChange\", \"ariaLabel\", \"label\", \"labelContentLeft\", \"showRangeValues\", \"showCurrentValue\", \"hideMinValueDiff\", \"hideMaxValueDiff\", \"labelPlacement\", \"rangeValuesPlacement\", \"multipleStepSize\", \"size\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { useCallback, useEffect, useState, useRef } from 'react';\nimport { SliderBase } from '../SliderBase/SliderBase';\nimport { Handler } from '../../ui';\nimport { sizeData } from '../../utils';\nimport { cx, isNumber } from '../../../../utils';\nimport { classes } from '../../Slider.tokens';\nimport { Label, LabelContentLeft, LabelWrapper, SingleWrapper, SliderBaseWrapper, StyledRangeValue } from './Single.styles';\nexport var SingleSlider = function SingleSlider(_ref) {\n  var min = _ref.min,\n    max = _ref.max,\n    value = _ref.value,\n    disabled = _ref.disabled,\n    onChangeCommitted = _ref.onChangeCommitted,\n    onChange = _ref.onChange,\n    ariaLabel = _ref.ariaLabel,\n    label = _ref.label,\n    labelContentLeft = _ref.labelContentLeft,\n    showRangeValues = _ref.showRangeValues,\n    showCurrentValue = _ref.showCurrentValue,\n    hideMinValueDiff = _ref.hideMinValueDiff,\n    hideMaxValueDiff = _ref.hideMaxValueDiff,\n    _ref$labelPlacement = _ref.labelPlacement,\n    labelPlacement = _ref$labelPlacement === void 0 ? 'outer' : _ref$labelPlacement,\n    _ref$rangeValuesPlace = _ref.rangeValuesPlacement,\n    rangeValuesPlacement = _ref$rangeValuesPlace === void 0 ? 'outer' : _ref$rangeValuesPlace,\n    _ref$multipleStepSize = _ref.multipleStepSize,\n    multipleStepSize = _ref$multipleStepSize === void 0 ? 10 : _ref$multipleStepSize,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 'm' : _ref$size,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var _useState = useState({\n      xHandle: 0,\n      stepSize: 0,\n      railFillWidth: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    startOffset = _useState4[0],\n    setStartOffset = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    endOffset = _useState6[0],\n    setEndOffset = _useState6[1];\n  var _useState7 = useState(value),\n    _useState8 = _slicedToArray(_useState7, 2),\n    dragValue = _useState8[0],\n    setDragValue = _useState8[1];\n  var stepSize = state.stepSize;\n  var hasLabelContent = label || labelContentLeft;\n  var labelPlacementClass = labelPlacement === 'outer' ? classes.labelPlacementOuter : classes.labelPlacementInner;\n  var rangeValuesPlacementClass = rangeValuesPlacement === 'outer' ? classes.rangeValuesPlacementOuter : classes.rangeValuesPlacementInner;\n  var hideMinValueDiffClass = hideMinValueDiff && value - min <= hideMinValueDiff ? classes.hideMinValue : '';\n  var hideMaxValueDiffClass = hideMaxValueDiff && max - value <= hideMaxValueDiff ? classes.hideMaxValue : '';\n  var startLabelRef = useRef(null);\n  var endLabelRef = useRef(null);\n  var activeFirstValue = dragValue === min ? classes.activeRangeValue : undefined;\n  var activeSecondValue = dragValue === max ? classes.activeRangeValue : undefined;\n  useEffect(function () {\n    var localValue = Math.min(Math.max(value, min), max) - min;\n    if (rangeValuesPlacement === 'outer') {\n      var _startLabelRef$curren, _endLabelRef$current;\n      var startWidth = (_startLabelRef$curren = startLabelRef.current) === null || _startLabelRef$curren === void 0 ? void 0 : _startLabelRef$curren.offsetWidth;\n      if (isNumber(startWidth)) {\n        setStartOffset(Number(startWidth));\n      }\n      var endWidth = (_endLabelRef$current = endLabelRef.current) === null || _endLabelRef$current === void 0 ? void 0 : _endLabelRef$current.offsetWidth;\n      if (isNumber(endWidth)) {\n        setEndOffset(Number(endWidth));\n      }\n    } else {\n      setStartOffset(1);\n      setEndOffset(1);\n    }\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        xHandle: stepSize * localValue,\n        railFillWidth: stepSize * localValue\n      });\n    });\n  }, [value, labelPlacement, stepSize, rangeValuesPlacement, min, max, setStartOffset, setEndOffset]);\n  var setStepSize = useCallback(function (newStepSize) {\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        stepSize: newStepSize\n      });\n    });\n  }, [setState]);\n  var onHandleChange = function onHandleChange(handleValue, data) {\n    var newHandleXPosition = data.x;\n    var newValue = Math.round(handleValue);\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        railFillWidth: newHandleXPosition\n      });\n    });\n    if (onChange) {\n      onChange(newValue);\n    }\n    setDragValue(newValue);\n  };\n  var onHandleChangeCommitted = function onHandleChangeCommitted(handleValue, data) {\n    var newValue = Math.round(handleValue);\n    if (onChangeCommitted) {\n      onChangeCommitted(newValue);\n    }\n    setState(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, {\n        xHandle: data.lastX,\n        railFillWidth: data.lastX\n      });\n    });\n    setDragValue(newValue);\n  };\n  return /*#__PURE__*/React.createElement(SingleWrapper, {\n    className: labelPlacementClass\n  }, hasLabelContent && /*#__PURE__*/React.createElement(LabelWrapper, null, labelContentLeft && /*#__PURE__*/React.createElement(LabelContentLeft, null, labelContentLeft), label && /*#__PURE__*/React.createElement(Label, null, label)), /*#__PURE__*/React.createElement(SliderBaseWrapper, {\n    className: rangeValuesPlacementClass\n  }, showRangeValues && /*#__PURE__*/React.createElement(StyledRangeValue, {\n    ref: startLabelRef,\n    className: cx(hideMinValueDiffClass, activeFirstValue)\n  }, min), /*#__PURE__*/React.createElement(SliderBase, _extends({\n    min: min,\n    max: max,\n    disabled: disabled,\n    setStepSize: setStepSize,\n    onChange: onHandleChangeCommitted,\n    railFillWidth: state.railFillWidth,\n    settings: sizeData[size],\n    labelPlacement: labelPlacement,\n    rangeValuesPlacement: rangeValuesPlacement\n  }, rest), /*#__PURE__*/React.createElement(Handler, {\n    stepSize: state.stepSize,\n    onChangeCommitted: onHandleChangeCommitted,\n    onChange: onHandleChange,\n    xPosition: state.xHandle,\n    min: min,\n    max: max,\n    startOffset: startOffset,\n    endOffset: endOffset,\n    value: dragValue,\n    disabled: disabled,\n    ariaLabel: ariaLabel,\n    multipleStepSize: multipleStepSize,\n    showCurrentValue: showCurrentValue\n  })), showRangeValues && /*#__PURE__*/React.createElement(StyledRangeValue, {\n    ref: endLabelRef,\n    className: cx(classes.maxRangeValue, hideMaxValueDiffClass, activeSecondValue)\n  }, max)));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}