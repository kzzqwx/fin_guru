{"ast":null,"code":"var _excluded = [\"label\", \"title\", \"subTitle\", \"caption\", \"withBigTitle\", \"children\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as viewCSS } from './variations/_view/base';\nimport { BigTitle, Caption, Label, SubTitle, TextBoxRoot, Title } from './HeaderTitleWrapper.styles';\n\n/**\n * Компонент для отображения текста в скомпанованном блоке.\n */\nexport var headerTitleWrapperRoot = function headerTitleWrapperRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, outerRootRef) {\n    var label = props.label,\n      title = props.title,\n      subTitle = props.subTitle,\n      caption = props.caption,\n      withBigTitle = props.withBigTitle,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n    if (children) {\n      return /*#__PURE__*/React.createElement(Root, {\n        ref: outerRootRef\n      }, /*#__PURE__*/React.createElement(TextBoxRoot, rest, children));\n    }\n    var T = withBigTitle ? BigTitle : Title;\n    return /*#__PURE__*/React.createElement(Root, {\n      ref: outerRootRef\n    }, /*#__PURE__*/React.createElement(TextBoxRoot, rest, label && /*#__PURE__*/React.createElement(Label, null, label), title && /*#__PURE__*/React.createElement(T, null, title), subTitle && /*#__PURE__*/React.createElement(SubTitle, null, subTitle), caption && /*#__PURE__*/React.createElement(Caption, null, caption)));\n  });\n};\nexport var headerTitleWrapperConfig = {\n  name: 'HeaderTitleWrapper',\n  tag: 'div',\n  layout: headerTitleWrapperRoot,\n  base: '',\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    }\n  },\n  defaults: {\n    view: 'primary',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}