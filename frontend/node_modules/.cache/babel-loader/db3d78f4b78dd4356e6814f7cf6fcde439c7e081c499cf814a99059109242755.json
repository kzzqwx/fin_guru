{"ast":null,"code":"import { useCallback } from 'react';\nimport { getActionFromKey, getUpdatedIndex, Actions } from './utils';\nimport { useOnComboType } from './useOnComboType';\nexport var INITIAL_INDEX = 0;\n\n/**\n * Клавиатурная навигация для dropdown.\n * Работает для каждого instance dropdown, (popup) отдельно.\n */\nexport var useKeyboardNavigation = function useKeyboardNavigation(_ref) {\n  var items = _ref.items,\n    isOpen = _ref.isOpen,\n    _ref$index = _ref.index,\n    index = _ref$index === void 0 ? INITIAL_INDEX : _ref$index,\n    onToggle = _ref.onToggle,\n    onItemSelect = _ref.onItemSelect,\n    onIndexChange = _ref.onIndexChange;\n  var getIndexByTyping = useOnComboType({\n    index: index,\n    items: items\n  });\n  var onKeyDown = useCallback(function (event) {\n    if (!items.length) {\n      return;\n    }\n    var action = getActionFromKey(event, isOpen);\n    if (action === Actions.Last || action === Actions.First || action === Actions.Next || action === Actions.Previous || action === Actions.PageUp || action === Actions.PageDown) {\n      event.preventDefault();\n      onIndexChange === null || onIndexChange === void 0 || onIndexChange(getUpdatedIndex(action, index, items));\n    } else if (action === Actions.Select) {\n      event.stopPropagation();\n      event.preventDefault();\n      onItemSelect === null || onItemSelect === void 0 || onItemSelect(items[index], event);\n    } else if (action === Actions.Open) {\n      event.preventDefault();\n      onToggle === null || onToggle === void 0 || onToggle(true, event);\n    } else if (action === Actions.Close) {\n      event.preventDefault();\n      onToggle === null || onToggle === void 0 || onToggle(false, event);\n    } else if (action === Actions.Type) {\n      event.preventDefault();\n      var newIndex = getIndexByTyping(event.key);\n      if (newIndex !== undefined) {\n        onIndexChange === null || onIndexChange === void 0 || onIndexChange(newIndex);\n      }\n    }\n  }, [isOpen, index, items, onIndexChange, onToggle, getIndexByTyping]);\n  return {\n    onKeyDown: onKeyDown,\n    index: index\n  };\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}