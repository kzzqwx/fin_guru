{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { applyDisabled, applyBlur, applyEllipsis } from '../../mixins';\nimport { Spinner } from '../Spinner';\n/**\n * Корневой элемент для стилизации кнопки.\n * Должен быть передан в функцию `createButton`.\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Button/Button');\nexport var ButtonRoot = /*#__PURE__*/styled.button.withConfig({\n  componentId: \"plasma__sc-14cj1yw-0\"\n})([\"position:relative;display:inline-flex;align-items:center;box-sizing:border-box;justify-content:center;appearance:none;border:none;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);a&{text-decoration:none;}&:focus{outline:none;}\", \" \", \"\"], function (_ref) {\n  var isLoading = _ref.$isLoading;\n  return !isLoading && applyDisabled;\n}, applyBlur);\n\n/**\n * Элемент лоадера для кнопки.\n */\nexport var ButtonLoader = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-14cj1yw-1\"\n})([\"position:absolute;\"]);\n\n/**\n * Спиннер по умолчанию с фиксированной шириной.\n */\nexport var StyledSpinner = /*#__PURE__*/styled(Spinner).withConfig({\n  componentId: \"plasma__sc-14cj1yw-2\"\n})([\"width:1.375rem;\"]);\n\n/**\n * Обёртка для содержимого кнопки.\n */\nexport var ButtonContentWrapper = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-14cj1yw-3\"\n})([\"display:flex;align-items:inherit;justify-content:inherit;width:100%;\", \"\"], function (_ref2) {\n  var isLoading = _ref2.$isLoading;\n  return isLoading && 'opacity: 0;';\n});\n\n/**\n * A text wrapping element, that used when `text` prop is passed.\n * @private\n */\nexport var ButtonText = /*#__PURE__*/styled.span.withConfig({\n  componentId: \"plasma__sc-14cj1yw-4\"\n})([\"box-sizing:border-box;\", \" \", \" \", \"\"], applyEllipsis, function (_ref3) {\n  var isContentLeft = _ref3.$isContentLeft;\n  return isContentLeft && 'margin-left: 0.375rem;';\n}, function (_ref4) {\n  var isContentRight = _ref4.$isContentRight;\n  return isContentRight && 'margin-right: 0.375rem;';\n});\n\n/**\n * Базовая кнопка.\n * @deprecated\n */\nexport var Button = /*#__PURE__*/React.forwardRef(\n// eslint-disable-next-line prefer-arrow-callback\nfunction Button(props, ref) {\n  return /*#__PURE__*/React.createElement(ButtonRoot, _extends({\n    ref: ref\n  }, props));\n});\nButton.defaultProps = {\n  pin: 'square-square',\n  outlined: false\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}