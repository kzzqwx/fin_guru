{"ast":null,"code":"var _excluded = [\"lines\", \"width\", \"roundness\", \"size\"];\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DEFAULT_TEXT_SIZE } from './Skeleton';\nimport { LineSkeleton } from './LineSkeleton';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Skeleton/TextSkeleton');\nvar variousWidth = [7.58, 5.27, 13.54, 6.63, 0.28, 14.8, 0.33, 11.26, 14.1, 10.59, 3.38, 13.5, 7.71, 3.34, 7.96];\nvar StyledTextSkeleton = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-x4ekfh-0\"\n})([\"display:flex;flex-direction:column;width:100%;\"]);\n\n// TODO: https://github.com/salute-developers/plasma/issues/230\n\n/**\n * Компонент для создания плейсхолдера нескольких строк текста.\n * Размеры компонента задаются с помощью констант и соответствуют размерам [типографических элементов](/?path=/docs/).\n */\nexport var TextSkeleton = function TextSkeleton(_ref) {\n  var lines = _ref.lines,\n    width = _ref.width,\n    roundness = _ref.roundness,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? DEFAULT_TEXT_SIZE : _ref$size,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(StyledTextSkeleton, props, Array.from(Array(lines), function (_, i) {\n    var w;\n    if (width) {\n      // TODO; https://github.com/salute-developers/plasma/issues/230\n      w = width;\n    } else {\n      switch (true) {\n        // Последняя строка\n        case i === lines - 1 && lines !== 1:\n          w = 45 - variousWidth[i % variousWidth.length];\n          break;\n        // Единственная или первая из двух\n        case lines === 1 || lines === 2:\n          w = 100;\n          break;\n        default:\n          w = 100 - variousWidth[i % variousWidth.length];\n      }\n    }\n    return /*#__PURE__*/React.createElement(LineSkeleton, {\n      key: \"line:\".concat(i),\n      size: size,\n      roundness: roundness,\n      style: {\n        width: \"\".concat(w, \"%\")\n      }\n    });\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}