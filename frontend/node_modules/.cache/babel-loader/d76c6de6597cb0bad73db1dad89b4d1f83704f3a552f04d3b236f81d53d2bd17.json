{"ast":null,"code":"var _excluded = [\"index\", \"scrollSnapType\", \"scrollAlign\", \"detectActive\", \"detectThreshold\", \"scaleCallback\", \"scaleResetCallback\", \"onIndexChange\", \"paddingStart\", \"paddingEnd\", \"children\", \"ariaLive\", \"isDragScrollDisabled\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport { useCarousel, Carousel as CarouselCore, CarouselTrack as StyledCarouselTrack, applyNoSelect } from '@salutejs/plasma-core';\nimport styled from 'styled-components';\nimport { useForkRef } from '../../hooks';\nimport { useDragScroll } from './hooks';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Carousel/Carousel');\nvar StyledCarousel = /*#__PURE__*/styled(CarouselCore).withConfig({\n  componentId: \"plasma-web-core__sc-zadi43-0\"\n})([\"\", \";\"], applyNoSelect);\n\n/**\n * Компонент для создания списков с прокруткой.\n */\n// eslint-disable-next-line prefer-arrow-callback\nexport var Carousel = /*#__PURE__*/React.forwardRef(function Carousel(_ref, ref) {\n  var _ref$index = _ref.index,\n    index = _ref$index === void 0 ? 0 : _ref$index,\n    _ref$scrollSnapType = _ref.scrollSnapType,\n    scrollSnapType = _ref$scrollSnapType === void 0 ? 'mandatory' : _ref$scrollSnapType,\n    scrollAlign = _ref.scrollAlign,\n    detectActive = _ref.detectActive,\n    detectThreshold = _ref.detectThreshold,\n    scaleCallback = _ref.scaleCallback,\n    scaleResetCallback = _ref.scaleResetCallback,\n    onIndexChange = _ref.onIndexChange,\n    paddingStart = _ref.paddingStart,\n    paddingEnd = _ref.paddingEnd,\n    children = _ref.children,\n    _ref$ariaLive = _ref.ariaLive,\n    ariaLive = _ref$ariaLive === void 0 ? 'off' : _ref$ariaLive,\n    _ref$isDragScrollDisa = _ref.isDragScrollDisabled,\n    isDragScrollDisabled = _ref$isDragScrollDisa === void 0 ? false : _ref$isDragScrollDisa,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var axis = 'x';\n  var _useCarousel = useCarousel({\n      index: index,\n      axis: axis,\n      scrollAlign: scrollAlign,\n      detectActive: detectActive,\n      detectThreshold: detectThreshold,\n      scaleCallback: scaleCallback,\n      scaleResetCallback: scaleResetCallback,\n      onIndexChange: onIndexChange\n    }),\n    scrollRef = _useCarousel.scrollRef,\n    trackRef = _useCarousel.trackRef;\n  var handleRef = useForkRef(scrollRef, ref);\n  useDragScroll(scrollRef, isDragScrollDisabled);\n  return /*#__PURE__*/React.createElement(StyledCarousel, _extends({\n    ref: handleRef,\n    axis: axis,\n    scrollSnapType: scrollSnapType\n  }, rest), /*#__PURE__*/React.createElement(StyledCarouselTrack, {\n    ref: trackRef,\n    axis: axis,\n    paddingStart: paddingStart,\n    paddingEnd: paddingEnd,\n    \"aria-live\": ariaLive\n  }, children));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}