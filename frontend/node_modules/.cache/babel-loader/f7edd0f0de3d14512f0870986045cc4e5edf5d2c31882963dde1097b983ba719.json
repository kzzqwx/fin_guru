{"ast":null,"code":"var _excluded = [\"status\", \"label\", \"placeholder\", \"animatedHint\", \"helperText\", \"enumerationType\", \"chips\", \"onSearch\", \"onChangeChips\", \"size\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { textFieldConfig, component, mergeConfig } from '@salutejs/plasma-new-hope/styled-components';\nimport { config } from './TextField.config';\nvar mergedConfig = /*#__PURE__*/mergeConfig(textFieldConfig, config);\nvar TextFieldComponent = /*#__PURE__*/component(mergedConfig);\nvar statusToView = {\n  success: 'positive',\n  warning: 'warning',\n  error: 'negative'\n};\nvar animatedHintToLabelPlacement = {\n  placeholder: 'outer',\n  label: 'inner'\n};\n\n/**\n * Поле ввода текста.\n */\nexport var TextField = /*#__PURE__*/forwardRef(function (props, ref) {\n  var status = props.status,\n    label = props.label,\n    placeholder = props.placeholder,\n    animatedHint = props.animatedHint,\n    helperText = props.helperText,\n    enumerationType = props.enumerationType,\n    chips = props.chips,\n    onSearch = props.onSearch,\n    onChangeChips = props.onChangeChips,\n    _props$size = props.size,\n    size = _props$size === void 0 ? 'l' : _props$size,\n    rest = _objectWithoutProperties(props, _excluded);\n\n  /** TODO: #1064 Remove In plasma-2.0 */\n  /* eslint-disable no-underscore-dangle */\n  var _view = status ? statusToView[status] : 'default';\n  var _labelPlacement = animatedHint ? animatedHintToLabelPlacement[animatedHint] : 'outer';\n  var _label = label ? String(label) : undefined;\n  if (size !== 'l' && _labelPlacement === 'inner') {\n    _label = undefined;\n    _labelPlacement = 'outer';\n  }\n  if (size === 'l' && animatedHint === 'placeholder' && !label) {\n    _label = placeholder;\n    _labelPlacement = 'inner';\n  }\n  var _size = size === 'xs' ? 's' : size;\n  if (enumerationType === 'chip') {\n    return /*#__PURE__*/React.createElement(TextFieldComponent, _extends({}, rest, {\n      view: _view,\n      size: _size,\n      labelPlacement: _labelPlacement,\n      label: _label,\n      placeholder: placeholder,\n      leftHelper: helperText,\n      ref: ref,\n      enumerationType: \"chip\",\n      chips: chips,\n      onChangeChips: onChangeChips\n    }));\n  }\n  return /*#__PURE__*/React.createElement(TextFieldComponent, _extends({}, rest, {\n    view: _view,\n    size: _size,\n    labelPlacement: _labelPlacement,\n    label: _label,\n    placeholder: placeholder,\n    leftHelper: helperText,\n    ref: ref,\n    enumerationType: \"plain\",\n    onSearch: onSearch\n  }));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}