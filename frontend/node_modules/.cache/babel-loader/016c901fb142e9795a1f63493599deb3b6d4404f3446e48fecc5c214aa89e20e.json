{"ast":null,"code":"var _excluded = [\"children\", \"disabled\", \"target\", \"href\", \"rel\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { css } from 'styled-components';\nimport { base as viewCSS } from './_view/base';\nimport { base as disabledCSS } from './_disabled/base';\nimport { base as focusedCSS } from './_focused/base';\nvar base = /*#__PURE__*/css([\"position:relative;text-decoration:none;transition:color 0.15s ease-in;::before{content:'';position:absolute;inset:0;opacity:0.4;}\"]);\nexport var linkRoot = function linkRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    var children = props.children,\n      disabled = props.disabled,\n      target = props.target,\n      href = props.href,\n      rel = props.rel,\n      rest = _objectWithoutProperties(props, _excluded);\n    var forwardProps = {\n      disabled: disabled,\n      target: target,\n      href: disabled ? undefined : href,\n      // NOTE: https://developer.chrome.com/docs/lighthouse/best-practices/external-anchors-use-rel-noopener/\n      rel: target === '_blank' ? 'noopener noreferrer' : rel\n    };\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      ref: ref\n    }, forwardProps, rest), children);\n  });\n};\nexport var linkConfig = {\n  name: 'Link',\n  tag: 'a',\n  layout: linkRoot,\n  base: base,\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    disabled: {\n      css: disabledCSS,\n      attrs: true\n    },\n    focused: {\n      css: focusedCSS\n    }\n  },\n  defaults: {\n    view: 'primary',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}