{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar _StyledSpinner;\nvar _excluded = [\"children\", \"view\", \"size\", \"text\", \"value\", \"contentLeft\", \"contentRight\", \"contentPlacing\", \"isLoading\", \"loader\", \"stretch\", \"square\", \"pin\", \"disabled\", \"focused\", \"outlined\", \"className\", \"blur\", \"style\", \"stretching\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { convertRoundnessMatrix } from '../../utils/roundness';\nimport { cx } from '../../utils';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as disabledCSS } from './variations/_disabled/base';\nimport { base as focusedCSS } from './variations/_focused/base';\nimport { base as stretchingCSS } from './variations/_stretching/base';\nimport { base as blurredCSS } from './variations/_blurred/base';\nimport { base, ButtonText, ButtonValue, Loader, LoadWrap, StyledContentLeft, StyledContentRight, StyledSpinner } from './Button.styles';\nimport { classes, tokens } from './Button.tokens';\nexport var buttonRoot = function buttonRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    var children = props.children,\n      view = props.view,\n      size = props.size,\n      text = props.text,\n      value = props.value,\n      contentLeft = props.contentLeft,\n      contentRight = props.contentRight,\n      _props$contentPlacing = props.contentPlacing,\n      contentPlacing = _props$contentPlacing === void 0 ? 'default' : _props$contentPlacing,\n      isLoading = props.isLoading,\n      loader = props.loader,\n      stretch = props.stretch,\n      square = props.square,\n      pin = props.pin,\n      disabled = props.disabled,\n      focused = props.focused,\n      outlined = props.outlined,\n      className = props.className,\n      blur = props.blur,\n      style = props.style,\n      _props$stretching = props.stretching,\n      stretching = _props$stretching === void 0 ? 'auto' : _props$stretching,\n      rest = _objectWithoutProperties(props, _excluded);\n    var txt = typeof children === 'string' ? children : text;\n    var stretchingClass = stretch ? classes.filledStretching : classes[\"\".concat(stretching, \"Stretching\")];\n    var contentRelaxedClass = contentPlacing === 'relaxed' ? classes.contentRelaxed : undefined;\n    var squareClass = square ? classes.buttonSquare : undefined;\n    var buttonBorderRadius = pin ? convertRoundnessMatrix(pin, \"var(\".concat(tokens.buttonRadius, \")\"), \"var(\".concat(tokens.buttonHeight, \")\")) : \"var(\".concat(tokens.buttonRadius, \", calc(var(\").concat(tokens.buttonHeight, \") / 4))\");\n    var contentPlacingMapper = {\n      \"default\": 'center',\n      relaxed: 'space-between'\n    };\n    var contentPlacementValue = contentPlacing ? contentPlacingMapper[contentPlacing] : 'center';\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      type: \"button\",\n      ref: ref,\n      view: view,\n      size: size,\n      value: value,\n      disabled: disabled,\n      focused: focused || outlined,\n      contentPlacing: contentPlacing,\n      className: cx(squareClass, stretchingClass, classes.buttonItem, className),\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        '--plasma_computed-btn-br': buttonBorderRadius,\n        '--plasma_private-blur': blur\n      })\n    }, rest), /*#__PURE__*/React.createElement(LoadWrap, {\n      contentPlacing: contentPlacementValue,\n      isLoading: isLoading\n    }, contentLeft && /*#__PURE__*/React.createElement(StyledContentLeft, null, contentLeft), txt ? /*#__PURE__*/React.createElement(ButtonText, {\n      className: contentRelaxedClass\n    }, txt) : children, value && /*#__PURE__*/React.createElement(ButtonValue, null, value), contentRight && /*#__PURE__*/React.createElement(StyledContentRight, null, contentRight)), isLoading && /*#__PURE__*/React.createElement(Loader, null, loader || _StyledSpinner || (_StyledSpinner = /*#__PURE__*/React.createElement(StyledSpinner, null))));\n  });\n};\nexport var buttonConfig = {\n  name: 'Button',\n  tag: 'button',\n  layout: buttonRoot,\n  base: base,\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    },\n    disabled: {\n      css: disabledCSS,\n      attrs: true\n    },\n    focused: {\n      css: focusedCSS\n      // TODO: isLoading => disabled\n    },\n    blurred: {\n      css: blurredCSS\n    },\n    stretching: {\n      css: stretchingCSS\n    }\n  },\n  defaults: {\n    view: 'secondary',\n    size: 'm',\n    stretching: 'auto'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}