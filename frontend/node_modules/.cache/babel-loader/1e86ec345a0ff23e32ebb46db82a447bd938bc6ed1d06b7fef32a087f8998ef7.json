{"ast":null,"code":"import { e as __spreadArray, a as __rest, _ as __assign, b as __awaiter, f as createNanoObservable, d as createNanoEvents, c as __generator } from './common-ba25e019.js';\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}\nvar REGEX = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return stringify(rnds);\n}\nvar isDeepEqual = function (a, b) {\n  // Простое значение\n  if (typeof a !== 'object' || a === null) {\n    return a === b;\n  }\n  // Массив\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    return !a.some(function (valA, key) {\n      return !isDeepEqual(valA, b[key]);\n    });\n  }\n  // Словарь\n  if (typeof b !== 'object' || b === null) {\n    return false;\n  }\n  var entriesA = Object.entries(a);\n  var entriesB = Object.entries(b);\n  if (entriesA.length !== entriesB.length) {\n    return false;\n  }\n  return !entriesA.some(function (_a) {\n    var key = _a[0],\n      valA = _a[1];\n    return !(key in b && isDeepEqual(valA, b[key]));\n  });\n};\nvar findCommandIndex = function (arr, command) {\n  var insets = ['insets', 'minimum_static_insets', 'maximum_static_insets', 'dynamic_insets'];\n  var index = -1;\n  if (command.type === 'character') {\n    index = arr.findIndex(function (c) {\n      return c.type === 'character' && c.character.id === command.character.id;\n    });\n  } else if (insets.includes(command.type)) {\n    index = arr.findIndex(function (c) {\n      return c.type === command.type;\n    });\n  } else if (command.type === 'app_context') {\n    index = arr.findIndex(function (c) {\n      return c.type === 'app_context';\n    });\n  } else {\n    index = arr.findIndex(function (c) {\n      return isDeepEqual(c, command);\n    });\n  }\n  return index;\n};\nvar appInitialData = function () {\n  var isPulled = false;\n  var pulled = [];\n  var committed = [];\n  var diff = [];\n  var isCommandWasPulled = function (command) {\n    return findCommandIndex(pulled, command) >= 0;\n  };\n  return {\n    /**\n     * Прочитать appInitialData. Запоминает состояние на момент прочтения\n     * @returns Массив комманд\n     */\n    pull: function () {\n      isPulled = true;\n      pulled = __spreadArray([], window.appInitialData || []);\n      return __spreadArray([], pulled);\n    },\n    /**\n     * Прочитать appInitialData\n     * @returns Массив комманд\n     */\n    get: function () {\n      return __spreadArray([], window.appInitialData || []);\n    },\n    /**\n     * Зафиксировать текущее состояние appInitialData\n     */\n    commit: function () {\n      committed = __spreadArray([], window.appInitialData || []);\n      diff = isPulled === true ? (window.appInitialData || []).filter(function (c) {\n        return !isCommandWasPulled(c);\n      }) : __spreadArray([], window.appInitialData || []);\n    },\n    /**\n     * Возвращает диф appInitialData между pull и commit\n     * @returns Массив комманд\n     */\n    diff: function () {\n      return __spreadArray([], diff);\n    },\n    /**\n     * Возвращает флаг наличия command в appInitialData на момент commit\n     * @param command Команда, которую нужно проверить на наличие в appInitialData\n     * @returns true - если команда была в appInitialData\n     */\n    isCommitted: function (command) {\n      var commandIndex = findCommandIndex(committed, command);\n      var isCommitted = commandIndex >= 0;\n      if (isCommitted) {\n        committed.splice(commandIndex, 1);\n      }\n      return isCommitted;\n    },\n    /**\n     * Возвращает первое сообщение из appInitialData, подходящее под фильтры param\n     * @param param Параметры: тип сообщения (например, smart_app_data)\n     * и тип команды (значение поля smart_app_data.type)\n     * @returns Первое сообщение, соответствующее параметрам или undefined\n     */\n    find: function (_a) {\n      var type = _a.type,\n        command = _a.command;\n      var initialCommands = __spreadArray([], window.appInitialData || []);\n      var result = initialCommands.find(function (initialCommand) {\n        if (!command && type && type === initialCommand.type) {\n          return true;\n        }\n        var isCommandInSmartAppData = command && 'smart_app_data' in initialCommand;\n        if (!isCommandInSmartAppData) {\n          return;\n        }\n        if (command === initialCommand.smart_app_data.command || command === initialCommand.smart_app_data.type) {\n          return true;\n        }\n        return false;\n      });\n      return result && 'smart_app_data' in result ? result.smart_app_data : result;\n    }\n  };\n}();\nvar excludeTags = ['A', 'AUDIO', 'BUTTON', 'INPUT', 'OPTION', 'SELECT', 'TEXTAREA', 'VIDEO'];\nfunction inIframe() {\n  try {\n    return window.self !== window.parent;\n  } catch (e) {\n    return true;\n  }\n}\nif (/[a-zA-Z]/.test('1.35.0')) {\n  console.info('%cPlease use the latest version of SaluteJS Client. Your version is 1.35.0', 'color: yellow; font-size: 14px');\n}\nif (typeof window !== 'undefined' && inIframe()) {\n  var postMessage_1 = function (action) {\n    var _a;\n    (_a = window.parent) === null || _a === void 0 ? void 0 : _a.postMessage(JSON.stringify(action), '*');\n  };\n  var historyBack_1 = function () {\n    var prevPage = window.location.href;\n    window.history.back();\n    setTimeout(function () {\n      // закрываем страницу, если переход назад не поменял урл\n      if (window.location.href === prevPage) {\n        postMessage_1({\n          type: 'close'\n        });\n      }\n    }, 500);\n  };\n  window.appInitialData = [];\n  window.AssistantHost = {\n    sendDataContainer: function (json) {\n      postMessage_1({\n        type: 'sendDataContainer',\n        payload: json\n      });\n    },\n    close: function () {\n      postMessage_1({\n        type: 'close'\n      });\n    },\n    sendData: function (json) {\n      postMessage_1({\n        type: 'sendData',\n        payload: json\n      });\n    },\n    setSuggests: function (suggests) {\n      postMessage_1({\n        type: 'setSuggests',\n        payload: suggests\n      });\n    },\n    setHints: function (hints) {\n      postMessage_1({\n        type: 'setHints',\n        payload: hints\n      });\n    },\n    ready: function () {\n      postMessage_1({\n        type: 'ready'\n      });\n    },\n    sendText: function (message) {\n      postMessage_1({\n        type: 'sendText',\n        payload: message\n      });\n    },\n    setHeaderButtons: function (headerButtons) {\n      postMessage_1({\n        type: 'setHeaderButtons',\n        payload: typeof headerButtons === 'string' ? headerButtons : JSON.stringify(headerButtons)\n      });\n    }\n  };\n  window.addEventListener('message', function (e) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    try {\n      if (typeof e.data === 'string') {\n        var data = JSON.parse(e.data);\n        switch (data.type) {\n          case 'onBack':\n            historyBack_1();\n            break;\n          case 'onData':\n            (_b = (_a = window.AssistantClient) === null || _a === void 0 ? void 0 : _a.onData) === null || _b === void 0 ? void 0 : _b.call(_a, data.payload);\n            break;\n          case 'onRequestState':\n            {\n              var state = (_d = (_c = window.AssistantClient) === null || _c === void 0 ? void 0 : _c.onRequestState) === null || _d === void 0 ? void 0 : _d.call(_c);\n              postMessage_1({\n                type: 'state',\n                payload: state,\n                requestId: data.requestId\n              });\n              break;\n            }\n          case 'onRequestRecoveryState':\n            {\n              var recoverystate = (_f = (_e = window.AssistantClient) === null || _e === void 0 ? void 0 : _e.onRequestRecoveryState) === null || _f === void 0 ? void 0 : _f.call(_e);\n              postMessage_1({\n                type: 'recoveryState',\n                payload: recoverystate\n              });\n              break;\n            }\n          case 'onStart':\n            (_h = (_g = window.AssistantClient) === null || _g === void 0 ? void 0 : _g.onStart) === null || _h === void 0 ? void 0 : _h.call(_g);\n            break;\n          default:\n            // eslint-disable-next-line no-console\n            console.error(e, 'Unknown parsed message');\n            break;\n        }\n      }\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err, 'Unknown message');\n    }\n  });\n  window.addEventListener('keydown', function (_a) {\n    var _b, _c;\n    var code = _a.code;\n    switch (code) {\n      case 'Enter':\n        if (document.activeElement && !excludeTags.includes(document.activeElement.tagName)) {\n          (_c = (_b = document.activeElement).click) === null || _c === void 0 ? void 0 : _c.call(_b);\n        }\n        break;\n      case 'Escape':\n        historyBack_1();\n        break;\n    }\n  });\n}\nvar createAssistant = function (_a) {\n  var _b, _c;\n  var getState = _a.getState,\n    getRecoveryState = _a.getRecoveryState,\n    _d = _a.ready,\n    ready = _d === void 0 ? true : _d;\n  var _e = createNanoEvents(),\n    on = _e.on,\n    emitOriginal = _e.emit;\n  var _f = createNanoEvents(),\n    subscribeToCommand = _f.on,\n    emitAllCommands = _f.emit;\n  var observables = new Map();\n  var currentGetState = getState;\n  var currentGetRecoveryState = getRecoveryState;\n  var isInitialCommandsEmitted = false;\n  var readyRetries = 0;\n  var emitCommand = function (command) {\n    if (command.type === 'smart_app_data') {\n      emitOriginal('command', command.smart_app_data);\n    }\n    if (command.type === 'smart_app_error') {\n      emitOriginal('error', command.smart_app_error);\n    }\n    return emitOriginal('data', command);\n  };\n  var cancelTts = typeof ((_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.cancelTts) !== 'undefined' ? function () {\n    var _a, _b;\n    (_b = (_a = window.AssistantHost).cancelTts) === null || _b === void 0 ? void 0 : _b.call(_a, '');\n  } : undefined;\n  var emitAppInitialData = function () {\n    if (!isInitialCommandsEmitted) {\n      appInitialData.diff().forEach(function (c) {\n        return emitCommand(c);\n      });\n      isInitialCommandsEmitted = true;\n    }\n  };\n  var saveFirstSmartAppDataMid = function (mid) {\n    // eslint-disable-next-line no-underscore-dangle\n    if (typeof window.__ASSISTANT_CLIENT__.firstSmartAppDataMid === 'undefined') {\n      // eslint-disable-next-line no-underscore-dangle\n      window.__ASSISTANT_CLIENT__.firstSmartAppDataMid = mid;\n    }\n  };\n  window.AssistantClient = {\n    onData: function (command) {\n      var _a, _b, _c, _d, _e;\n      if (appInitialData.isCommitted(command)) {\n        return;\n      }\n      emitAllCommands(command.type, command);\n      if (command.type === 'smart_app_data' && (((_a = command.sdk_meta) === null || _a === void 0 ? void 0 : _a.mid) || '-1') !== '-1') {\n        saveFirstSmartAppDataMid((_b = command.sdk_meta) === null || _b === void 0 ? void 0 : _b.mid);\n      }\n      /// фильтр команды 'назад'\n      /// может приходить type='system', но в типах это не отражаем\n      // @ts-ignore\n      if (command.type === 'system' && ((_d = (_c = command.system) === null || _c === void 0 ? void 0 : _c.command) === null || _d === void 0 ? void 0 : _d.toUpperCase()) === 'BACK') {\n        return;\n      }\n      if (command.type === 'tts_state_update') {\n        emitOriginal('tts', {\n          state: command.state,\n          owner: command.owner\n        });\n      }\n      if ((command.type === 'smart_app_data' || command.type === 'smart_app_error') && ((_e = command.sdk_meta) === null || _e === void 0 ? void 0 : _e.requestId) && observables.has(command.sdk_meta.requestId)) {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var _f = command.sdk_meta;\n        _f.requestId;\n        var meta = __rest(_f, [\"requestId\"]);\n        var _g = observables.get(command.sdk_meta.requestId) || {},\n          requestId = _g.requestId,\n          next = _g.next;\n        if (Object.keys(meta).length > 0 || requestId) {\n          // eslint-disable-next-line camelcase\n          command.sdk_meta = __assign({}, meta);\n          if (requestId) {\n            // eslint-disable-next-line camelcase\n            command.sdk_meta = {\n              requestId: requestId\n            };\n          }\n        }\n        next === null || next === void 0 ? void 0 : next(command.type === 'smart_app_data' ? command : command);\n      }\n      emitCommand(command);\n    },\n    onRequestState: function () {\n      return currentGetState();\n    },\n    onRequestRecoveryState: function () {\n      if (currentGetRecoveryState) {\n        return currentGetRecoveryState();\n      }\n      return undefined;\n    },\n    onStart: function () {\n      emitOriginal('start');\n      emitAppInitialData();\n    }\n  };\n  var readyFn = function () {\n    return __awaiter(void 0, void 0, void 0, function () {\n      var firstSmartAppDataMid;\n      var _a, _b, _c;\n      return __generator(this, function (_d) {\n        readyRetries += 1;\n        if (typeof ((_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.ready) !== 'function') {\n          return [2 /*return*/, new Promise(function (resolve, reject) {\n            var _a;\n            if (readyRetries > 3) {\n              throw new Error(\"window.AssistantHost is not ready. The ready method has the type \\\"\" + typeof ((_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.ready) + \"\\\"\");\n            }\n            window.setTimeout(function () {\n              readyFn().then(resolve, reject);\n            }, 500);\n          })];\n        }\n        firstSmartAppDataMid = ((_c = (_b = appInitialData.get().find(function (c) {\n          var _a;\n          return c.type === 'smart_app_data' && (((_a = c.sdk_meta) === null || _a === void 0 ? void 0 : _a.mid) || '-1') !== '-1';\n          // @ts-ignore\n        })) === null || _b === void 0 ? void 0 : _b.sdk_meta) === null || _c === void 0 ? void 0 : _c.mid) || '-1';\n        if (firstSmartAppDataMid !== '-1') {\n          saveFirstSmartAppDataMid(firstSmartAppDataMid);\n        }\n        appInitialData.commit();\n        window.AssistantHost.ready();\n        return [2 /*return*/];\n      });\n    });\n  };\n  if (ready) {\n    window.setTimeout(readyFn); // таймаут для подписки на start\n  }\n  var sendData = function (_a, onData) {\n    var _b, _c, _d;\n    var action = _a.action,\n      name = _a.name,\n      requestId = _a.requestId,\n      mode = _a.mode;\n    if ((_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.sendDataContainer) {\n      if (onData == null) {\n        (_c = window.AssistantHost) === null || _c === void 0 ? void 0 : _c.sendDataContainer( /* eslint-disable-next-line camelcase */\n        JSON.stringify({\n          data: action,\n          message_name: name || '',\n          requestId: requestId,\n          mode: mode\n        }));\n        return function () {};\n      }\n      if (requestId && observables.has(requestId)) {\n        throw new Error('requestId должен быть уникальным');\n      }\n      var realRequestId_1 = requestId || v4();\n      var subscribe = createNanoObservable(function (_a) {\n        var _b;\n        var next = _a.next;\n        (_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.sendDataContainer( /* eslint-disable-next-line camelcase */\n        JSON.stringify({\n          data: action,\n          message_name: name || '',\n          requestId: realRequestId_1,\n          mode: mode\n        }));\n        observables.set(realRequestId_1, {\n          next: next,\n          requestId: requestId\n        });\n      }).subscribe;\n      var unsubscribe_1 = subscribe({\n        next: onData\n      }).unsubscribe;\n      return function () {\n        unsubscribe_1();\n        observables.delete(realRequestId_1);\n      };\n    }\n    if (onData != null) {\n      throw new Error('Не поддерживается в данной версии клиента');\n    }\n    (_d = window.AssistantHost) === null || _d === void 0 ? void 0 : _d.sendData(JSON.stringify(action), name || null);\n    return function () {};\n  };\n  var sendAction = function (action, onData, onError, params) {\n    if (params === void 0) {\n      params = {};\n    }\n    return sendData(__assign(__assign({}, params), {\n      action: action\n    }), function (data) {\n      if (data.type === 'smart_app_data') {\n        onData === null || onData === void 0 ? void 0 : onData(data.smart_app_data);\n      }\n      if (data.type === 'smart_app_error') {\n        // @ts-ignore\n        onError === null || onError === void 0 ? void 0 : onError(data.smart_app_error);\n      }\n    });\n  };\n  return {\n    cancelTts: cancelTts,\n    close: function () {\n      var _a;\n      return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.close();\n    },\n    getGeo: typeof ((_c = window.AssistantHost) === null || _c === void 0 ? void 0 : _c.getGeo) !== 'undefined' ? function () {\n      var _a, _b;\n      (_b = (_a = window.AssistantHost).getGeo) === null || _b === void 0 ? void 0 : _b.call(_a);\n    } : undefined,\n    getInitialData: appInitialData.pull,\n    findInInitialData: appInitialData.find,\n    getRecoveryState: function () {\n      return window.appRecoveryState;\n    },\n    on: on,\n    subscribeToCommand: subscribeToCommand,\n    sendAction: sendAction,\n    sendData: sendData,\n    sendActionPromisified: function (action, params) {\n      if (params === void 0) {\n        params = {};\n      }\n      return new Promise(function (resolve, reject) {\n        var off = sendAction(action, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          off();\n          resolve.apply(void 0, args);\n        }, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          off();\n          reject.apply(void 0, args);\n        }, params);\n      });\n    },\n    sendDataPromisified: function (params) {\n      return new Promise(function (resolve) {\n        var off = sendData(params, function () {\n          var args = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n          }\n          off();\n          resolve.apply(void 0, args);\n        });\n      });\n    },\n    setGetState: function (nextGetState) {\n      currentGetState = nextGetState;\n    },\n    setGetRecoveryState: function (nextGetRecoveryState) {\n      currentGetRecoveryState = nextGetRecoveryState;\n    },\n    setSuggests: function (suggestions) {\n      var _a;\n      (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.setSuggests(JSON.stringify({\n        suggestions: {\n          buttons: suggestions\n        }\n      }));\n    },\n    setHints: function (hints) {\n      var _a;\n      (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.setHints(JSON.stringify({\n        hints: hints\n      }));\n    },\n    sendText: function (message) {\n      var _a;\n      return (_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.sendText(message);\n    },\n    setHeaderButtons: function (headerButtons) {\n      var _a, _b;\n      if (!((_a = window.AssistantHost) === null || _a === void 0 ? void 0 : _a.setHeaderButtons)) {\n        throw new Error('setHeaderButtons не поддерживается в данной версии клиента');\n      }\n      (_b = window.AssistantHost) === null || _b === void 0 ? void 0 : _b.setHeaderButtons(JSON.stringify(headerButtons));\n    },\n    ready: readyFn\n  };\n};\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line no-underscore-dangle\n  window.__ASSISTANT_CLIENT__ = {\n    version: '1.35.0'\n  };\n}\nexport { createAssistant };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}