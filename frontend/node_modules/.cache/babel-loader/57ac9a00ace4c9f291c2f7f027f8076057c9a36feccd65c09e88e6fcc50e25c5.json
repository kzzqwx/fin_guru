{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { base as disabledCSS } from './variations/_disabled/base';\nimport { SingleSlider, DoubleSlider } from './components';\nvar isSingleValueProps = function isSingleValueProps(props) {\n  return typeof props.value === 'number';\n};\nexport var sliderRoot = function sliderRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Root, _extends({\n      ref: ref\n    }, props), isSingleValueProps(props) && /*#__PURE__*/React.createElement(SingleSlider, props), !isSingleValueProps(props) && /*#__PURE__*/React.createElement(DoubleSlider, props));\n  });\n};\nexport var sliderConfig = {\n  name: 'Slider',\n  tag: 'div',\n  layout: sliderRoot,\n  base: '',\n  variations: {\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    },\n    disabled: {\n      css: disabledCSS,\n      attrs: true\n    }\n  },\n  defaults: {\n    view: 'default',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}