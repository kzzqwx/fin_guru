{"ast":null,"code":"function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar _excluded = [\"disclosure\", \"children\", \"isOpen\", \"trigger\", \"placement\", \"onToggle\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { memo, useRef, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { usePopper } from 'react-popper';\nimport { useForkRef } from '../../hooks';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Popup/Popup');\nvar StyledRoot = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-w3yec9-0\"\n})([\"position:relative;box-sizing:border-box;display:inline-flex;\"]);\nvar StyledPopup = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma__sc-w3yec9-1\"\n})([\"position:absolute;z-index:1;padding:var(--plasma-popup-padding);margin:var(--plasma-popup-margin);width:var(--plasma-popup-width);\"]);\nexport var getPlacement = function getPlacement(placement) {\n  return \"\".concat(placement, \"-start\");\n};\nvar getAutoPlacements = function getAutoPlacements(placements) {\n  return (placements || []).map(function (placement) {\n    return getPlacement(placement);\n  });\n};\n\n/**\n * Всплывающее окно с возможностью позиционирования\n * и вызова по клику либо ховеру.\n * @deprecated Используйте Popover\n */\nexport var Popup = /*#__PURE__*/memo( /*#__PURE__*/React.forwardRef(function (_ref, outerRootRef) {\n  var disclosure = _ref.disclosure,\n    children = _ref.children,\n    isOpen = _ref.isOpen,\n    trigger = _ref.trigger,\n    _ref$placement = _ref.placement,\n    placement = _ref$placement === void 0 ? 'auto' : _ref$placement,\n    onToggle = _ref.onToggle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var rootRef = useRef(null);\n  var popupRef = useRef(null);\n  var handleRef = useForkRef(rootRef, outerRootRef);\n  var isAutoArray = Array.isArray(placement);\n  var isAuto = isAutoArray || placement === 'auto';\n  var _usePopper = usePopper(rootRef.current, popupRef.current, {\n      placement: getPlacement(isAutoArray ? 'auto' : placement),\n      modifiers: [{\n        name: 'flip',\n        enabled: isAuto,\n        options: {\n          allowedAutoPlacements: getAutoPlacements(isAutoArray ? placement : [])\n        }\n      }]\n    }),\n    styles = _usePopper.styles,\n    attributes = _usePopper.attributes,\n    forceUpdate = _usePopper.forceUpdate;\n  var onDocumentClick = useCallback(function (event) {\n    var _rootRef$current;\n    var targetIsRoot = event.target === rootRef.current;\n    var rootHasTarget = (_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.contains(event.target);\n    if (!targetIsRoot && !rootHasTarget) {\n      onToggle === null || onToggle === void 0 || onToggle(false, event);\n    }\n  }, [onToggle]);\n  var onClick = useCallback(function (event) {\n    if (trigger === 'click') {\n      var _popupRef$current;\n      var targetIsPopup = event.target === popupRef.current;\n      var rootHasTarget = (_popupRef$current = popupRef.current) === null || _popupRef$current === void 0 ? void 0 : _popupRef$current.contains(event.target);\n      if (!targetIsPopup && !rootHasTarget) {\n        onToggle === null || onToggle === void 0 || onToggle(!isOpen, event);\n      }\n    }\n  }, [trigger, isOpen, onToggle]);\n  var onMouseEnter = useCallback(function (event) {\n    if (trigger === 'hover') {\n      onToggle === null || onToggle === void 0 || onToggle(true, event);\n    }\n  }, [trigger, onToggle]);\n  var onMouseLeave = useCallback(function (event) {\n    if (trigger === 'hover') {\n      onToggle === null || onToggle === void 0 || onToggle(false, event);\n    }\n  }, [trigger, onToggle]);\n  var onFocus = useCallback(function (event) {\n    if (trigger === 'hover') {\n      onToggle === null || onToggle === void 0 || onToggle(true, event);\n    }\n  }, [trigger, onToggle]);\n  var onBlur = useCallback(function (event) {\n    if (trigger === 'hover') {\n      onToggle === null || onToggle === void 0 || onToggle(false, event);\n    }\n  }, [trigger, onToggle]);\n  useEffect(function () {\n    document.addEventListener('click', onDocumentClick);\n    return function () {\n      return document.removeEventListener('click', onDocumentClick);\n    };\n  }, []);\n  useEffect(function () {\n    if (!isOpen || !forceUpdate) {\n      return;\n    }\n\n    /*\n     * INFO: Метод forceUpdate содержит в себе flushSync и приводит\n     * к повторному рендеру компонента, который уже находится в процессе рендера.\n     * Данный хак, нужен для того, чтобы это поведение избежать и перенаправить\n     * вызов метода в очередь микрозадач.\n     */\n    Promise.resolve().then(forceUpdate);\n  }, [isOpen, forceUpdate]);\n  return /*#__PURE__*/React.createElement(StyledRoot, _extends({\n    ref: handleRef,\n    onClick: onClick,\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onFocus: onFocus,\n    onBlur: onBlur\n  }, rest), disclosure, children && /*#__PURE__*/React.createElement(StyledPopup, _extends({}, attributes.popper, {\n    ref: popupRef,\n    style: _objectSpread(_objectSpread({}, styles.popper), {\n      display: isOpen ? 'block' : 'none'\n    })\n  }), children));\n}));","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}