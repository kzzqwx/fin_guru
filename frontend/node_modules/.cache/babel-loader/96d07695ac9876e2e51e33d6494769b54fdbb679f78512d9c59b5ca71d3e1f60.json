{"ast":null,"code":"var _excluded = [\"name\", \"form\", \"readOnly\", \"disabled\", \"label\", \"id\", \"children\", \"role\", \"target\", \"view\", \"size\", \"frame\", \"usePortal\", \"enumerationType\", \"opened\", \"placement\", \"onToggle\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { Children, forwardRef, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { safeUseId, useForkRef } from '@salutejs/plasma-core';\nimport { cx } from '../../utils';\nimport { getPlacements } from '../Dropdown/utils';\nimport { useDidMountEffect, useForceUpdate } from '../../hooks';\nimport { base as targetCSS } from './variations/_target/base';\nimport { base as viewCSS } from './variations/_view/base';\nimport { base as sizeCSS } from './variations/_size/base';\nimport { SelectTarget } from './ui';\nimport { getChildren, getNewSelected, getValues } from './utils';\nimport { classes } from './Select.tokens';\nimport { StyledNativeSelect, StyledPopover, StyledRoot, StyledSelect } from './Select.styles';\nimport { useKeyNavigation } from './hooks';\n\n/**\n * Выпадающий список без внешнего контроля видимости.\n */\nexport var selectRoot = function selectRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (_ref, outerRootRef) {\n    var _targetRef$current;\n    var name = _ref.name,\n      form = _ref.form,\n      readOnly = _ref.readOnly,\n      disabled = _ref.disabled,\n      label = _ref.label,\n      id = _ref.id,\n      children = _ref.children,\n      role = _ref.role,\n      target = _ref.target,\n      view = _ref.view,\n      size = _ref.size,\n      frame = _ref.frame,\n      usePortal = _ref.usePortal,\n      _ref$enumerationType = _ref.enumerationType,\n      enumerationType = _ref$enumerationType === void 0 ? 'comma' : _ref$enumerationType,\n      _ref$opened = _ref.opened,\n      opened = _ref$opened === void 0 ? false : _ref$opened,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      onToggle = _ref.onToggle,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var forceUpdate = useForceUpdate();\n    var uniqId = safeUseId();\n    var innerId = id || uniqId;\n    var _rest$valueType = rest.valueType,\n      valueType = _rest$valueType === void 0 ? 'single' : _rest$valueType,\n      value = rest.value;\n    var offset = [0, 4];\n    var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      ref = _useState2[0],\n      setRef = _useState2[1];\n    var rootRef = useRef(null);\n    var handleRef = useForkRef(rootRef, outerRootRef);\n    var targetRef = useRef(null);\n    var chipsRefs = useRef([]);\n    var selectRef = useRef(null);\n    var itemsRefs = useRef([]);\n    var controlledRefs = {\n      targetRef: targetRef,\n      chipsRefs: chipsRefs,\n      selectRef: selectRef,\n      itemsRefs: itemsRefs\n    };\n    var _useState3 = useState(opened),\n      _useState4 = _slicedToArray(_useState3, 2),\n      innerOpened = _useState4[0],\n      setOpened = _useState4[1];\n\n    // INFO: нужно высчитывать для корректной работы портала\n    var dynamicTargetWidth = (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.offsetWidth;\n    var withNativeSelectVisible = valueType === 'native' ? classes.nativeSelectVisible : undefined;\n\n    // INFO: Из-за того, что классы передаются через ref,\n    // состояние пропсов после изменения view, size, target\n    // всегда предыдущее, поэтому нужно делать форс-ререндер\n    useDidMountEffect(function () {\n      forceUpdate();\n    }, [view, size, target]);\n    useEffect(function () {\n      if (disabled || readOnly) {\n        return;\n      }\n      setOpened(opened);\n    }, [opened, disabled, readOnly]);\n    var onInnerToggle = useCallback(function (openValue, event) {\n      if (disabled || readOnly) {\n        return;\n      }\n      if (onToggle) {\n        onToggle(openValue, event);\n        return;\n      }\n      setOpened(openValue);\n    }, [disabled, readOnly, onToggle]);\n    var updateValue = useCallback(function (item, event) {\n      var _rest$onChangeValue2;\n      var newValue = item.dataset.value;\n      if (rest.valueType === 'multiple') {\n        var _rest$onChangeValue;\n        var _newSelected = getNewSelected(rest.value, newValue, rest.valueType);\n        (_rest$onChangeValue = rest.onChangeValue) === null || _rest$onChangeValue === void 0 || _rest$onChangeValue.call(rest, _newSelected);\n        return;\n      }\n      var newSelected = getNewSelected(rest.value, newValue, 'single');\n      (_rest$onChangeValue2 = rest.onChangeValue) === null || _rest$onChangeValue2 === void 0 || _rest$onChangeValue2.call(rest, newSelected);\n      onInnerToggle === null || onInnerToggle === void 0 || onInnerToggle(false, event);\n    }, [rest.value, rest.valueType, rest.onChangeValue, onToggle, onInnerToggle]);\n    var onClickChildrenItem = useCallback(function (event) {\n      // INFO: Для корректной работы компонента Popper\n      event.stopPropagation();\n      var item = event.currentTarget;\n      updateValue(item, event);\n    }, [updateValue]);\n    var onNativeSelectChange = useCallback(function (event) {\n      var _rest$onChangeValue3;\n      if (rest.valueType === 'multiple') {\n        return;\n      }\n      var newValue = event.target.value;\n      var newSelected = getNewSelected(rest.value, newValue, 'native');\n      (_rest$onChangeValue3 = rest.onChangeValue) === null || _rest$onChangeValue3 === void 0 || _rest$onChangeValue3.call(rest, newSelected);\n    }, [rest.value, rest.valueType, rest.onChangeValue]);\n    var onChangeChipValue = useCallback(function (newValue) {\n      var _rest$onChangeValue4;\n      if (rest.valueType !== 'multiple') {\n        return;\n      }\n      (_rest$onChangeValue4 = rest.onChangeValue) === null || _rest$onChangeValue4 === void 0 || _rest$onChangeValue4.call(rest, newValue);\n    }, [rest.valueType]);\n    var _useKeyNavigation = useKeyNavigation({\n        controlledRefs: controlledRefs,\n        opened: innerOpened,\n        enumerationType: enumerationType,\n        valueType: valueType,\n        value: value,\n        updateOpened: onInnerToggle,\n        updateValue: updateValue\n      }),\n      onKeyDownTarget = _useKeyNavigation.onKeyDownTarget,\n      onKeyDownSelect = _useKeyNavigation.onKeyDownSelect;\n    var childrenArray = useMemo(function () {\n      return Children.toArray(children);\n    }, [children]);\n    var childrenMemo = useMemo(function () {\n      return getChildren(childrenArray, {\n        onClick: onClickChildrenItem,\n        childrenRefs: itemsRefs\n      }, value);\n    }, [childrenArray, value, innerOpened]);\n    var values = useMemo(function () {\n      return getValues(childrenArray, value);\n    }, [childrenArray, value]);\n    return /*#__PURE__*/React.createElement(StyledRoot, {\n      ref: selectRef\n    }, /*#__PURE__*/React.createElement(StyledNativeSelect, {\n      \"aria-invalid\": \"false\",\n      \"aria-hidden\": \"true\",\n      \"aria-readonly\": readOnly,\n      tabIndex: valueType === 'native' ? 0 : -1,\n      form: form,\n      name: name,\n      ref: handleRef,\n      value: \"\".concat(value),\n      disabled: disabled || readOnly,\n      onChange: onNativeSelectChange,\n      className: cx(ref === null || ref === void 0 ? void 0 : ref.classList.toString(), withNativeSelectVisible)\n    }, valueType === 'native' && childrenMemo), /*#__PURE__*/React.createElement(StyledPopover, {\n      role: role,\n      isOpen: innerOpened,\n      onToggle: onInnerToggle,\n      target: /*#__PURE__*/React.createElement(SelectTarget, {\n        tabIndex: valueType === 'native' ? -1 : 0,\n        opened: innerOpened,\n        target: target,\n        values: values,\n        label: label,\n        enumerationType: enumerationType,\n        readOnly: readOnly,\n        disabled: disabled,\n        size: size,\n        ref: targetRef,\n        chipsRefs: chipsRefs,\n        id: innerId,\n        onChange: onChangeChipValue,\n        onKeyDown: onKeyDownTarget\n      }),\n      className: cx(ref === null || ref === void 0 ? void 0 : ref.classList.toString()) // INFO: Прокидываем стили для Popover\n      ,\n\n      id: innerId,\n      offset: offset,\n      frame: frame,\n      placement: getPlacements(placement),\n      trigger: \"click\",\n      usePortal: usePortal,\n      selectWidth: dynamicTargetWidth,\n      isFocusTrapped: false,\n      preventOverflow: false,\n      closeOnEsc: false,\n      closeOnOverlayClick: true\n    }, /*#__PURE__*/React.createElement(Root, _extends({\n      ref: setRef,\n      target: target,\n      view: view,\n      size: size\n    }, rest), valueType !== 'native' && /*#__PURE__*/React.createElement(StyledSelect, {\n      onKeyDown: onKeyDownSelect\n    }, childrenMemo))));\n  });\n};\nexport var selectConfig = {\n  name: 'Select',\n  tag: 'div',\n  layout: selectRoot,\n  base: '',\n  variations: {\n    target: {\n      css: targetCSS\n    },\n    view: {\n      css: viewCSS\n    },\n    size: {\n      css: sizeCSS\n    }\n  },\n  defaults: {\n    view: 'default',\n    size: 'm'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}