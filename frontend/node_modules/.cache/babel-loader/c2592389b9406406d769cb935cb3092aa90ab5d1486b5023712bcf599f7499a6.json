{"ast":null,"code":"function _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport { css } from 'styled-components';\n/*\n * Класс корневого компонента PopupBaseRoot: `popup-base-root`\n */\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('PopupBase/utils');\nexport var popupBaseRootClass = 'popup-base-root';\nexport var endAnimationClass = 'popup-base-end-animation';\nexport var endTransitionClass = 'popup-base-end-transition';\nexport var handlePosition = function handlePosition(placement, offset) {\n  var x = '0rem';\n  var y = '0rem';\n  if (offset) {\n    var _offset = _slicedToArray(offset, 2),\n      _x = _offset[0],\n      _y = _offset[1];\n    x = typeof _x === 'number' ? \"\".concat(_x, \"rem\") : _x;\n    y = typeof _y === 'number' ? \"\".concat(_y, \"rem\") : _y;\n  }\n  if (!placement || placement === 'center') {\n    return css([\"left:calc(50% + \", \");top:calc(50% - \", \");transform:translate(-50%,-50%);\"], x, y);\n  }\n  var left;\n  var right;\n  var top;\n  var bottom;\n  var placements = placement.split('-');\n  placements.forEach(function (placement) {\n    switch (placement) {\n      case 'left':\n        left = x;\n        break;\n      case 'right':\n        right = x;\n        break;\n      case 'top':\n        top = y;\n        break;\n      case 'bottom':\n        bottom = y;\n        break;\n      default:\n        break;\n    }\n  });\n  var isCenteredX = left === undefined && right === undefined;\n  var isCenteredY = top === undefined && bottom === undefined;\n\n  // информация для переезда в new-hope: не забыть, что styled-component выпилит undefined свойства, а линария нет\n  return css([\"left:\", \";right:\", \";top:\", \";bottom:\", \";\", \" \", \"\"], left, right, top, bottom, isCenteredX && css([\"left:calc(50% + \", \");transform:translateX(-50%);\"], x), isCenteredY && css([\"top:calc(50% - \", \");transform:translateY(-50%);\"], y));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}