{"ast":null,"code":"var _excluded = [\"id\", \"items\", \"hoverIndex\", \"itemRole\", \"onItemSelect\", \"onHover\", \"role\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React from 'react';\nimport { DropdownSelfControlledPopup } from './DropdownPopup';\nimport { DropdownList } from './DropdownList';\nimport { DropdownItem } from './DropdownItem';\n/**\n * Меню dropdown, выводящее текущий список и все вложенные в него списки в popup.\n */\nexport var DropdownMenu = function DropdownMenu(_ref) {\n  var id = _ref.id,\n    items = _ref.items,\n    hoverIndex = _ref.hoverIndex,\n    itemRole = _ref.itemRole,\n    onItemSelect = _ref.onItemSelect,\n    onHover = _ref.onHover,\n    _ref$role = _ref.role,\n    role = _ref$role === void 0 ? 'menu' : _ref$role,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(DropdownList, _extends({}, rest, {\n    id: id,\n    role: role\n  }), items.map(function (item, i) {\n    return item.items && item.items.length ? /*#__PURE__*/React.createElement(DropdownSelfControlledPopup, {\n      role: \"presentation\",\n      key: item.value,\n      id: id ? \"\".concat(id, \"-nested-\").concat(i) : id,\n      trigger: \"hover\",\n      placement: \"right\",\n      disclosure: /*#__PURE__*/React.createElement(DropdownItem, _extends({}, item, {\n        id: id ? \"\".concat(id, \"-item-\").concat(i) : id,\n        role: itemRole,\n        isHovered: i === hoverIndex,\n        index: i,\n        onClick: onItemSelect,\n        onHover: onHover\n      }))\n    }, /*#__PURE__*/React.createElement(DropdownMenu, {\n      items: item.items,\n      onItemSelect: onItemSelect\n    })) : /*#__PURE__*/React.createElement(DropdownItem, _extends({}, item, {\n      key: item.value,\n      id: id ? \"\".concat(id, \"-item-\").concat(i) : id,\n      role: itemRole,\n      isHovered: i === hoverIndex,\n      index: i,\n      onClick: onItemSelect,\n      onHover: onHover\n    }));\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}