{"ast":null,"code":"var _StyledSelectButton, _StyledIconDrag;\nimport React, { memo } from 'react';\nimport styled, { css } from 'styled-components';\nimport { whiteSecondary, whiteTertiary, buttonAccent, critical, whitePrimary, Image } from '@salutejs/plasma-core';\nimport { IconDone, IconDrag } from '@salutejs/plasma-icons';\nimport { Footnote2 } from '../Typography';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('PreviewGallery/PreviewGalleryItemBase');\nexport var buttonMixin = function buttonMixin(vPosition, bgColor, color) {\n  return css([\"position:absolute;top:0.25rem;\", \":0.25rem;display:flex;align-items:center;justify-content:center;width:1.25rem;height:1.25rem;padding:0;appearance:none;background-color:\", \";border:0 none;border-radius:100%;color:\", \";cursor:pointer;\"], vPosition, bgColor, color);\n};\nexport var StyledSelectButton = /*#__PURE__*/styled.button.withConfig({\n  componentId: \"plasma-web-core__sc-1hth9wg-0\"\n})([\"\", \";\"], /*#__PURE__*/buttonMixin('left', buttonAccent, whitePrimary));\nexport var StyledTrashButton = /*#__PURE__*/styled.button.withConfig({\n  componentId: \"plasma-web-core__sc-1hth9wg-1\"\n})([\"\", \";&:hover{color:\", \";}\"], /*#__PURE__*/buttonMixin('right', critical, whiteSecondary), whitePrimary);\nexport var StyledIconDrag = /*#__PURE__*/styled(IconDrag).withConfig({\n  componentId: \"plasma-web-core__sc-1hth9wg-2\"\n})([\"\", \";svg{opacity:0.24;}\"], /*#__PURE__*/buttonMixin('left', 'transparent', whitePrimary));\n\n// NOTE: don't know how to fix ts error TS2742\n\nexport var StyledCaption = /*#__PURE__*/styled(Footnote2).withConfig({\n  componentId: \"plasma-web-core__sc-1hth9wg-3\"\n})([\"position:absolute;left:0.625rem;bottom:0.5rem;color:\", \";\"], whiteTertiary);\nexport var StyledItem = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-web-core__sc-1hth9wg-4\"\n})([\"position:relative;border-radius:0.75rem;height:100%;\", \" \", \"{display:none;}&:hover{transform:scale(1.04);\", \"{display:flex;}}\"], function (_ref) {\n  var width = _ref.width;\n  return width && css([\"width:\", \";\"], width);\n}, StyledTrashButton, StyledTrashButton);\n/**\n * Базовый компонент с превью.\n */\nexport var PreviewGalleryItemBase = /*#__PURE__*/memo(function (_ref2) {\n  var id = _ref2.id,\n    itemSize = _ref2.itemSize,\n    _ref2$image = _ref2.image,\n    image = _ref2$image === void 0 ? '' : _ref2$image,\n    component = _ref2.component,\n    customClickHandle = _ref2.customClickHandle,\n    isSelected = _ref2.isSelected,\n    caption = _ref2.caption,\n    interactionType = _ref2.interactionType,\n    actionIcon = _ref2.actionIcon,\n    status = _ref2.status,\n    onItemAction = _ref2.onItemAction,\n    onItemClick = _ref2.onItemClick,\n    actionDisabled = _ref2.actionDisabled;\n  var itemActionHandle = function itemActionHandle(event) {\n    event.stopPropagation();\n    onItemAction === null || onItemAction === void 0 || onItemAction(id);\n  };\n  return !component ? /*#__PURE__*/React.createElement(StyledItem, {\n    width: itemSize,\n    key: id,\n    onClick: customClickHandle ? function () {\n      return customClickHandle(id);\n    } : function () {\n      return onItemClick === null || onItemClick === void 0 ? void 0 : onItemClick(id);\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    base: \"div\",\n    src: image,\n    ratio: \"16 / 9\"\n  }), !actionDisabled && /*#__PURE__*/React.createElement(StyledTrashButton, {\n    type: \"button\",\n    onClick: itemActionHandle\n  }, actionIcon), interactionType === 'selectable' && status !== 'error' ? isSelected && (_StyledSelectButton || (_StyledSelectButton = /*#__PURE__*/React.createElement(StyledSelectButton, {\n    type: \"button\"\n  }, /*#__PURE__*/React.createElement(IconDone, {\n    size: \"xs\",\n    color: \"inherit\"\n  })))) : _StyledIconDrag || (_StyledIconDrag = /*#__PURE__*/React.createElement(StyledIconDrag, {\n    size: \"xs\",\n    color: \"inherit\"\n  })), caption && /*#__PURE__*/React.createElement(StyledCaption, null, caption)) : /*#__PURE__*/React.createElement(StyledItem, {\n    width: itemSize,\n    key: id,\n    onClick: customClickHandle ? function () {\n      return customClickHandle(id);\n    } : function () {\n      return onItemClick === null || onItemClick === void 0 ? void 0 : onItemClick(id);\n    }\n  }, component);\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}