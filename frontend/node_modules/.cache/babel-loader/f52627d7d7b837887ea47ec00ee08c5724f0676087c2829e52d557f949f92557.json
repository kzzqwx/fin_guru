{"ast":null,"code":"var _StyledTrigger;\nvar _excluded = [\"size\", \"view\", \"focused\", \"disabled\", \"labelPosition\", \"label\", \"id\", \"style\", \"className\", \"checked\", \"defaultChecked\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { css } from 'styled-components';\nimport { base as sizeCSS } from '../Switch/_size/base';\nimport { base as viewCSS } from '../Switch/_view/base';\nimport { base as focusedCSS } from '../Switch/_focused/base';\nimport { base as disabledCSS } from '../Switch/_disabled/base';\nimport { base as labelPositionCSS } from '../Switch/_label-position/base';\nimport { StyledInput, StyledLabel, StyledTrigger } from './Switch.styles';\nvar base = /*#__PURE__*/css([\"position:relative;display:flex;align-items:center;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);&:focus{outline:0 none;}\"]);\nexport var switchRoot = function switchRoot(Root) {\n  return /*#__PURE__*/forwardRef(function (props, ref) {\n    var size = props.size,\n      view = props.view,\n      focused = props.focused,\n      disabled = props.disabled,\n      labelPosition = props.labelPosition,\n      label = props.label,\n      id = props.id,\n      style = props.style,\n      className = props.className,\n      checked = props.checked,\n      defaultChecked = props.defaultChecked,\n      rest = _objectWithoutProperties(props, _excluded);\n    var exactChecked = Boolean(checked !== undefined ? checked : defaultChecked);\n    // const singleLineClass = singleLine ? 'single-line' : '';\n\n    return /*#__PURE__*/React.createElement(Root, {\n      view: view,\n      size: size,\n      disabled: disabled,\n      focused: focused,\n      labelPosition: labelPosition,\n      id: id,\n      style: style,\n      className: className\n    }, /*#__PURE__*/React.createElement(StyledInput, _extends({}, rest, {\n      ref: ref,\n      role: \"switch\",\n      \"aria-checked\": exactChecked,\n      type: \"checkbox\",\n      checked: checked,\n      defaultChecked: defaultChecked,\n      disabled: disabled\n    })), /*#__PURE__*/React.createElement(StyledLabel, {\n      tabIndex: -1\n    }, label), _StyledTrigger || (_StyledTrigger = /*#__PURE__*/React.createElement(StyledTrigger, {\n      \"aria-hidden\": true\n    })));\n  });\n};\nexport var switchConfig = {\n  name: 'Switch',\n  tag: 'label',\n  base: base,\n  layout: switchRoot,\n  variations: {\n    size: {\n      css: sizeCSS\n    },\n    view: {\n      css: viewCSS\n    },\n    disabled: {\n      css: disabledCSS,\n      attrs: true\n    },\n    focused: {\n      css: focusedCSS\n    },\n    labelPosition: {\n      css: labelPositionCSS\n    }\n  },\n  defaults: {\n    size: 's',\n    view: 'default'\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}