{"ast":null,"code":"import { useEffect, useRef } from 'react';\nvar navKeys = ['ArrowUp', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'Enter', 'PageUp', 'PageDown', 'Home', 'End'];\nvar getRemoteKey = function getRemoteKey(key, isLong) {\n  switch (key) {\n    case 'ArrowUp':\n      return isLong ? 'LONG_UP' : 'UP';\n    case 'ArrowDown':\n      return isLong ? 'LONG_DOWN' : 'DOWN';\n    case 'ArrowLeft':\n      return isLong ? 'LONG_LEFT' : 'LEFT';\n    case 'ArrowRight':\n      return isLong ? 'LONG_RIGHT' : 'RIGHT';\n    case 'Enter':\n      return isLong ? 'LONG_OK' : 'OK';\n    case 'PageUp':\n      return 'PAGE_UP';\n    case 'PageDown':\n      return 'PAGE_DOWN';\n    case 'Home':\n      return 'HOME';\n    case 'End':\n      return 'END';\n    default:\n      return undefined;\n  }\n};\n\n/**\n * Создает слушателя событий клавиатуры,\n * который вызывает коллбек при нажатии кнопок навигации.\n * @param {Function} cb\n * @param {number} keypressTimeMs\n * @param {AddEventListenerOptions} eventListenerOptions\n * @return {void}\n */\nexport var useRemoteListener = function useRemoteListener(cb) {\n  var keypressTimeMs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 150;\n  var eventListenerOptions = arguments.length > 2 ? arguments[2] : undefined;\n  var keydown = useRef(null);\n  useEffect(function () {\n    var handleKeydown = function handleKeydown(event) {\n      var isLong = Boolean(keydown.current && Date.now() - keydown.current < keypressTimeMs);\n      var remoteKey = getRemoteKey(event.key, isLong);\n      if (!remoteKey) {\n        return;\n      }\n      cb(remoteKey, event);\n      keydown.current = Date.now();\n    };\n    var handleKeyup = function handleKeyup(event) {\n      if (navKeys.indexOf(event.key) === -1) {\n        return;\n      }\n      keydown.current = null;\n    };\n    window.addEventListener('keydown', handleKeydown, eventListenerOptions);\n    window.addEventListener('keyup', handleKeyup, eventListenerOptions);\n    return function () {\n      window.removeEventListener('keydown', handleKeydown, eventListenerOptions);\n      window.removeEventListener('keyup', handleKeyup, eventListenerOptions);\n    };\n  }, [cb]);\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}