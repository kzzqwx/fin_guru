{"ast":null,"code":"var _excluded = [\"items\", \"index\", \"autoscroll\", \"onIndexChange\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef, useMemo, useCallback, useRef } from 'react';\nimport { useForkRef } from '../../hooks';\nimport { TabItemRefs, TabsContext } from './TabsContext';\nimport { Tabs } from './Tabs';\nimport { TabItem } from './TabItem';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Tabs/createTabsController');\nvar Keys = /*#__PURE__*/function (Keys) {\n  Keys[Keys[\"end\"] = 35] = \"end\";\n  Keys[Keys[\"home\"] = 36] = \"home\";\n  Keys[Keys[\"left\"] = 37] = \"left\";\n  Keys[Keys[\"right\"] = 39] = \"right\";\n  return Keys;\n}(Keys || {});\n/**\n * Функция для создания `TabController`, которая дает возможность\n * кастомизировать стили, при этом сохраняя единый интерфейс и функционал.\n */\nexport function createTabsController() {\n  var ListComponent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Tabs;\n  var ItemComponent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TabItem;\n  // eslint-disable-next-line prefer-arrow-callback\n  return /*#__PURE__*/forwardRef(function TabsController(_ref, outerRef) {\n    var items = _ref.items,\n      index = _ref.index,\n      autoscroll = _ref.autoscroll,\n      onIndexChange = _ref.onIndexChange,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    var disabled = rest.disabled;\n    var refs = useMemo(function () {\n      return new TabItemRefs();\n    }, []);\n    var innerRef = useRef(null);\n    var ref = useForkRef(outerRef, innerRef);\n    var onItemFocus = useCallback(function (event) {\n      var _innerRef$current;\n      if (disabled) {\n        return;\n      }\n      var focusIndex = refs.items.findIndex(function (itemRef) {\n        return itemRef.current === event.target;\n      });\n      var focusItem = refs.items[focusIndex];\n      if (focusIndex === index) {\n        return;\n      }\n      onIndexChange === null || onIndexChange === void 0 || onIndexChange(focusIndex);\n      var parent = (_innerRef$current = innerRef.current) === null || _innerRef$current === void 0 ? void 0 : _innerRef$current.parentNode;\n      if (autoscroll && parent && focusItem !== null && focusItem !== void 0 && focusItem.current) {\n        var _focusItem$current;\n        var _focusItem$current$ge = (_focusItem$current = focusItem.current) === null || _focusItem$current === void 0 ? void 0 : _focusItem$current.getBoundingClientRect(),\n          x = _focusItem$current$ge.x,\n          width = _focusItem$current$ge.width;\n        var _parent$getBoundingCl = parent.getBoundingClientRect(),\n          parentX = _parent$getBoundingCl.x,\n          parentWidth = _parent$getBoundingCl.width;\n        var relativeX = x - parentX;\n        var style = window.getComputedStyle(parent);\n        var marginLeft = Number.parseInt(style.marginLeft, 10);\n        var marginRight = Number.parseInt(style.marginRight, 10);\n        if (relativeX < -marginLeft) {\n          parent.scrollLeft += relativeX + marginLeft;\n          return;\n        }\n        if (parentWidth <= relativeX + width - marginRight) {\n          parent.scrollLeft += relativeX + width - parentWidth - marginRight;\n        }\n      }\n    }, [refs, innerRef, index, onIndexChange, disabled]);\n    var onKeyDown = useCallback(function (event) {\n      if (disabled) {\n        return;\n      }\n      var minIndex = 0;\n      var maxIndex = refs.items.length - 1;\n      var nextIndex;\n      switch (event.keyCode) {\n        case Keys.end:\n          nextIndex = maxIndex;\n          break;\n        case Keys.left:\n          nextIndex = index > minIndex ? index - 1 : index;\n          break;\n        case Keys.right:\n          nextIndex = index < maxIndex ? index + 1 : index;\n          break;\n        case Keys.home:\n          nextIndex = minIndex;\n          break;\n        default:\n          return;\n      }\n      if (nextIndex !== index) {\n        var _refs$items$nextIndex;\n        event.preventDefault();\n        (_refs$items$nextIndex = refs.items[nextIndex].current) === null || _refs$items$nextIndex === void 0 || _refs$items$nextIndex.focus();\n      }\n    }, [index, onIndexChange, disabled]);\n    return /*#__PURE__*/React.createElement(TabsContext.Provider, {\n      value: refs\n    }, /*#__PURE__*/React.createElement(ListComponent, _extends({\n      ref: ref,\n      onKeyDown: onKeyDown\n    }, rest), items.map(function (_ref2, i) {\n      var label = _ref2.label,\n        contentLeft = _ref2.contentLeft;\n      return /*#__PURE__*/React.createElement(ItemComponent, {\n        key: i,\n        isActive: i === index,\n        tabIndex: !disabled && i === index ? 0 : -1,\n        contentLeft: contentLeft,\n        onFocus: onItemFocus,\n        disabled: disabled\n      }, label);\n    })));\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}