{"ast":null,"code":"var _excluded = [\"id\", \"options\", \"size\", \"value\", \"max\", \"min\", \"disabled\", \"controls\", \"autofocus\", \"visibleItems\", \"scrollSnapType\", \"onChange\", \"name\", \"enableNativeControl\", \"daysAriaLabel\", \"monthsAriaLabel\", \"yearsAriaLabel\", \"infiniteScroll\", \"disableScrollSnapAlign\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _construct(t, e, r) {\n  if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n  var o = [null];\n  o.push.apply(o, e);\n  var p = new (t.bind.apply(t, o))();\n  return r && _setPrototypeOf(p, r.prototype), p;\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function _isNativeReflectConstruct() {\n    return !!t;\n  })();\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useIsomorphicLayoutEffect } from '@salutejs/plasma-core';\nimport { SimpleDatePicker } from './SimpleDatePicker';\nimport { getDateValues, getNormalizeValues, getRange, getTimeValues, getValuesInRange, isChanged } from './utils';\nimport { collectPackageInfo } from '../../collectPackageInfo';\ncollectPackageInfo('Pickers/DatePicker');\nvar defaultOptions = {\n  years: true,\n  months: true,\n  days: true,\n  shortMonthName: false\n};\n\n/**\n * Вернёт максимальное количество дней в месяце\n */\nvar getMaxDayInMonth = function getMaxDayInMonth(month, year) {\n  return new Date(year, month + 1, 0).getDate();\n};\n\n/**\n * Вернёт секунды\n */\nvar getSeconds = function getSeconds(_ref) {\n  var _ref2 = _slicedToArray(_ref, 3),\n    year = _ref2[0],\n    month = _ref2[1],\n    day = _ref2[2];\n  return new Date(year, month, day, 0, 0, 0).getTime();\n};\nvar StyledWrapper = /*#__PURE__*/styled.div.withConfig({\n  componentId: \"plasma-ui__sc-1fca412-0\"\n})([\"display:flex;width:max-content;\"]);\n/**\n * Компонент для выбора даты.\n */\nexport var DatePicker = function DatePicker(_ref3) {\n  var id = _ref3.id,\n    _ref3$options = _ref3.options,\n    options = _ref3$options === void 0 ? defaultOptions : _ref3$options,\n    size = _ref3.size,\n    value = _ref3.value,\n    max = _ref3.max,\n    min = _ref3.min,\n    disabled = _ref3.disabled,\n    controls = _ref3.controls,\n    autofocus = _ref3.autofocus,\n    visibleItems = _ref3.visibleItems,\n    scrollSnapType = _ref3.scrollSnapType,\n    onChange = _ref3.onChange,\n    name = _ref3.name,\n    enableNativeControl = _ref3.enableNativeControl,\n    dayAriaLabel = _ref3.daysAriaLabel,\n    monthAriaLabel = _ref3.monthsAriaLabel,\n    yearAriaLabel = _ref3.yearsAriaLabel,\n    infiniteScroll = _ref3.infiniteScroll,\n    _ref3$disableScrollSn = _ref3.disableScrollSnapAlign,\n    disableScrollSnapAlign = _ref3$disableScrollSn === void 0 ? false : _ref3$disableScrollSn,\n    rest = _objectWithoutProperties(_ref3, _excluded);\n  var normalizeValues = React.useMemo(function () {\n    return getNormalizeValues(getDateValues, getSeconds)(value, min, max);\n  }, [value]);\n  var _React$useState = React.useState(normalizeValues),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    _React$useState2$ = _slicedToArray(_React$useState2[0], 3),\n    year = _React$useState2$[0],\n    month = _React$useState2$[1],\n    day = _React$useState2$[2],\n    setState = _React$useState2[1];\n  var _getDateValues = getDateValues(min),\n    _getDateValues2 = _slicedToArray(_getDateValues, 3),\n    minYear = _getDateValues2[0],\n    minMonth = _getDateValues2[1],\n    minDay = _getDateValues2[2];\n  var _getDateValues3 = getDateValues(max),\n    _getDateValues4 = _slicedToArray(_getDateValues3, 3),\n    maxYear = _getDateValues4[0],\n    maxMonth = _getDateValues4[1],\n    maxDay = _getDateValues4[2];\n  var _React$useMemo = React.useMemo(function () {\n      if (minYear === year && maxYear === year) {\n        return [minMonth, maxMonth];\n      }\n      if (minYear >= year) {\n        return [minMonth, 11];\n      }\n      if (maxYear <= year) {\n        return [0, maxMonth];\n      }\n      return [0, 11];\n    }, [minMonth, maxMonth, year, minYear, maxYear]),\n    _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n    monthsFrom = _React$useMemo2[0],\n    monthsTo = _React$useMemo2[1];\n  var _React$useMemo3 = React.useMemo(function () {\n      if (year >= maxYear && maxMonth === month) {\n        return [1, maxDay];\n      }\n      var maxDayInMonth = getMaxDayInMonth(month, year);\n      if (year <= minYear && minMonth === month) {\n        return [minDay, maxDayInMonth];\n      }\n      return [1, maxDayInMonth];\n    }, [minMonth, maxMonth, minDay, maxDay, year, month, minYear, maxYear]),\n    _React$useMemo4 = _slicedToArray(_React$useMemo3, 2),\n    daysFrom = _React$useMemo4[0],\n    daysTo = _React$useMemo4[1];\n  var _React$useMemo5 = React.useMemo(function () {\n      return [getRange(daysFrom, daysTo)];\n    }, [daysFrom, daysTo]),\n    _React$useMemo6 = _slicedToArray(_React$useMemo5, 1),\n    daysRange = _React$useMemo6[0];\n  var _React$useMemo7 = React.useMemo(function () {\n      return [getRange(monthsFrom, monthsTo)];\n    }, [monthsFrom, monthsTo]),\n    _React$useMemo8 = _slicedToArray(_React$useMemo7, 1),\n    monthsRange = _React$useMemo8[0];\n  var _React$useMemo9 = React.useMemo(function () {\n      return [getRange(minYear, maxYear)];\n    }, [minYear, maxYear]),\n    _React$useMemo10 = _slicedToArray(_React$useMemo9, 1),\n    yearRange = _React$useMemo10[0];\n  var getNextMonth = React.useCallback(function (currentMonth, currentYear) {\n    if (currentYear >= maxYear && currentMonth >= maxMonth) {\n      return maxMonth;\n    }\n    if (currentYear <= minYear && currentMonth <= minMonth) {\n      return minMonth;\n    }\n    return currentMonth;\n  }, [minMonth, maxMonth, minYear, maxYear]);\n  var getNextDay = React.useCallback(function (nextDay, nextMonth, nextYear) {\n    if (nextYear >= maxYear && nextMonth >= maxMonth && nextDay >= maxDay) {\n      return maxDay;\n    }\n    if (nextYear <= minYear && nextMonth <= maxMonth && nextDay <= minDay) {\n      return minDay;\n    }\n    var possibleMaxDayInMonth = getMaxDayInMonth(nextMonth, nextYear);\n    if (possibleMaxDayInMonth < nextDay) {\n      return possibleMaxDayInMonth;\n    }\n    return nextDay;\n  }, [minDay, maxDay, maxMonth, minYear, maxYear]);\n\n  // TODO: https://github.com/salute-developers/plasma/issues/242\n  var onYearChange = React.useCallback(function (_ref4) {\n    var y = _ref4.value;\n    setState(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n        m = _ref6[1],\n        d = _ref6[2];\n      var nextMonth = getNextMonth(m, y);\n      var nextDay = getNextDay(d, nextMonth, y);\n      return [y, nextMonth, nextDay];\n    });\n  }, [getNextDay, getNextMonth]);\n\n  // TODO: https://github.com/salute-developers/plasma/issues/242\n  var onMonthChange = React.useCallback(function (_ref7) {\n    var m = _ref7.value;\n    setState(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 3),\n        y = _ref9[0],\n        d = _ref9[2];\n      var nextDay = getNextDay(d, m, y);\n      return [y, m, nextDay];\n    });\n  }, [getNextDay]);\n  // TODO: https://github.com/salute-developers/plasma/issues/242\n  var onDayChange = React.useCallback(function (_ref10) {\n    var d = _ref10.value;\n    return setState(function (_ref11) {\n      var _ref12 = _slicedToArray(_ref11, 2),\n        y = _ref12[0],\n        m = _ref12[1];\n      return [y, m, d];\n    });\n  }, []);\n\n  /**\n   * При очередном прогоне, если значения year, month, day изменились,\n   * необходимо вызвать событие изменения, создав новый экземпляр Date\n   */\n  useIsomorphicLayoutEffect(function () {\n    var oldDate = normalizeValues;\n    if (onChange && isChanged(oldDate, [year, month, day])) {\n      onChange(_construct(Date, [year, month, day].concat(_toConsumableArray(getTimeValues(value)))));\n    }\n  }, [year, month, day]);\n\n  /**\n   * Если значение value обновилось извне, необходимо изменить стейт\n   * и вызвать событие изменения, создав новый экземпляр Date\n   */\n  useIsomorphicLayoutEffect(function () {\n    setState(function (prevDate) {\n      var newDate = normalizeValues;\n      if (!isChanged(prevDate, newDate)) {\n        return prevDate;\n      }\n      if (onChange) {\n        var _newDate = _slicedToArray(newDate, 3),\n          newYear = _newDate[0],\n          newMonth = _newDate[1],\n          newDay = _newDate[2];\n        onChange(_construct(Date, [newYear, newMonth, newDay].concat(_toConsumableArray(getTimeValues(value)))));\n      }\n      return newDate;\n    });\n  }, [value, normalizeValues]);\n  var getOption = function getOption(key) {\n    return key in options ? options[key] : defaultOptions[key];\n  };\n  var daysOption = getOption('days');\n  var monthsOption = getOption('months');\n  var yearsOption = getOption('years');\n  var shortMonthNameOption = getOption('shortMonthName');\n  var monthNameFormat = shortMonthNameOption ? 'short' : 'long';\n  var newTime = getValuesInRange([yearRange, monthsRange, daysRange], [year, month, day], value);\n  if (isChanged([year, month, day], newTime)) {\n    setState(newTime);\n  }\n  return /*#__PURE__*/React.createElement(StyledWrapper, _extends({\n    id: id\n  }, rest), daysOption && /*#__PURE__*/React.createElement(SimpleDatePicker, {\n    id: id,\n    autofocus: autofocus,\n    size: size,\n    type: \"day\",\n    value: day,\n    range: daysRange,\n    disabled: disabled,\n    controls: controls,\n    visibleItems: visibleItems,\n    scrollSnapType: scrollSnapType,\n    infiniteScroll: infiniteScroll,\n    onChange: onDayChange,\n    \"aria-label\": dayAriaLabel,\n    disableScrollSnapAlign: disableScrollSnapAlign\n  }), monthsOption && /*#__PURE__*/React.createElement(SimpleDatePicker, {\n    id: id,\n    autofocus: autofocus && !options.days,\n    size: size,\n    type: \"month\",\n    monthNameFormat: monthNameFormat,\n    value: month,\n    range: monthsRange,\n    disabled: disabled,\n    controls: controls,\n    visibleItems: visibleItems,\n    scrollSnapType: scrollSnapType,\n    infiniteScroll: infiniteScroll,\n    onChange: onMonthChange,\n    \"aria-label\": monthAriaLabel,\n    disableScrollSnapAlign: disableScrollSnapAlign\n  }), yearsOption && /*#__PURE__*/React.createElement(SimpleDatePicker, {\n    id: id,\n    autofocus: autofocus && !options.days && !options.months,\n    size: size,\n    type: \"year\",\n    value: year,\n    range: yearRange,\n    disabled: disabled,\n    controls: controls,\n    visibleItems: visibleItems,\n    scrollSnapType: scrollSnapType,\n    infiniteScroll: infiniteScroll,\n    onChange: onYearChange,\n    \"aria-label\": yearAriaLabel,\n    disableScrollSnapAlign: disableScrollSnapAlign\n  }), enableNativeControl && /*#__PURE__*/React.createElement(\"input\", {\n    type: \"hidden\",\n    value: value.toISOString(),\n    name: name\n  }));\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}