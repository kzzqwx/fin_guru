{"ast":null,"code":"var _excluded = [\"id\", \"size\", \"disabled\", \"status\", \"label\", \"animatedHint\", \"contentLeft\", \"contentRight\", \"helperText\", \"className\", \"style\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport React, { forwardRef } from 'react';\nimport { Field } from './Field';\nimport { Input } from './Input';\n\n// eslint-disable-next-line prefer-arrow-callback\nexport var TextFieldWeb = /*#__PURE__*/forwardRef(function TextField(_ref, ref) {\n  var id = _ref.id,\n    size = _ref.size,\n    disabled = _ref.disabled,\n    status = _ref.status,\n    label = _ref.label,\n    animatedHint = _ref.animatedHint,\n    contentLeft = _ref.contentLeft,\n    contentRight = _ref.contentRight,\n    helperText = _ref.helperText,\n    className = _ref.className,\n    style = _ref.style,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(Field, {\n    id: id,\n    disabled: disabled,\n    label: animatedHint !== 'label' ? label : undefined,\n    helperText: helperText,\n    contentLeft: contentLeft,\n    contentRight: contentRight,\n    status: status,\n    className: className,\n    style: style\n  }, /*#__PURE__*/React.createElement(Input, _extends({}, rest, {\n    ref: ref,\n    id: id,\n    disabled: disabled,\n    size: size,\n    status: status,\n    label: label,\n    animatedHint: animatedHint,\n    hasContentLeft: Boolean(contentLeft),\n    hasContentRight: Boolean(contentRight),\n    \"aria-labelledby\": id ? \"\".concat(id, \"-label\") : undefined,\n    \"aria-describedby\": id ? \"\".concat(id, \"-helpertext\") : undefined\n  })));\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}